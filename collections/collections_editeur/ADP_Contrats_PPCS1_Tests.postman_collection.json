{
	"info": {
		"_postman_id": "ec61bf50-b211-4f84-aa5f-6a8e5e9ada81",
		"name": "ADP_Contrats_PPCS1_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15648122",
		"_collection_link": "https://inetum-cleva.postman.co/workspace/CLEVA-Master~491a802d-eace-4fda-b198-5d182da34b41/collection/15648122-ec61bf50-b211-4f84-aa5f-6a8e5e9ada81?action=share&creator=15648122&source=collection_link"
	},
	"item": [
		{
			"name": "Connexion et initialisation",
			"item": [
				{
					"name": "Connexion CLEVA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Mes informations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"me"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/me",
									"host": [
										"{{url}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:56:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"communication\": {},\n        \"person\": {\n            \"completeName\": \"ADMIN ADP\",\n            \"creationDate\": \"2021-03-22T19:01:50+01:00\",\n            \"familyName\": \"ADMIN\",\n            \"firstName\": \"ADP\",\n            \"freeZones\": {},\n            \"id\": \"1000481\",\n            \"lastUpdateDate\": \"2021-03-22T19:01:50+01:00\"\n        },\n        \"profiles\": [\n            \"P_WEBADMIN\"\n        ],\n        \"userCompanyCode\": \"ADP**\",\n        \"userCompanyLabel\": \"Starterbox - ADP\",\n        \"userLogin\": \"adp.admin\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Informations système",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/system/info",
							"host": [
								"{{url}}"
							],
							"path": [
								"system",
								"info"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/system/info",
									"host": [
										"{{url}}"
									],
									"path": [
										"system",
										"info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:57:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"status\": \"UP\",\n        \"elasticSearch\": {\n            \"status\": \"NOT_CONFIGURED\"\n        },\n        \"v9_database\": {\n            \"status\": \"UP\",\n            \"tag\": \"cleva_version_tag-2021_08\"\n        },\n        \"applicationServer\": {\n            \"status\": \"UP\",\n            \"upSince\": \"2021-12-28T15:25:43+01:00\",\n            \"version\": \"15.5.0.rc202147-1\"\n        },\n        \"akka_cluster\": {\n            \"status\": \"NOT_CONFIGURED\"\n        },\n        \"transverse_database\": {\n            \"status\": \"UP\"\n        }\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set('folderName','Connexion et initialisation');"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Listes globales",
			"item": [
				{
					"name": "Connexion CLEVA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Liste NAF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Listes retournées\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"// L'élément selectionné dans la liste\r",
									"pm.collectionVariables.set(\"naf\", codes[_.random(0, codes.length-1)].code);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?maxResult=50",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "%Activ",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "50"
								},
								{
									"key": "code",
									"value": "01.11",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "NAF"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?maxResult=50",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "%Activ",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "50"
										},
										{
											"key": "code",
											"value": "01.11",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "NAF"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 27 Dec 2021 13:21:21 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"NAF\",\n        \"description\": \"NAF codes\",\n        \"moreResults\": true,\n        \"title\": \"NAF codes\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"88.10B\",\n                \"label\": \"Accueil accompagn. sans héberg. adultes handicapés ou pers. âgées\"\n            },\n            {\n                \"code\": \"8810B\",\n                \"label\": \"Accueil accompagn. sans héberg. adultes handicapés ou pers. âgées\"\n            },\n            {\n                \"code\": \"88.91A\",\n                \"label\": \"Accueil de jeunes enfants\"\n            },\n            {\n                \"code\": \"8891A\",\n                \"label\": \"Accueil de jeunes enfants\"\n            },\n            {\n                \"code\": \"853C\",\n                \"label\": \"Accueil des adultes handicapés\"\n            },\n            {\n                \"code\": \"853B\",\n                \"label\": \"Accueil des enfants en difficulté\"\n            },\n            {\n                \"code\": \"853A\",\n                \"label\": \"Accueil des enfants handicapés\"\n            },\n            {\n                \"code\": \"853D\",\n                \"label\": \"Accueil des personnes âgées\"\n            },\n            {\n                \"code\": \"88.91B\",\n                \"label\": \"Accueil ou accompagnement sans hébergement d’enfants handicapés\"\n            },\n            {\n                \"code\": \"8891B\",\n                \"label\": \"Accueil ou accompagnement sans hébergement d’enfants handicapés\"\n            },\n            {\n                \"code\": \"88.10\",\n                \"label\": \"Action soc. sans héberg. pers. âgées & handicapées\"\n            },\n            {\n                \"code\": \"8530\",\n                \"label\": \"Action sociale\"\n            },\n            {\n                \"code\": \"88.99B\",\n                \"label\": \"Action sociale sans hébergement n.c.a.\"\n            },\n            {\n                \"code\": \"8899B\",\n                \"label\": \"Action sociale sans hébergement n.c.a.\"\n            },\n            {\n                \"code\": \"88.91\",\n                \"label\": \"Action sociale sans hébergement pour jeunes enfants\"\n            },\n            {\n                \"code\": \"82.91\",\n                \"label\": \"Activ. de recouvrement factures & d'info. financ. s/la clientèle\"\n            },\n            {\n                \"code\": \"82.91Z\",\n                \"label\": \"Activ. de recouvrement factures & d'info. financ. s/la clientèle\"\n            },\n            {\n                \"code\": \"8291Z\",\n                \"label\": \"Activ. de recouvrement factures et d'info. financ. s/la clientèle\"\n            },\n            {\n                \"code\": \"98.20\",\n                \"label\": \"Activ. indifférenciées ménages  : produc. services (usage propre)\"\n            },\n            {\n                \"code\": \"98.20Z\",\n                \"label\": \"Activ. indifférenciées ménages  : produc. services (usage propre)\"\n            },\n            {\n                \"code\": \"9820Z\",\n                \"label\": \"Activ. indifférenciées ménages : produc. services (usage propre)\"\n            },\n            {\n                \"code\": \"98.10\",\n                \"label\": \"Activ. indifférenciées ménages : producteurs biens (usage propre)\"\n            },\n            {\n                \"code\": \"98.10Z\",\n                \"label\": \"Activ. indifférenciées ménages : producteurs biens (usage propre)\"\n            },\n            {\n                \"code\": \"9810Z\",\n                \"label\": \"Activ. indifférenciées ménages : producteurs biens (usage propre)\"\n            },\n            {\n                \"code\": \"53.10\",\n                \"label\": \"Activ. poste dans le cadre d'une obligation de service universel\"\n            },\n            {\n                \"code\": \"53.10Z\",\n                \"label\": \"Activ. poste dans le cadre d'une obligation de service universel\"\n            },\n            {\n                \"code\": \"5310Z\",\n                \"label\": \"Activ. poste dans le cadre d'une obligation de service universel\"\n            },\n            {\n                \"code\": \"9100\",\n                \"label\": \"Activites Associatives\"\n            },\n            {\n                \"code\": \"9900\",\n                \"label\": \"Activites Extra-Territoriales\"\n            },\n            {\n                \"code\": \"7000\",\n                \"label\": \"Activites Immobilieres\"\n            },\n            {\n                \"code\": \"7200\",\n                \"label\": \"Activites Informatiques\"\n            },\n            {\n                \"code\": \"9200\",\n                \"label\": \"Activites Recreatives, Culturelles Et Sportives\"\n            },\n            {\n                \"code\": \"71.12A\",\n                \"label\": \"Activité des géomètres\"\n            },\n            {\n                \"code\": \"7112A\",\n                \"label\": \"Activité des géomètres\"\n            },\n            {\n                \"code\": \"86.21\",\n                \"label\": \"Activité des médecins généralistes\"\n            },\n            {\n                \"code\": \"86.21Z\",\n                \"label\": \"Activité des médecins généralistes\"\n            },\n            {\n                \"code\": \"8621Z\",\n                \"label\": \"Activité des médecins généralistes\"\n            },\n            {\n                \"code\": \"86.22\",\n                \"label\": \"Activité des médecins spécialistes\"\n            },\n            {\n                \"code\": \"74.90A\",\n                \"label\": \"Activité des économistes de la construction\"\n            },\n            {\n                \"code\": \"7490A\",\n                \"label\": \"Activité des économistes de la construction\"\n            },\n            {\n                \"code\": \"86.90E\",\n                \"label\": \"Activité profess. rééducation appareillage & pédicures-podologues\"\n            },\n            {\n                \"code\": \"8690E\",\n                \"label\": \"Activité profess. rééducation appareillage et pédicures-podologues\"\n            },\n            {\n                \"code\": \"923A\",\n                \"label\": \"Activités artistiques\"\n            },\n            {\n                \"code\": \"86.22B\",\n                \"label\": \"Activités chirurgicales\"\n            },\n            {\n                \"code\": \"8622B\",\n                \"label\": \"Activités chirurgicales\"\n            },\n            {\n                \"code\": \"9210\",\n                \"label\": \"Activités cinématographiques et vidéo\"\n            },\n            {\n                \"code\": \"81.10\",\n                \"label\": \"Activités combinées de soutien lié aux bâtiments\"\n            },\n            {\n                \"code\": \"81.10Z\",\n                \"label\": \"Activités combinées de soutien lié aux bâtiments\"\n            },\n            {\n                \"code\": \"8110Z\",\n                \"label\": \"Activités combinées de soutien lié aux bâtiments\"\n            },\n            {\n                \"code\": \"69.20\",\n                \"label\": \"Activités comptables\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Listes des produits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"function sante(produit) {\r",
									"  return  produit.label.includes('Santé');\r",
									"}\r",
									"\r",
									"function prevoyance(assiette) {\r",
									"  return  assiette.label.includes('Prévoyance');\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"productCode\", \"PPCS1\");\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Prévoyance",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Prévoyance"
								},
								{
									"key": "maxResult",
									"value": "20",
									"disabled": true
								},
								{
									"key": "code",
									"value": "01.11",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PRODUCTS_CODE"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "%Activ",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "20",
											"disabled": true
										},
										{
											"key": "code",
											"value": "01.11",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PRODUCTS_CODE"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:58:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"PRODUCTS_CODE\",\n        \"description\": \"Products\",\n        \"moreResults\": false,\n        \"title\": \"Products\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"PPCS1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"HEALTHPROVISION\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Adhérent\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Prévoyance déclaratif : Produit collectif standard\"\n            },\n            {\n                \"code\": \"PPCM1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"HEALTHPROVISION\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Adhérent\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Prévoyance déclaratif : Produit collectif sur mesure \"\n            },\n            {\n                \"code\": \"TNSMALHT\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"TNS MA SANTE\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"SANTE TNS MA LHT\"\n            },\n            {\n                \"code\": \"PSCS1\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Assuré et ayants-droit\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"Santé précalculé : Produit collectif standard\"\n            },\n            {\n                \"code\": \"PSCM1\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Assuré et ayants-droit\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"Santé précalculé : Produit collectif sur mesure\"\n            },\n            {\n                \"code\": \"PEID1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"LOAN\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"L'emprunteur et le co-emprunteur\",\n                    \"riskType.0\": \"EMPRUNTEUR\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Souche Garantie Emprunteur\"\n            },\n            {\n                \"code\": \"PGID1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskActivity.0\": \"IARD\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Objet Gav\",\n                    \"riskType.0\": \"MISC\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Souche Garantie accident de la vie\"\n            },\n            {\n                \"code\": \"PTFD1\",\n                \"details\": {\n                    \"branchCode\": \"TRANSPORT\",\n                    \"riskReference.0\": \"TRA\",\n                    \"riskName.0\": \"Transport de marchandises\",\n                    \"riskType.0\": \"MISC\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Transport\"\n                },\n                \"label\": \"Souche Transport par voie Maritime ou Aérienne\"\n            },\n            {\n                \"code\": \"PAID1\",\n                \"details\": {\n                    \"branchCode\": \"VEH_TERR\",\n                    \"riskCategory.0\": \"AUTO\",\n                    \"riskActivity.0\": \"IARD\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Véhicule\",\n                    \"riskType.0\": \"AUTO\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Véhicules terrestres\"\n                },\n                \"label\": \"Souche automobile particulier\"\n            },\n            {\n                \"code\": \"PMID1\",\n                \"details\": {\n                    \"branchCode\": \"INCENDIE\",\n                    \"riskCategory.0\": \"HOME\",\n                    \"riskActivity.0\": \"IARD\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Risque habitation\",\n                    \"riskType.0\": \"MISC\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Incendie et Eléments naturels\"\n                },\n                \"label\": \"Souche multirisques habitation\"\n            },\n            {\n                \"code\": \"PATS1\",\n                \"details\": {\n                    \"branchCode\": \"COMMUN\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Travailleur Non Salarié\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Branche Commune ADP\"\n                },\n                \"label\": \"TNS - Association\"\n            },\n            {\n                \"code\": \"PPTS1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"HEALTHPROVISION\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Travailleur Non Salarié\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"TNS - Prévoyance\"\n            },\n            {\n                \"code\": \"PSTS1\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Travailleur Non Salarié\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"TNS - Santé\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste titres entreprises",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"enterpriseTitles\", codes);\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"customerTitle\", codes[_.random(0, codes.length-1)].code);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=LEGAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "LEGAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "TITLES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=LEGAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "LEGAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "TITLES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:59:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"TITLES\",\n        \"description\": \"List of titles\",\n        \"moreResults\": false,\n        \"title\": \"TITLES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"ADMI\",\n                \"label\": \"ADMI\"\n            },\n            {\n                \"code\": \"Ag\",\n                \"label\": \"Agence\"\n            },\n            {\n                \"code\": \"Ag I\",\n                \"label\": \"Agence immobilière\"\n            },\n            {\n                \"code\": \"Assoc\",\n                \"label\": \"Association\"\n            },\n            {\n                \"code\": \"Asl\",\n                \"label\": \"Association Syndicale Libre\"\n            },\n            {\n                \"code\": \"AU\",\n                \"label\": \"Autre\"\n            },\n            {\n                \"code\": \"Bnq\",\n                \"label\": \"Banque\"\n            },\n            {\n                \"code\": \"Bur\",\n                \"label\": \"Bureau\"\n            },\n            {\n                \"code\": \"Cbt\",\n                \"label\": \"Cabinet\"\n            },\n            {\n                \"code\": \"CAF\",\n                \"label\": \"Caisse d'Allocation Familiale\"\n            },\n            {\n                \"code\": \"CHS\",\n                \"label\": \"Centre Hospitalier Spécialisé\\t\"\n            },\n            {\n                \"code\": \"CHU\",\n                \"label\": \"Centre Hospitalier Universitaire\"\n            },\n            {\n                \"code\": \"Cln\",\n                \"label\": \"Clinique\"\n            },\n            {\n                \"code\": \"Clg\",\n                \"label\": \"Collège\"\n            },\n            {\n                \"code\": \"Cte\",\n                \"label\": \"Comité\"\n            },\n            {\n                \"code\": \"Ce\",\n                \"label\": \"Comité d'Entreprise\"\n            },\n            {\n                \"code\": \"Cne\",\n                \"label\": \"Commune\"\n            },\n            {\n                \"code\": \"Cie\",\n                \"label\": \"Compagnie\"\n            },\n            {\n                \"code\": \"Coop\",\n                \"label\": \"Coopérative\"\n            },\n            {\n                \"code\": \"Dr\",\n                \"label\": \"Docteur\"\n            },\n            {\n                \"code\": \"EARL\",\n                \"label\": \"EARL\"\n            },\n            {\n                \"code\": \"EURL\",\n                \"label\": \"EURL\"\n            },\n            {\n                \"code\": \"Ecole\",\n                \"label\": \"Ecole\"\n            },\n            {\n                \"code\": \"Ent\",\n                \"label\": \"Entreprise\"\n            },\n            {\n                \"code\": \"Etb\",\n                \"label\": \"Etablissement\"\n            },\n            {\n                \"code\": \"Etbs\",\n                \"label\": \"Etablissements\"\n            },\n            {\n                \"code\": \"Etude\",\n                \"label\": \"Etude\"\n            },\n            {\n                \"code\": \"Gge\",\n                \"label\": \"Garage\"\n            },\n            {\n                \"code\": \"GIE\",\n                \"label\": \"Groupement d'Interêt Economique\"\n            },\n            {\n                \"code\": \"00000\",\n                \"label\": \"Titre inconnu\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste titres de personnes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"personTitles\", codes);\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"contactTitle\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "TITLES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "TITLES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:59:43 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"TITLES\",\n        \"description\": \"List of titles\",\n        \"moreResults\": false,\n        \"title\": \"TITLES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"Mme\",\n                \"label\": \"Madame\"\n            },\n            {\n                \"code\": \"Mlle\",\n                \"label\": \"Mademoiselle\"\n            },\n            {\n                \"code\": \"Me\",\n                \"label\": \"Maître\"\n            },\n            {\n                \"code\": \"Mmes\",\n                \"label\": \"Mesdames\"\n            },\n            {\n                \"code\": \"Mles\",\n                \"label\": \"Mesdemoiselles\"\n            },\n            {\n                \"code\": \"MM.\",\n                \"label\": \"Messieurs\"\n            },\n            {\n                \"code\": \"M.\",\n                \"label\": \"Monsieur\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des pays",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"countryCode\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?maxResult=200",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "éta",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "200"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "COUNTRIES"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "ITN_ACTIVATE_SCENARIO",
										"value": "true",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?maxResult=200",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "éta",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "COUNTRIES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:59:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"COUNTRIES\",\n        \"description\": \"List of countries\",\n        \"moreResults\": true,\n        \"title\": \"COUNTRIES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"AF\",\n                \"label\": \"Afghanistan\"\n            },\n            {\n                \"code\": \"ZA\",\n                \"label\": \"Afrique du Sud\"\n            },\n            {\n                \"code\": \"AL\",\n                \"label\": \"Albanie\"\n            },\n            {\n                \"code\": \"DZ\",\n                \"label\": \"Algérie\"\n            },\n            {\n                \"code\": \"DE\",\n                \"label\": \"Allemagne\"\n            },\n            {\n                \"code\": \"AD\",\n                \"label\": \"Andorre\"\n            },\n            {\n                \"code\": \"AO\",\n                \"label\": \"Angola\"\n            },\n            {\n                \"code\": \"AI\",\n                \"label\": \"Anguilla\"\n            },\n            {\n                \"code\": \"AG\",\n                \"label\": \"Antigua and Barbuda\"\n            },\n            {\n                \"code\": \"SA\",\n                \"label\": \"Arabie saoudite\"\n            },\n            {\n                \"code\": \"AR\",\n                \"label\": \"Argentine\"\n            },\n            {\n                \"code\": \"AM\",\n                \"label\": \"Arménie\"\n            },\n            {\n                \"code\": \"AW\",\n                \"label\": \"Aruba\"\n            },\n            {\n                \"code\": \"AU\",\n                \"label\": \"Australie\"\n            },\n            {\n                \"code\": \"AT\",\n                \"label\": \"Autriche\"\n            },\n            {\n                \"code\": \"AZ\",\n                \"label\": \"Azerbaïdjan\"\n            },\n            {\n                \"code\": \"BS\",\n                \"label\": \"Bahamas\"\n            },\n            {\n                \"code\": \"BH\",\n                \"label\": \"Bahreïn\"\n            },\n            {\n                \"code\": \"BD\",\n                \"label\": \"Bangladesh\"\n            },\n            {\n                \"code\": \"BB\",\n                \"label\": \"Barbade\"\n            },\n            {\n                \"code\": \"BE\",\n                \"label\": \"Belgique\"\n            },\n            {\n                \"code\": \"BZ\",\n                \"label\": \"Belize\"\n            },\n            {\n                \"code\": \"BM\",\n                \"label\": \"Bermudes\"\n            },\n            {\n                \"code\": \"BT\",\n                \"label\": \"Bhutan\"\n            },\n            {\n                \"code\": \"BY\",\n                \"label\": \"Biélorussie\"\n            },\n            {\n                \"code\": \"BO\",\n                \"label\": \"Bolivie\"\n            },\n            {\n                \"code\": \"BA\",\n                \"label\": \"Bosnie Herzégovine\"\n            },\n            {\n                \"code\": \"BW\",\n                \"label\": \"Botswana\"\n            },\n            {\n                \"code\": \"BN\",\n                \"label\": \"Brunei\"\n            },\n            {\n                \"code\": \"BR\",\n                \"label\": \"Brésil\"\n            },\n            {\n                \"code\": \"BG\",\n                \"label\": \"Bulgarie\"\n            },\n            {\n                \"code\": \"BF\",\n                \"label\": \"Burkina Faso\"\n            },\n            {\n                \"code\": \"BI\",\n                \"label\": \"Burundi\"\n            },\n            {\n                \"code\": \"BJ\",\n                \"label\": \"Bénin\"\n            },\n            {\n                \"code\": \"KH\",\n                \"label\": \"Cambodge\"\n            },\n            {\n                \"code\": \"CM\",\n                \"label\": \"Cameroun\"\n            },\n            {\n                \"code\": \"CA\",\n                \"label\": \"Canada\"\n            },\n            {\n                \"code\": \"CV\",\n                \"label\": \"Cap Vert\"\n            },\n            {\n                \"code\": \"KY\",\n                \"label\": \"Caïman (Iles)\"\n            },\n            {\n                \"code\": \"CL\",\n                \"label\": \"Chili\"\n            },\n            {\n                \"code\": \"CN\",\n                \"label\": \"Chine\"\n            },\n            {\n                \"code\": \"CY\",\n                \"label\": \"Chypre\"\n            },\n            {\n                \"code\": \"VA\",\n                \"label\": \"Cité du Vatican (Saint-Siège)\"\n            },\n            {\n                \"code\": \"CC\",\n                \"label\": \"Cocos (Iles)\"\n            },\n            {\n                \"code\": \"CO\",\n                \"label\": \"Colombie\"\n            },\n            {\n                \"code\": \"KM\",\n                \"label\": \"Comores\"\n            },\n            {\n                \"code\": \"CG\",\n                \"label\": \"Congo\"\n            },\n            {\n                \"code\": \"CD\",\n                \"label\": \"Congo (République démocratique)\"\n            },\n            {\n                \"code\": \"KP\",\n                \"label\": \"Corée du Nord\"\n            },\n            {\n                \"code\": \"KR\",\n                \"label\": \"Corée du Sud\"\n            },\n            {\n                \"code\": \"CR\",\n                \"label\": \"Costa Rica\"\n            },\n            {\n                \"code\": \"HR\",\n                \"label\": \"Croatie\"\n            },\n            {\n                \"code\": \"CU\",\n                \"label\": \"Cuba\"\n            },\n            {\n                \"code\": \"CI\",\n                \"label\": \"Côte d'Ivoire\"\n            },\n            {\n                \"code\": \"DK\",\n                \"label\": \"Danemark\"\n            },\n            {\n                \"code\": \"DJ\",\n                \"label\": \"Djibouti\"\n            },\n            {\n                \"code\": \"DO\",\n                \"label\": \"Dominicaine (République)\"\n            },\n            {\n                \"code\": \"DM\",\n                \"label\": \"Dominique\"\n            },\n            {\n                \"code\": \"ES\",\n                \"label\": \"Espagne\"\n            },\n            {\n                \"code\": \"EE\",\n                \"label\": \"Estonie\"\n            },\n            {\n                \"code\": \"FR\",\n                \"label\": \"FRANCE\"\n            },\n            {\n                \"code\": \"FK\",\n                \"label\": \"Falkland (Iles Malouines)\"\n            },\n            {\n                \"code\": \"FJ\",\n                \"label\": \"Fidji\"\n            },\n            {\n                \"code\": \"FI\",\n                \"label\": \"Finlande\"\n            },\n            {\n                \"code\": \"FO\",\n                \"label\": \"Féroé (Iles)\"\n            },\n            {\n                \"code\": \"GY\",\n                \"label\": \"GUYANA\"\n            },\n            {\n                \"code\": \"GA\",\n                \"label\": \"Gabon\"\n            },\n            {\n                \"code\": \"GM\",\n                \"label\": \"Gambie\"\n            },\n            {\n                \"code\": \"GH\",\n                \"label\": \"Ghana\"\n            },\n            {\n                \"code\": \"GI\",\n                \"label\": \"Gibraltar\"\n            },\n            {\n                \"code\": \"GB\",\n                \"label\": \"Grande Bretagne\"\n            },\n            {\n                \"code\": \"GD\",\n                \"label\": \"Grenade\"\n            },\n            {\n                \"code\": \"GL\",\n                \"label\": \"Groenland\"\n            },\n            {\n                \"code\": \"GR\",\n                \"label\": \"Grèce\"\n            },\n            {\n                \"code\": \"GP\",\n                \"label\": \"Guadeloupe\"\n            },\n            {\n                \"code\": \"GU\",\n                \"label\": \"Guam\"\n            },\n            {\n                \"code\": \"GT\",\n                \"label\": \"Guatemala\"\n            },\n            {\n                \"code\": \"GN\",\n                \"label\": \"Guinée\"\n            },\n            {\n                \"code\": \"GQ\",\n                \"label\": \"Guinée Équatoriale\"\n            },\n            {\n                \"code\": \"GW\",\n                \"label\": \"Guinée-Bissau\"\n            },\n            {\n                \"code\": \"GF\",\n                \"label\": \"Guyane Française\"\n            },\n            {\n                \"code\": \"GE\",\n                \"label\": \"Géorgie\"\n            },\n            {\n                \"code\": \"HT\",\n                \"label\": \"Haïti\"\n            },\n            {\n                \"code\": \"HN\",\n                \"label\": \"Honduras\"\n            },\n            {\n                \"code\": \"HK\",\n                \"label\": \"Hong Kong\"\n            },\n            {\n                \"code\": \"HU\",\n                \"label\": \"Hongrie\"\n            },\n            {\n                \"code\": \"IN\",\n                \"label\": \"Inde\"\n            },\n            {\n                \"code\": \"ID\",\n                \"label\": \"Indonésie\"\n            },\n            {\n                \"code\": \"IQ\",\n                \"label\": \"Irak\"\n            },\n            {\n                \"code\": \"IR\",\n                \"label\": \"Iran\"\n            },\n            {\n                \"code\": \"IE\",\n                \"label\": \"Irlande\"\n            },\n            {\n                \"code\": \"IS\",\n                \"label\": \"Islande\"\n            },\n            {\n                \"code\": \"IL\",\n                \"label\": \"Israël\"\n            },\n            {\n                \"code\": \"IT\",\n                \"label\": \"Italie\"\n            },\n            {\n                \"code\": \"JM\",\n                \"label\": \"Jamaïque\"\n            },\n            {\n                \"code\": \"JP\",\n                \"label\": \"Japon\"\n            },\n            {\n                \"code\": \"JO\",\n                \"label\": \"Jordanie\"\n            },\n            {\n                \"code\": \"KZ\",\n                \"label\": \"Kazakhstan\"\n            },\n            {\n                \"code\": \"KE\",\n                \"label\": \"Kenya\"\n            },\n            {\n                \"code\": \"KI\",\n                \"label\": \"Kiribati\"\n            },\n            {\n                \"code\": \"KW\",\n                \"label\": \"Koweït\"\n            },\n            {\n                \"code\": \"KG\",\n                \"label\": \"Kyrgyzstan\"\n            },\n            {\n                \"code\": \"LA\",\n                \"label\": \"Laos\"\n            },\n            {\n                \"code\": \"LS\",\n                \"label\": \"Lesotho\"\n            },\n            {\n                \"code\": \"LV\",\n                \"label\": \"Lettonie\"\n            },\n            {\n                \"code\": \"LB\",\n                \"label\": \"Liban\"\n            },\n            {\n                \"code\": \"LR\",\n                \"label\": \"Liberia\"\n            },\n            {\n                \"code\": \"LY\",\n                \"label\": \"Libye\"\n            },\n            {\n                \"code\": \"LI\",\n                \"label\": \"Liechtenstein\"\n            },\n            {\n                \"code\": \"LT\",\n                \"label\": \"Lituanie\"\n            },\n            {\n                \"code\": \"LU\",\n                \"label\": \"Luxembourg\"\n            },\n            {\n                \"code\": \"MC\",\n                \"label\": \"MONACO\"\n            },\n            {\n                \"code\": \"MO\",\n                \"label\": \"Macao\"\n            },\n            {\n                \"code\": \"MK\",\n                \"label\": \"Macédoine\"\n            },\n            {\n                \"code\": \"MG\",\n                \"label\": \"Madagascar\"\n            },\n            {\n                \"code\": \"MY\",\n                \"label\": \"Malaisie\"\n            },\n            {\n                \"code\": \"MW\",\n                \"label\": \"Malawi\"\n            },\n            {\n                \"code\": \"MV\",\n                \"label\": \"Maldives\"\n            },\n            {\n                \"code\": \"ML\",\n                \"label\": \"Mali\"\n            },\n            {\n                \"code\": \"MT\",\n                \"label\": \"Malte\"\n            },\n            {\n                \"code\": \"MP\",\n                \"label\": \"Mariannes (Iles du Nord)\"\n            },\n            {\n                \"code\": \"MA\",\n                \"label\": \"Maroc\"\n            },\n            {\n                \"code\": \"MH\",\n                \"label\": \"Marshall (Iles)\"\n            },\n            {\n                \"code\": \"MQ\",\n                \"label\": \"Martinique\"\n            },\n            {\n                \"code\": \"MU\",\n                \"label\": \"Maurice (Ile)\"\n            },\n            {\n                \"code\": \"MR\",\n                \"label\": \"Mauritanie\"\n            },\n            {\n                \"code\": \"YT\",\n                \"label\": \"Mayotte\"\n            },\n            {\n                \"code\": \"MX\",\n                \"label\": \"Mexico\"\n            },\n            {\n                \"code\": \"FM\",\n                \"label\": \"Micronésie\"\n            },\n            {\n                \"code\": \"MD\",\n                \"label\": \"Moldavie\"\n            },\n            {\n                \"code\": \"MN\",\n                \"label\": \"Mongolie\"\n            },\n            {\n                \"code\": \"MS\",\n                \"label\": \"Montserrat\"\n            },\n            {\n                \"code\": \"MZ\",\n                \"label\": \"Mozambique\"\n            },\n            {\n                \"code\": \"MM\",\n                \"label\": \"Myanmar\"\n            },\n            {\n                \"code\": \"NA\",\n                \"label\": \"Namibie\"\n            },\n            {\n                \"code\": \"NR\",\n                \"label\": \"Nauru\"\n            },\n            {\n                \"code\": \"NI\",\n                \"label\": \"Nicaragua\"\n            },\n            {\n                \"code\": \"NE\",\n                \"label\": \"Niger\"\n            },\n            {\n                \"code\": \"NG\",\n                \"label\": \"Nigeria\"\n            },\n            {\n                \"code\": \"NU\",\n                \"label\": \"Niue\"\n            },\n            {\n                \"code\": \"NF\",\n                \"label\": \"Norfolk (Ile)\"\n            },\n            {\n                \"code\": \"NO\",\n                \"label\": \"Norvège\"\n            },\n            {\n                \"code\": \"NZ\",\n                \"label\": \"Nouvelle Zélande\"\n            },\n            {\n                \"code\": \"NC\",\n                \"label\": \"Nouvelle-Calédonie\"\n            },\n            {\n                \"code\": \"NP\",\n                \"label\": \"Népal\"\n            },\n            {\n                \"code\": \"OM\",\n                \"label\": \"Oman\"\n            },\n            {\n                \"code\": \"UG\",\n                \"label\": \"Ouganda\"\n            },\n            {\n                \"code\": \"UZ\",\n                \"label\": \"Ouzbekistan\"\n            },\n            {\n                \"code\": \"PK\",\n                \"label\": \"Pakistan\"\n            },\n            {\n                \"code\": \"PW\",\n                \"label\": \"Palau\"\n            },\n            {\n                \"code\": \"PA\",\n                \"label\": \"Panama\"\n            },\n            {\n                \"code\": \"PG\",\n                \"label\": \"Papouasie \"\n            },\n            {\n                \"code\": \"PY\",\n                \"label\": \"Paraguay\"\n            },\n            {\n                \"code\": \"NL\",\n                \"label\": \"Pays-Bas\"\n            },\n            {\n                \"code\": \"PH\",\n                \"label\": \"Philippines\"\n            },\n            {\n                \"code\": \"PN\",\n                \"label\": \"Pitcairn\"\n            },\n            {\n                \"code\": \"PL\",\n                \"label\": \"Pologne\"\n            },\n            {\n                \"code\": \"PF\",\n                \"label\": \"Polynésie Française \"\n            },\n            {\n                \"code\": \"PR\",\n                \"label\": \"Porto Rico\"\n            },\n            {\n                \"code\": \"PT\",\n                \"label\": \"Portugal\"\n            },\n            {\n                \"code\": \"PE\",\n                \"label\": \"Pérou\"\n            },\n            {\n                \"code\": \"QA\",\n                \"label\": \"Qatar\"\n            },\n            {\n                \"code\": \"RO\",\n                \"label\": \"Roumanie\"\n            },\n            {\n                \"code\": \"RU\",\n                \"label\": \"Russie\"\n            },\n            {\n                \"code\": \"RW\",\n                \"label\": \"Rwanda\"\n            },\n            {\n                \"code\": \"CF\",\n                \"label\": \"République Centre Afrique\"\n            },\n            {\n                \"code\": \"RE\",\n                \"label\": \"Réunion \"\n            },\n            {\n                \"code\": \"KN\",\n                \"label\": \"Saint Kitts and Nevis\"\n            },\n            {\n                \"code\": \"BL\",\n                \"label\": \"Saint-Barthélemy\"\n            },\n            {\n                \"code\": \"SM\",\n                \"label\": \"Saint-Marin\"\n            },\n            {\n                \"code\": \"MF\",\n                \"label\": \"Saint-Martin (Partie Française)\"\n            },\n            {\n                \"code\": \"VC\",\n                \"label\": \"Saint-Vincent-et-les-Grenadines\"\n            },\n            {\n                \"code\": \"PM\",\n                \"label\": \"Saint-pierre-et-miquelon\"\n            },\n            {\n                \"code\": \"SH\",\n                \"label\": \"Sainte-Hélène\"\n            },\n            {\n                \"code\": \"LC\",\n                \"label\": \"Sainte-Lucie\"\n            },\n            {\n                \"code\": \"SB\",\n                \"label\": \"Salomon (Iles)\"\n            },\n            {\n                \"code\": \"SV\",\n                \"label\": \"Salvador\"\n            },\n            {\n                \"code\": \"WS\",\n                \"label\": \"Samoa\"\n            },\n            {\n                \"code\": \"AS\",\n                \"label\": \"Samoa (Iles)\"\n            },\n            {\n                \"code\": \"RS\",\n                \"label\": \"Serbie\"\n            },\n            {\n                \"code\": \"SC\",\n                \"label\": \"Seychelles\"\n            },\n            {\n                \"code\": \"SL\",\n                \"label\": \"Sierra Leone\"\n            },\n            {\n                \"code\": \"SG\",\n                \"label\": \"Singapour\"\n            },\n            {\n                \"code\": \"SK\",\n                \"label\": \"Slovaquie\"\n            },\n            {\n                \"code\": \"SI\",\n                \"label\": \"Slovénie\"\n            },\n            {\n                \"code\": \"SO\",\n                \"label\": \"Somalie\"\n            },\n            {\n                \"code\": \"SD\",\n                \"label\": \"Soudan\"\n            },\n            {\n                \"code\": \"LK\",\n                \"label\": \"Sri Lanka\"\n            },\n            {\n                \"code\": \"SS\",\n                \"label\": \"Sud Soudan\"\n            },\n            {\n                \"code\": \"CH\",\n                \"label\": \"Suisse\"\n            },\n            {\n                \"code\": \"SR\",\n                \"label\": \"Suriname\"\n            },\n            {\n                \"code\": \"SE\",\n                \"label\": \"Suède\"\n            },\n            {\n                \"code\": \"SZ\",\n                \"label\": \"Swaziland\"\n            },\n            {\n                \"code\": \"SY\",\n                \"label\": \"Syrie\"\n            },\n            {\n                \"code\": \"ST\",\n                \"label\": \"São Tomé-et-Príncipe\"\n            },\n            {\n                \"code\": \"SN\",\n                \"label\": \"Sénégal\"\n            },\n            {\n                \"code\": \"TJ\",\n                \"label\": \"Tadjikistan\"\n            },\n            {\n                \"code\": \"TW\",\n                \"label\": \"Taiwan\"\n            },\n            {\n                \"code\": \"TZ\",\n                \"label\": \"Tanzanie\"\n            },\n            {\n                \"code\": \"TD\",\n                \"label\": \"Tchad\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des villes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=PARI&maxResult=50&countryCode=FR",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "PARI"
								},
								{
									"key": "maxResult",
									"value": "50"
								},
								{
									"key": "countryCode",
									"value": "FR"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CITIES"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=PARI&maxResult=50&countryCode=FR",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "PARI"
										},
										{
											"key": "maxResult",
											"value": "50"
										},
										{
											"key": "countryCode",
											"value": "FR"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CITIES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:00:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CITIES\",\n        \"description\": \"List of cities\",\n        \"moreResults\": false,\n        \"title\": \"Cities\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"30730\",\n                \"label\": \"PARIGNARGUES\"\n            },\n            {\n                \"code\": \"35133\",\n                \"label\": \"PARIGNE\"\n            },\n            {\n                \"code\": \"72250\",\n                \"label\": \"PARIGNE L EVEQUE\"\n            },\n            {\n                \"code\": \"72330\",\n                \"label\": \"PARIGNE LE POLIN\"\n            },\n            {\n                \"code\": \"53100\",\n                \"label\": \"PARIGNE SUR BRAYE\"\n            },\n            {\n                \"code\": \"42120\",\n                \"label\": \"PARIGNY\"\n            },\n            {\n                \"code\": \"58210\",\n                \"label\": \"PARIGNY LA ROSE\"\n            },\n            {\n                \"code\": \"58320\",\n                \"label\": \"PARIGNY LES VAUX\"\n            },\n            {\n                \"code\": \"75001\",\n                \"label\": \"PARIS 01\"\n            },\n            {\n                \"code\": \"75002\",\n                \"label\": \"PARIS 02\"\n            },\n            {\n                \"code\": \"75003\",\n                \"label\": \"PARIS 03\"\n            },\n            {\n                \"code\": \"75004\",\n                \"label\": \"PARIS 04\"\n            },\n            {\n                \"code\": \"75005\",\n                \"label\": \"PARIS 05\"\n            },\n            {\n                \"code\": \"75006\",\n                \"label\": \"PARIS 06\"\n            },\n            {\n                \"code\": \"75007\",\n                \"label\": \"PARIS 07\"\n            },\n            {\n                \"code\": \"75008\",\n                \"label\": \"PARIS 08\"\n            },\n            {\n                \"code\": \"75009\",\n                \"label\": \"PARIS 09\"\n            },\n            {\n                \"code\": \"75010\",\n                \"label\": \"PARIS 10\"\n            },\n            {\n                \"code\": \"75011\",\n                \"label\": \"PARIS 11\"\n            },\n            {\n                \"code\": \"75012\",\n                \"label\": \"PARIS 12\"\n            },\n            {\n                \"code\": \"75013\",\n                \"label\": \"PARIS 13\"\n            },\n            {\n                \"code\": \"75014\",\n                \"label\": \"PARIS 14\"\n            },\n            {\n                \"code\": \"75015\",\n                \"label\": \"PARIS 15\"\n            },\n            {\n                \"code\": \"75016\",\n                \"label\": \"PARIS 16\"\n            },\n            {\n                \"code\": \"75116\",\n                \"label\": \"PARIS 16\"\n            },\n            {\n                \"code\": \"75017\",\n                \"label\": \"PARIS 17\"\n            },\n            {\n                \"code\": \"75018\",\n                \"label\": \"PARIS 18\"\n            },\n            {\n                \"code\": \"75019\",\n                \"label\": \"PARIS 19\"\n            },\n            {\n                \"code\": \"75020\",\n                \"label\": \"PARIS 20\"\n            },\n            {\n                \"code\": \"71150\",\n                \"label\": \"PARIS L HOPITAL\"\n            },\n            {\n                \"code\": \"81310\",\n                \"label\": \"PARISOT\"\n            },\n            {\n                \"code\": \"82160\",\n                \"label\": \"PARISOT\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste Civilités personne",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CIVIL_STATUS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CIVIL_STATUS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:00:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CIVIL_STATUS\",\n        \"description\": \"Classification of marital status\",\n        \"moreResults\": false,\n        \"title\": \"Civil status\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"AU\",\n                \"label\": \"Autre\"\n            },\n            {\n                \"code\": \"I\",\n                \"label\": \"Autres\"\n            },\n            {\n                \"code\": \"CNC\",\n                \"label\": \"Concubin(e)\"\n            },\n            {\n                \"code\": \"C\",\n                \"label\": \"Célibataire\"\n            },\n            {\n                \"code\": \"D\",\n                \"label\": \"Divorcé(e)\"\n            },\n            {\n                \"code\": \"CPLP\",\n                \"label\": \"En couple\"\n            },\n            {\n                \"code\": \"IN\",\n                \"label\": \"Inconnu\"\n            },\n            {\n                \"code\": \"M\",\n                \"label\": \"Marié(e)\"\n            },\n            {\n                \"code\": \"P\",\n                \"label\": \"Pacsé(e)\"\n            },\n            {\n                \"code\": \"S\",\n                \"label\": \"Séparé(e)\"\n            },\n            {\n                \"code\": \"V\",\n                \"label\": \"Veuf(ve)\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste types de population",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"pm.collectionVariables.set(\"jobCategories\", codes);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Cad",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Cad"
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "JOB_CATEGORIES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "JOB_CATEGORIES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:01:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"JOB_CATEGORIES\",\n        \"description\": \"Classification of job categories\",\n        \"moreResults\": false,\n        \"title\": \"Job category\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"CADRE\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                }\n            },\n            {\n                \"code\": \"TNS\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                }\n            },\n            {\n                \"code\": \"NONCADRE\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                }\n            },\n            {\n                \"code\": \"ENSEMBLE\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"true\"\n                }\n            },\n            {\n                \"code\": \"AGIRC\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel affilié à l'AGIRC\"\n            },\n            {\n                \"code\": \"NC_ART4_4BIS_36\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel ne relevant des articles 4, 4bis et 36 de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"NC_ART4\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel ne relevant pas de l'article 4 de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"NC_ART4_4BIS\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel ne relevant pas des articles 4 et 4bis de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"C_ART4\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel relevant de l'article 4 de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"C_4_4BIS\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel relevant des articles 4 et 4bis de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"C_4_4BIS_36\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel relevant des articles 4, 4bis et 36 de la CCN AGIRC du 14 mars 1947\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste types de cotisation prévoyance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Check response status\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"if (pm.response != null){\r",
									"let jsonData = pm.response.json();\r",
									"let codes = jsonData.data.values; \r",
									"if (codes != null) {\r",
									"    pm.collectionVariables.set(\"codeAssPrev\", codes[_.random(0, codes.length-1)].code);\r",
									"}\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?productCode={{productCode}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "productCode",
									"value": "{{productCode}}"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CONTRIBUTION_BASES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?productCode={{codeProduitPrevoyance}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "productCode",
											"value": "{{codeProduitPrevoyance}}"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CONTRIBUTION_BASES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jun 2020 16:33:40 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CONTRIBUTION_BASES\",\n        \"description\": \"Classification of contribution bases\",\n        \"moreResults\": false,\n        \"title\": \"Contribution bases\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"SLCEP_ASS_ZONES\",\n                \"details\": {\n                    \"declarative\": \"false\",\n                    \"baseType\": \"SUR_SALAIRE\"\n                },\n                \"label\": \"Assiette par Zone\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set('folderName','Listes globales');"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Pricing",
			"item": [
				{
					"name": "Connexion CLEVA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());",
									"",
									"console.log('Je me suis bien connecté');",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.collectionVariables.set(\"dateDuJour\", moment().format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Plus_1_Mois\", moment().add(30, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Plus_6_Mois\", moment().add(180, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_1_Mois\", moment().add(-30, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_6_Mois\", moment().add(-180, 'days').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_5_Ans\", moment().add(-5, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_10_Ans\", moment().add(-10, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_15_Ans\", moment().add(-15, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_20_Ans\", moment().add(-20, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_30_Ans\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_35_Ans\", moment().add(-35, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_40_Ans\", moment().add(-40, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_45_Ans\", moment().add(-45, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_50_Ans\", moment().add(-50, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_60_Ans\", moment().add(-60, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_70_Ans\", moment().add(-70, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJourFormatRecherche\", moment().format(\"YYYY/MM/DD\"));\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Récupération Tarif",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"// valeurs\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Setting variables\r",
									"pm.collectionVariables.set(\"PricingId\", codes[_.random(0, codes.length-1)].details.id);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?code=PPCS1&activeDate={{dateDuJour}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "code",
									"value": "PPCS1"
								},
								{
									"key": "activeDate",
									"value": "{{dateDuJour}}"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PRICINGS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?code={{codeProduitSante}}&activeDate={{dateDuJour}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "code",
											"value": "{{codeProduitSante}}"
										},
										{
											"key": "activeDate",
											"value": "{{dateDuJour}}"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PRICINGS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:54:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"PRICINGS\",\n        \"description\": \"Pricings\",\n        \"moreResults\": false,\n        \"title\": \"Pricings\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"PSCS1\",\n                \"details\": {\n                    \"newBusinessDLL\": \"PSCS1.dll\",\n                    \"renewalDLL\": \"PSCS1.dll\",\n                    \"id\": \"1000031\",\n                    \"startDate\": \"2010/01/01\",\n                    \"endorsementDLL\": \"PSCS1.dll\"\n                },\n                \"label\": \"PPS FDS Coll Std Préc 01\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des entrants du tarif",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"// valeurs\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?pricingId={{PricingId}}&type=NEW_BUSINESS",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "pricingId",
									"value": "{{PricingId}}"
								},
								{
									"key": "type",
									"value": "NEW_BUSINESS"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PRICING_INPUTS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?pricingId={{PSCS1PricingId}}&type=NEW_BUSINESS",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "pricingId",
											"value": "{{PSCS1PricingId}}"
										},
										{
											"key": "type",
											"value": "NEW_BUSINESS"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PRICING_INPUTS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:58:16 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"PRICING_INPUTS\",\n        \"description\": \"Pricing Inputs\",\n        \"moreResults\": false,\n        \"title\": \"PricingInputs\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"PSCS1_I_Offre_Commerciale\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Zone_Geographique\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Valeur_Indice_PASS\",\n                \"details\": {\n                    \"type\": \"NUMERIC\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Tranche_Age\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Structure_Cotisation\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Formule\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Generation_Tarifaire\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Date_Tarification\",\n                \"details\": {\n                    \"type\": \"DATE\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Situation_Famille\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_Qualite\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            },\n            {\n                \"code\": \"PSCS1_I_College\",\n                \"details\": {\n                    \"type\": \"STRING\"\n                }\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Appel DLL de tarification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);\r",
									"\r",
									"/*\r",
									"var jobCategories = pm.collectionVariables.get(\"jobCategories\");\r",
									"pm.collectionVariables.set(\"jobCategoryCode\", jobCategories[_.random(0, 3)].code);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"NEW_BUSINESS\",\r\n    \"values\": {\r\n        \"PSCS1_I_Offre_Commerciale\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"Standard\"\r\n        },\r\n        \"PSCS1_I_Zone_Geographique\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"AUT\"\r\n        },\r\n        \"PSCS1_I_Valeur_Indice_PASS\": {\r\n            \"type\": \"NUMERIC\",\r\n            \"value\": 41136.0\r\n        },\r\n        \"PSCS1_I_Tranche_Age\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"30-59\"\r\n        },\r\n        \"PSCS1_I_Structure_Cotisation\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"{{codeAssIF}}\"\r\n        },\r\n        \"PSCS1_I_Date_Tarification\": {\r\n            \"type\": \"DATE\",\r\n            \"value\": \"{{dateDuJour}}\"\r\n        },\r\n        \"PSCS1_I_College\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"{{jobCategoryCode}}\"\r\n        },\r\n        \"PSCS1_I_Generation_Tarifaire\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"Standard\"\r\n        },\r\n        \"PSCS1_I_Situation_Famille\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"PSCS1_ISO\"\r\n        }\r\n    },\r\n    \"executions\": [\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{$randomUUID}}\",\r\n            \"group1\": \"{{$randomInt}}\",\r\n            \"group2\": \"{{$randomInt}}\",\r\n            \"values\": {\r\n                \"PSCS1_I_Formule\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"PSCS1_F_BASE_ESSENTIEL\"\r\n                },\r\n                \"PSCS1_I_Qualite\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"A\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pricings/:id/execute",
							"host": [
								"{{url}}"
							],
							"path": [
								"pricings",
								":id",
								"execute"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{PricingId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contrat prévoyance PPCS1",
			"item": [
				{
					"name": "Connexion CLEVA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());",
									"",
									"",
									"console.log('Je me suis bien connecté');",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.collectionVariables.set(\"dateDuJour\", moment().format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Plus_1_Mois\", moment().add(30, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Plus_6_Mois\", moment().add(180, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_1_Mois\", moment().add(-30, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_6_Mois\", moment().add(-180, 'days').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_5_Ans\", moment().add(-5, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_10_Ans\", moment().add(-10, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_15_Ans\", moment().add(-15, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_20_Ans\", moment().add(-20, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_30_Ans\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_35_Ans\", moment().add(-35, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_40_Ans\", moment().add(-40, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_45_Ans\", moment().add(-45, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_50_Ans\", moment().add(-50, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_60_Ans\", moment().add(-60, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJour_Moins_70_Ans\", moment().add(-70, 'years').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.collectionVariables.set(\"dateDuJourFormatRecherche\", moment().format(\"YYYY/MM/DD\"));\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Créer une entreprise",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set('customerEntrepriseName', window.faker.company.companyName());\r",
									"    pm.collectionVariables.set('customerEntrepriseSupplementName', window.faker.company.companySuffix());\r",
									"\r",
									"    pm.collectionVariables.set('customerAdrZipCode', window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set('customerAdrCity', window.faker.address.city());\r",
									"    pm.collectionVariables.set('customerAdrStreet', window.faker.address.streetName());\r",
									"    pm.collectionVariables.set('customerAdrLatitude', window.faker.address.latitude());\r",
									"    pm.collectionVariables.set('customerAdrLongitude', window.faker.address.longitude());\r",
									"\r",
									"    pm.collectionVariables.set('customerPhoneNumber', window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set('customerEmail', window.faker.internet.exampleEmail());\r",
									"    pm.collectionVariables.set('customerWebSite', window.faker.internet.url());\r",
									"    pm.collectionVariables.set('customerExternalReference', window.faker.random.number());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"customerEntrepriseSiren\", _.random(111111111, 999999999));\r",
									"pm.collectionVariables.set(\"customerEntrepriseNic\", _.random(10000, 99999));\r",
									"\r",
									"pm.collectionVariables.set(\"customerEntrepriseSiret\", pm.collectionVariables.get(\"customerEntrepriseSiren\") + \"\"+ pm.collectionVariables.get(\"customerEntrepriseNic\"));\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Récupération des variables\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"customerId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"customerName\", jsonData.data.businessInformations.companyName);\r",
									"pm.collectionVariables.set(\"customerExternalReference\", jsonData.data.businessInformations.externalReference);\r",
									"pm.collectionVariables.set(\"customerPersonId\", jsonData.data.businessInformations.id);\r",
									"pm.collectionVariables.set(\"siret\", jsonData.data.businessInformations.siret);\r",
									"\r",
									"//Tests\r",
									"pm.test(\"Company name check\", function () {\r",
									"    pm.expect(jsonData.data.businessInformations.companyName.toUpperCase()).to.eql(pm.collectionVariables.get(\"customerEntrepriseName\").toUpperCase());\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"//Logs url pour consulter l'objet créé dans CLEVA Web\r",
									"console.log(\"URL pour consulter l'objet créé dans CLEVA Web :\");\r",
									"console.log(pm.environment.get(\"clevaWebUrl\")+ \"personne/morale/\" +jsonData.data.businessInformations.id +\"/consultation\");\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"businessInformations\": {\n        \"titleId\": \"{{customerTitle}}\",\n        \"companyName\": \"{{customerEntrepriseName}}\",\n        \"siret\": \"{{customerEntrepriseSiret}}\",\n        \"siren\": \"{{customerEntrepriseSiren}}\",\n        \"nic\": \"{{customerEntrepriseNic}}\",\n        \"externalReference\": \"{{customerExternalReference}}\",\n        \"nafCode\": \"{{naf}}\"\n    },\n    \"communication\": {\n        \"cellphone\": \"{{customerPhoneNumber}}\",\n        \"email\": \"{{customerEmail}}\",\n        \"webSite\": \"{{customerWebSite}}\"\n    },\n    \"address\": {\n        \"countryCode\": \"FR\",\n        \"mainAddress\": true,\n        \"line1\": \"Rue des étoiles\",\n        \"line3\": \"{{customerAdrZipCode}}\",\n        \"line4\": \"{{customerAdrCity}}\",\n        \"latitude\": \"{{customerAdrLatitude}}\",\n        \"longitude\": \"{{customerAdrLongitude}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/enterprise/customers",
							"host": [
								"{{url}}"
							],
							"path": [
								"enterprise",
								"customers"
							]
						}
					},
					"response": [
						{
							"name": "201 CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"businessInformations\": {\n        \"titleId\": \"{{customerTitle}}\",\n        \"companyName\": \"{{customerEntrepriseName}}\",\n        \"siret\": \"{{customerEntrepriseSiret}}\",\n        \"siren\": \"{{customerEntrepriseSiren}}\",\n        \"nic\": \"{{customerEntrepriseNic}}\",\n        \"externalReference\": \"{{customerExternalReference}}\",\n        \"nafCode\": \"{{naf}}\"\n    },\n    \"communication\": {\n        \"cellphone\": \"{{customerPhoneNumber}}\",\n        \"email\": \"{{customerEmail}}\",\n        \"webSite\": \"{{customerWebSite}}\"\n    },\n    \"address\": {\n        \"countryCode\": \"FR\",\n        \"mainAddress\": true,\n        \"line1\": \"{{customerAdrStreet}}\",\n        \"line3\": \"{{customerAdrZipCode}}\",\n        \"line4\": \"{{customerAdrCity}}\",\n        \"latitude\": \"{{customerAdrLatitude}}\",\n        \"longitude\": \"{{customerAdrLongitude}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/enterprise/customers",
									"host": [
										"{{url}}"
									],
									"path": [
										"enterprise",
										"customers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 10:25:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"address\": {\n            \"countryCode\": \"FR\",\n            \"countryName\": \"FRANCE\",\n            \"creationDate\": \"2021-12-28T11:25:10+01:00\",\n            \"id\": \"20000036\",\n            \"latitude\": -58.8723,\n            \"line1\": \"Simon d'Orsel\",\n            \"line3\": \"41905\",\n            \"line4\": \"Lefebvrefurt\",\n            \"longitude\": 150.8858,\n            \"mainAddress\": true,\n            \"resume\": \"Simon d'Orsel 41905, FRANCE\",\n            \"updateDate\": \"2021-12-28T11:25:10+01:00\",\n            \"validityDate\": \"2021-12-28\"\n        },\n        \"auxiliaryCode\": \"P22832\",\n        \"businessInformations\": {\n            \"companyName\": \"BARON GIE\",\n            \"creationDate\": \"2021-12-28T11:25:10+01:00\",\n            \"externalReference\": \"52707\",\n            \"freeZones\": {},\n            \"id\": \"20000069\",\n            \"lastUpdateDate\": \"2021-12-28T11:25:10+01:00\",\n            \"nafCode\": \"53.10\",\n            \"nafLabel\": \"Activ. poste dans le cadre d'une obligation de service universel\",\n            \"nic\": \"00029\",\n            \"siren\": \"811345883\",\n            \"siret\": \"81134588300029\",\n            \"titleId\": \"Ce\",\n            \"titleLabel\": \"Comité d'Entreprise\"\n        },\n        \"communication\": {\n            \"cellphone\": \"+33 585451206\",\n            \"email\": \"Maxime89@example.net\",\n            \"webSite\": \"https://laura.org\"\n        },\n        \"companyCode\": \"ADP**\",\n        \"companyLabel\": \"Starterbox - ADP\",\n        \"creationDate\": \"2021-12-28T11:25:10+01:00\",\n        \"debtRecoveryExclusion\": false,\n        \"directDebitType\": \"POLICE\",\n        \"discountRate\": 0,\n        \"freeZones\": {},\n        \"id\": \"20000016\",\n        \"managementInformation\": {},\n        \"prospect\": true,\n        \"type\": \"LEGAL\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Ajouter un contact à l'entreprise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"    \r",
									"    //get ID\r",
									"    pm.collectionVariables.set(\"contactID\", jsonData.data.id);\r",
									"\r",
									"} else {\r",
									"    //status code is not 201\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"contact1FamilyName\", window.faker.name.lastName().toUpperCase());\r",
									"pm.collectionVariables.set(\"contact1FirstName\", window.faker.name.firstName(\"Male\").toUpperCase());\r",
									"\r",
									"pm.collectionVariables.set(\"contact1Gender\",\"MALE\");\r",
									"\r",
									"\r",
									"\r",
									"pm.collectionVariables.set('contact1Cellphone', window.faker.phone.phoneNumber());\r",
									"pm.collectionVariables.set('contact1Mail', window.faker.internet.exampleEmail());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"personInformation\": {\n        \"titleCode\": \"{{contactTitle}}\",\n        \"familyName\": \"{{contact1FamilyName}}\",\n        \"firstName\": \"{{contact1FirstName}}\",\n        \"gender\": \"{{contact1Gender}}\"\n    },\n    \"beginDate\": \"{{dateDuJour}}\",\n    \"communication\": {\n        \"professionalPhone\": \"{{contact1Cellphone}}\",\n        \"email\": \"{{contact1Mail}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/enterprise/customers/:id/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"enterprise",
								"customers",
								":id",
								"contacts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerId}}",
									"description": "(Required) Company ID"
								}
							]
						},
						"description": "On ajoute un contact à une entreprise."
					},
					"response": [
						{
							"name": "201 ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"personInformation\": {\n        \"titleCode\": \"{{contactTitle}}\",\n        \"familyName\": \"{{contact1FamilyName}}\",\n        \"firstName\": \"{{contact1FirstName}}\",\n        \"gender\": \"{{contact1Gender}}\"\n    },\n    \"beginDate\": \"{{dateDuJour}}\",\n    \"communication\": {\n        \"professionalPhone\": \"{{contact1Cellphone}}\",\n        \"email\": \"{{contact1Mail}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/enterprise/customers/:id/contacts",
									"host": [
										"{{url}}"
									],
									"path": [
										"enterprise",
										"customers",
										":id",
										"contacts"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyID}}",
											"description": "(Required) Company ID"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Content-Language",
									"value": "fr-FR"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Apr 2023 14:58:34 GMT"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"beginDate\": \"2023-01-30\",\n        \"communication\": {\n            \"email\": \"Paul.Berger@example.org\",\n            \"professionalPhone\": \"0523044503\"\n        },\n        \"customerEnterpriseId\": \"20013653\",\n        \"freeZones\": {\n            \"PPSIARD_PHYSIQUE_MOTIF\": {},\n            \"PPSADP_PERSONNE_TEST_JORGE_RELATION\": {}\n        },\n        \"id\": \"20003360\",\n        \"personInformation\": {\n            \"amountOfIncome\": 0,\n            \"completeName\": \"OLIVIER MAXIME\",\n            \"creationDate\": \"2023-04-05T16:58:34+02:00\",\n            \"familyName\": \"OLIVIER\",\n            \"firstName\": \"MAXIME\",\n            \"freeZones\": {\n                \"PPSADP_PERSONNE_\": {},\n                \"SUPPRIMER_\": {},\n                \"SUPPRIMER_REFERENCE_CLIENT\": {},\n                \"SUPPRIMER_TEST_SAD_05\": {},\n                \"SUPPRIMER_TEST_SAD_06\": {},\n                \"SUPPRIMER_TEST_SAD_07\": {},\n                \"PPSADP_PERSONNE_SUSP_FRAUDE\": {}\n            },\n            \"gender\": \"MALE\",\n            \"id\": \"20013654\",\n            \"lastUpdateDate\": \"2023-04-05T16:58:34+02:00\"\n        }\n    },\n    \"status\": \"SUCCESS\",\n    \"triggeredInfo\": {\n        \"triggeredActions\": [\n            {\n                \"message\": \"La tache Person track a été créée\",\n                \"objectReference\": {\n                    \"id\": \"20089194\",\n                    \"label\": \"PERSON_TRACK\",\n                    \"type\": \"TASK\"\n                },\n                \"option\": \"PERSON_TRACK\",\n                \"type\": \"CREATIONAGENDA\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Liste des banques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"customerBank\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "dtfdfg",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSIARD_SOCLE_BANQUES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "dtfdfg",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PPSIARD_SOCLE_BANQUES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Dec 2021 09:08:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"category\": \"PPSIARD_SOCLE\",\n        \"code\": \"PPSIARD_SOCLE_BANQUES\",\n        \"description\": \"Liste de quelques banques de France\\r\\n\",\n        \"moreResults\": false,\n        \"subCategory\": \"Aranger\",\n        \"title\": \"Liste de quelques banques de France\",\n        \"type\": \"MACRO\",\n        \"values\": [\n            {\n                \"code\": \"AXA Banque\",\n                \"label\": \"AXA Banque\"\n            },\n            {\n                \"code\": \"BNP Paribas\\u200e\",\n                \"label\": \"BNP Paribas\\u200e\"\n            },\n            {\n                \"code\": \"Banque Populaire\",\n                \"label\": \"Banque Populaire\"\n            },\n            {\n                \"code\": \"Banque de France\\u200e\",\n                \"label\": \"Banque de France\\u200e\"\n            },\n            {\n                \"code\": \"Caisse d'Epargne\",\n                \"label\": \"Caisse d'Epargne\"\n            },\n            {\n                \"code\": \"Credit Cooperatif\",\n                \"label\": \"Credit Cooperatif\"\n            },\n            {\n                \"code\": \"Crédit Agricole\\u200e\",\n                \"label\": \"Crédit Agricole\\u200e\"\n            },\n            {\n                \"code\": \"Crédit Industriel et Commercial\",\n                \"label\": \"Crédit Industriel et Commercial\"\n            },\n            {\n                \"code\": \"Crédit Lyonnais (LCL)\",\n                \"label\": \"Crédit Lyonnais (LCL)\"\n            },\n            {\n                \"code\": \"Crédit Mutuel\",\n                \"label\": \"Crédit Mutuel\"\n            },\n            {\n                \"code\": \"Créditdu Nord\",\n                \"label\": \"Créditdu Nord\"\n            },\n            {\n                \"code\": \"Dexia Banque\",\n                \"label\": \"Dexia Banque\"\n            },\n            {\n                \"code\": \"HSBC\",\n                \"label\": \"HSBC\"\n            },\n            {\n                \"code\": \"La Banque Postale\",\n                \"label\": \"La Banque Postale\"\n            },\n            {\n                \"code\": \"Natixis Banque\",\n                \"label\": \"Natixis Banque\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Ajouter un RIB à une entreprise",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('companyAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('companyAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('companyAdressStreetName', window.faker.address.streetName());\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    //testing bank information\r",
									"    pm.test(\"bank name is correct\", () => {\r",
									"        pm.expect(jsonData.data.bank).to.eql(\"Credit agricole\");\r",
									"    });\r",
									"\r",
									"    //testing iban information\r",
									"    pm.test(\"iban is correct\", () => {\r",
									"        pm.expect(jsonData.data.iban).to.eql(\"FR2012739000501327895759P67\");\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"companyBankDetailsID\", jsonData.data.id)\r",
									"\r",
									"\r",
									"} else {\r",
									"    //status code is not 201\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"AGRIFRPP\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"activeUses\": [\r\n        {\r\n            \"code\": \"P\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/enterprises/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"enterprises",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ajouter un RIB à une entreprise",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"{{$randomBankAccountBic}}\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"countryCode\": \"FR\",\r\n    \"activeUses\": [\"AU\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/enterprises/:id/bankDetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"enterprises",
										":id",
										"bankDetails"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{businessInformationsID}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jan 2022 15:02:17 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"activeUses\": [\n            \"AU\"\n        ],\n        \"bank\": \"Credit agricole\",\n        \"bankAddress1\": \"14 6741 Rue de la Barre\",\n        \"bankAddress2\": \"Second RIB\",\n        \"bic\": \"DGSUBHN1\",\n        \"city\": \"Champigny-sur-Marne\",\n        \"countryCode\": \"FR\",\n        \"creationDate\": \"2022-01-26T16:02:17+01:00\",\n        \"iban\": \"FR2012739000501327895759P67\",\n        \"id\": \"20000231\",\n        \"zipCode\": \"27803\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Consulter l'entreprise",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Content type is json\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Body of response is present by testing length of response\r",
									"pm.test(\"Body is present\", () => {\r",
									"    jsonData.length > 1;\r",
									"});\r",
									"\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"JsonData content\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"});\r",
									"\r",
									"//Testing contact block CLEVW-52473\r",
									"pm.test(\"contact was well added\", () => {\r",
									"    pm.expect(jsonData.data.contacts[0].beginDate).to.be.eql(pm.collectionVariables.get(\"dateDuJour\"));\r",
									"    pm.expect(jsonData.data.contacts[0].communication.email).to.be.eql(pm.collectionVariables.get(\"contact1Mail\"));\r",
									"    pm.expect(jsonData.data.contacts[0].communication.professionalPhone).to.be.eql(pm.collectionVariables.get(\"contact1Cellphone\"));\r",
									"    pm.expect(jsonData.data.contacts[0].personInformation.familyName).to.be.eql(pm.collectionVariables.get(\"contact1FamilyName\"));\r",
									"    pm.expect(jsonData.data.contacts[0].personInformation.firstName).to.be.eql(pm.collectionVariables.get(\"contact1FirstName\"));\r",
									"    pm.expect(jsonData.data.contacts[0].personInformation.gender).to.be.eql(pm.collectionVariables.get(\"contact1Gender\"));\r",
									"});\r",
									"\r",
									"console.log(\"URL pour consulter l'objet créé dans CLEVA Web :\");\r",
									"console.log(pm.environment.get(\"clevaWebUrl\")+ \"personne/morale/\" +jsonData.data.businessInformations.id +\"/consultation\");\r",
									"\r",
									"console.log(pm.response.json());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/enterprise/customers/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"enterprise",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/enterprise/customers/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"enterprise",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{customerId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:57:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"address\": {\n            \"countryCode\": \"FR\",\n            \"countryName\": \"FRANCE\",\n            \"creationDate\": \"2021-12-28T14:41:35+01:00\",\n            \"id\": \"20000041\",\n            \"latitude\": 87.9968,\n            \"line1\": \"Picard Vaneau\",\n            \"line3\": \"40880\",\n            \"line4\": \"Maevachester\",\n            \"longitude\": 43.4261,\n            \"mainAddress\": true,\n            \"resume\": \"Picard Vaneau 40880, FRANCE\",\n            \"updateDate\": \"2021-12-28T14:41:38+01:00\",\n            \"validityDate\": \"2021-12-28\"\n        },\n        \"auxiliaryCode\": \"C10556\",\n        \"bankDetails\": {\n            \"bank\": \"BNP Paribas\\u200e\",\n            \"bankAddress1\": \"Aubry des Grands Augustins\",\n            \"bic\": \"UNIONGR1\",\n            \"city\": \"Paulberg\",\n            \"creationDate\": \"2021-12-28T14:41:40+01:00\",\n            \"holder\": \"GAUTIER - RICHARD\",\n            \"iban\": \"LB775034ZD0727064D12F9951950\",\n            \"id\": \"20000035\",\n            \"type\": \"Main account\",\n            \"updateDate\": \"2021-12-28T14:55:49+01:00\",\n            \"zipCode\": \"44900\"\n        },\n        \"businessInformations\": {\n            \"companyName\": \"GAUTIER - RICHARD\",\n            \"creationDate\": \"2021-12-28T14:41:35+01:00\",\n            \"externalReference\": \"66646\",\n            \"freeZones\": {},\n            \"id\": \"20000081\",\n            \"lastUpdateDate\": \"2021-12-28T14:55:49+01:00\",\n            \"nafCode\": \"53.10\",\n            \"nafLabel\": \"Activ. poste dans le cadre d'une obligation de service universel\",\n            \"nic\": \"00029\",\n            \"siren\": \"811345883\",\n            \"siret\": \"81134588300029\",\n            \"titleId\": \"Ce\",\n            \"titleLabel\": \"Comité d'Entreprise\"\n        },\n        \"communication\": {\n            \"cellphone\": \"0388360590\",\n            \"email\": \"Lena.Charles@example.net\",\n            \"webSite\": \"http://lucie.com\"\n        },\n        \"companyCode\": \"ADP**\",\n        \"companyLabel\": \"Starterbox - ADP\",\n        \"contacts\": [\n            {\n                \"address\": {},\n                \"beginDate\": \"2021-12-28\",\n                \"communication\": {\n                    \"cellphone\": \"+33 425438463\",\n                    \"email\": \"Pierre_Renaud@example.net\",\n                    \"professionalPhone\": \"0334980484\"\n                },\n                \"freeZones\": {},\n                \"id\": \"20000023\",\n                \"personInformation\": {\n                    \"completeName\": \"LOPEZ ALEXANDRE\",\n                    \"creationDate\": \"2021-12-28T14:41:36+01:00\",\n                    \"familyName\": \"LOPEZ\",\n                    \"firstName\": \"ALEXANDRE\",\n                    \"freeZones\": {},\n                    \"id\": \"20000082\",\n                    \"lastUpdateDate\": \"2021-12-28T14:41:37+01:00\",\n                    \"titleCode\": \"Mles\",\n                    \"titleLabel\": \"Mesdemoiselles\"\n                }\n            }\n        ],\n        \"creationDate\": \"2021-12-28T14:41:35+01:00\",\n        \"debtRecoveryExclusion\": false,\n        \"directDebitType\": \"POLICE\",\n        \"discountRate\": 0,\n        \"freeZones\": {},\n        \"id\": \"20000020\",\n        \"managementInformation\": {},\n        \"prospect\": false,\n        \"type\": \"LEGAL\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste rachat franchise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"customerBank\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "dtfdfg",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSPROD_PPCS1_LA_RACHAT_FRANCHISE",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "dtfdfg",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PPSIARD_SOCLE_BANQUES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Dec 2021 09:08:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"category\": \"PPSIARD_SOCLE\",\n        \"code\": \"PPSIARD_SOCLE_BANQUES\",\n        \"description\": \"Liste de quelques banques de France\\r\\n\",\n        \"moreResults\": false,\n        \"subCategory\": \"Aranger\",\n        \"title\": \"Liste de quelques banques de France\",\n        \"type\": \"MACRO\",\n        \"values\": [\n            {\n                \"code\": \"AXA Banque\",\n                \"label\": \"AXA Banque\"\n            },\n            {\n                \"code\": \"BNP Paribas\\u200e\",\n                \"label\": \"BNP Paribas\\u200e\"\n            },\n            {\n                \"code\": \"Banque Populaire\",\n                \"label\": \"Banque Populaire\"\n            },\n            {\n                \"code\": \"Banque de France\\u200e\",\n                \"label\": \"Banque de France\\u200e\"\n            },\n            {\n                \"code\": \"Caisse d'Epargne\",\n                \"label\": \"Caisse d'Epargne\"\n            },\n            {\n                \"code\": \"Credit Cooperatif\",\n                \"label\": \"Credit Cooperatif\"\n            },\n            {\n                \"code\": \"Crédit Agricole\\u200e\",\n                \"label\": \"Crédit Agricole\\u200e\"\n            },\n            {\n                \"code\": \"Crédit Industriel et Commercial\",\n                \"label\": \"Crédit Industriel et Commercial\"\n            },\n            {\n                \"code\": \"Crédit Lyonnais (LCL)\",\n                \"label\": \"Crédit Lyonnais (LCL)\"\n            },\n            {\n                \"code\": \"Crédit Mutuel\",\n                \"label\": \"Crédit Mutuel\"\n            },\n            {\n                \"code\": \"Créditdu Nord\",\n                \"label\": \"Créditdu Nord\"\n            },\n            {\n                \"code\": \"Dexia Banque\",\n                \"label\": \"Dexia Banque\"\n            },\n            {\n                \"code\": \"HSBC\",\n                \"label\": \"HSBC\"\n            },\n            {\n                \"code\": \"La Banque Postale\",\n                \"label\": \"La Banque Postale\"\n            },\n            {\n                \"code\": \"Natixis Banque\",\n                \"label\": \"Natixis Banque\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Créer un devis prévoyance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"grouping\", _.random(50000001, 90000001));\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"contractId\", jsonData.data.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customerId\": {{customerId}},\n    \"productCode\": \"{{productCode}}\",\n    \"grouping\": \"{{$randomUUID}}\",\n    \"status\": {\n        \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\"\n    },\n    \"jobClassCode\": \"ENSEMBLE\",\n    \"freeZones\": {\n        \"PPSPROD_PPCS1_ZL_TAUX_K_DC\": {\n            \"type\": \"NUMERIC\",\n            \"value\": 5\n        },\n        \"PPSPROD_PPCS1_ZL_AGE_MOY_SAL\": {\n            \"type\": \"NUMERIC\",\n            \"value\": 34\n        },\n        \"PPSPROD_PPCS1_ZL_INCAP_TAUX_RESTI\": {\n            \"type\": \"STRING\",\n            \"value\": \"NIVEAU 1\"\n        },\n        \"PPSPROD_PPCS1_ZL_INCAP_FRANCHISE\": {\n            \"type\": \"NUMERIC\",\n            \"value\": 30\n        },\n        \"PPSPROD_PPCS1_ZL_INVAL2_TAUX_RESTI\": {\n            \"type\": \"STRING\",\n            \"value\": \"NIVEAU 1\"\n        },\n        \"PPSPROD_PPCS1_ZL_NIVEAU_DECES\": {\n            \"type\": \"STRING\",\n            \"value\": \"NIVEAU 1\"\n        },\n        \"PPSPROD_PPCS1_ZL_DEPARTEMENT_GEO\": {\n            \"type\": \"STRING\",\n            \"value\": \"69\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/collective/contracts",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts"
							]
						}
					},
					"response": [
						{
							"name": "201 CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customerId\": 1000304,\n    \"productCode\": \"SLCEP\",\n    \"description\": \"Etude prévoyance\",\n    \"grouping\": 73835728,\n    \"status\": {\n        \"subcode\": \"01\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/collective/contracts",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 15:24:21 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"adjustmentCoefficient\": 0.0,\n        \"beneficiaryAuthorizations\": {\n            \"POLICY_HOLDER\": {\n                \"authorized\": true,\n                \"maxAge\": 67\n            },\n            \"CHILD\": {\n                \"authorized\": false\n            },\n            \"SPOUSE\": {\n                \"authorized\": false\n            },\n            \"PARENT\": {\n                \"authorized\": false\n            },\n            \"OTHER\": {\n                \"authorized\": false\n            }\n        },\n        \"branchCode\": \"PREVOYANCE\",\n        \"branchLabel\": \"Prévoyance\",\n        \"brokers\": [\n            {\n                \"broker\": {\n                    \"businessInformation\": {},\n                    \"code\": \"I10\",\n                    \"id\": \"1000012\",\n                    \"type\": \"COURTIER\"\n                },\n                \"freeZones\": {},\n                \"roleCode\": \"PRINCIPAL\",\n                \"roleLabel\": \"Principal\"\n            }\n        ],\n        \"cardinalityType\": \"COLLECTIVE\",\n        \"coinsurance\": false,\n        \"commercialCoefficient\": 0.0,\n        \"commissions\": {\n            \"coinsuranceApetitionCommission\": 0.0,\n            \"endorsementDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"newBusinessDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"termDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"terminationDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"totalCommissionRate\": 0.0\n        },\n        \"companyCode\": \"S0001\",\n        \"companyLabel\": \"TPA Swiss Life\",\n        \"contacts\": [],\n        \"currentIndex\": 0.0,\n        \"customerDeposit\": \"0.0\",\n        \"customerId\": \"1000304\",\n        \"customerName\": \"ENTREPRISE 8582143\",\n        \"debtRecoveryExclusion\": false,\n        \"description\": \"Etude prévoyance\",\n        \"freeZones\": {\n            \"TPA_SLCEP_ZL_GENE_TARIF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCEP_ZL_NIV_BLOC_IT_IP\": {},\n            \"TPA_SLCEP_ZL_TR_AGE\": {},\n            \"TPA_SLCEP_ZL_INDEMN\": {},\n            \"TPA_SLCEP_ZL_NAF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Activités d'enquête\"\n            },\n            \"TPA_PERSONNE_CREA_LIEN_PRE_AFIL\": {},\n            \"TPA_SLCEP_ZL_NIV_BLOC_DECES\": {},\n            \"TPA_SLCEP_ZL_SURPRIME_QM\": {},\n            \"TPA_SLCEP_ZL_SURPRIME_REPRISE_PASSIF\": {},\n            \"TPA_SLCEP_ZL_AGE_MOY_SAL\": {},\n            \"TPA_SLCEP_ZL_TR_SALAIRES_RETENUES\": {},\n            \"TPA_SLCEP_ZL_COUV\": {},\n            \"TPA_SLCEP_ZL_OFFRE\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCEP_ZL_COEF_INDEXATION\": {},\n            \"TPA_SLCEP_ZL_NIV_FRANCHISE_CHOISI\": {},\n            \"TPA_SLCEP_ZL_TAUX_INDEMNISATION\": {},\n            \"TPA_SLCEP_ZL_TAUX_MINORATION_COMISSIONS\": {}\n        },\n        \"grouping\": \"73835728\",\n        \"id\": \"1000601\",\n        \"indexable\": false,\n        \"insurerId\": 1000010,\n        \"insurerName\": \"SWISSLIFE PREVOYANCE ET SANTE\",\n        \"limitationPeriod\": 0,\n        \"management\": {},\n        \"number\": \"SLCEP_D_000076\",\n        \"origin\": 0,\n        \"payment\": {\n            \"bankDetailsUsageCode\": \"P\",\n            \"bankDetailsUsageLabel\": \"Principale\",\n            \"discountPayer\": \"CUSTOMER\",\n            \"endorsementDiscountCode\": \"VA\",\n            \"endorsementPayer\": \"CUSTOMER\",\n            \"endorsementPaymentCode\": \"PA\",\n            \"newBusinessPayer\": \"CUSTOMER\",\n            \"newBusinessPaymentCode\": \"PA\",\n            \"payablePersonCallName\": \"ENTREPRISE 8582143\",\n            \"payerPersonId\": 1000849,\n            \"paymentAddress\": {\n                \"countryCode\": \"FO\",\n                \"countryName\": \"Féroé (Iles)\",\n                \"line1\": \"6707 Rue Pierre-Delore\",\n                \"line3\": \"34069\",\n                \"line4\": \"Tourcoing\",\n                \"mainAddress\": true,\n                \"resume\": \"6707 Rue Pierre-Delore 34069, Féroé (Iles)\"\n            },\n            \"periodicity\": \"QUARTERLY\",\n            \"termPayer\": \"CUSTOMER\",\n            \"termPaymentCode\": \"PA\",\n            \"termPeriodicity\": \"EXPIRED\"\n        },\n        \"previousIndex\": 0.0,\n        \"productCode\": \"SLCEP\",\n        \"productLabel\": \"SwissLife Corporate Expat Prévoyance\",\n        \"provisionalPremiumCallRate\": 0.0,\n        \"revisable\": false,\n        \"status\": {\n            \"code\": \"QUOTE\",\n            \"creationDate\": \"2020-06-24\",\n            \"earliestDate\": \"2020-06-24\",\n            \"effectiveDate\": \"2020-06-24\",\n            \"effectiveTime\": \"2020-06-24\",\n            \"mainDueDate\": \"0101\",\n            \"nextDueDate\": \"2020-06-24\",\n            \"nextDueDateCode\": \"2006\",\n            \"nextMainDueDate\": \"2021-01-01\",\n            \"originalContractEffectiveDate\": \"2020-06-24\",\n            \"startDate\": \"2020-06-24\",\n            \"subcode\": \"01\",\n            \"sublabel\": \"A finaliser\",\n            \"termBlocked\": false\n        },\n        \"typology\": {\n            \"mandatoryMembership\": true,\n            \"nonResponsible\": false,\n            \"pensionPlan\": false\n        }\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Modifier devis prévoyance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"zlAgeMoyenSalaries\", _.random(30, 65));\r",
									"\r",
									" var jobCategories = pm.collectionVariables.get(\"jobCategories\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contributionBase\": {\n        \"code\": \"{{codeAssPrev}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/collective/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contractId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": {\n        \"subcode\": \"02\"\n    },\n    \"contributionBase\": {\n        \"code\": \"SLCEP_ASS_ZONES\"\n    },\n    \"jobClassCode\": \"NONCADRE\",\n    \"freeZones\": {\n        \"TPA_SLCEP_ZL_TR_SALAIRES_RETENUES\": {\n            \"type\": \"STRING\",\n            \"value\": \"A\"\n        },\n        \"TPA_SLCEP_ZL_INDEMN\": {\n            \"type\": \"STRING\",\n            \"value\": \"CpltCFE\"\n        },\n        \"TPA_SLCEP_ZL_AGE_MOY_SAL\": {\n            \"type\": \"NUMERIC\",\n            \"value\": 31\n        },\n        \"TPA_SLCEP_ZL_TAUX_INDEMNISATION\": {\n            \"type\": \"STRING\",\n            \"value\": 90\n        },\n        \"TPA_SLCEP_ZL_NIV_BLOC_DECES\": {\n            \"type\": \"STRING\",\n            \"value\": \"PRUDENCE\"\n        },\n        \"TPA_SLCEP_ZL_NIV_FRANCHISE_CHOISI\": {\n            \"type\": \"NUMERIC\",\n            \"value\": 30.0\n        },\n        \"TPA_SLCEP_SOUSCRIPTION_ZL_AT_ENCOURS\": {\n            \"type\": \"BOOLEAN\",\n            \"value\": false\n        },\n        \"TPA_SLCEP_SOUSCRIPTION_ZL_GAR_SUP\": {\n            \"type\": \"BOOLEAN\",\n            \"value\": false\n        },\n         \"TPA_SLCEP_SOUSCRIPTION_REPRISE_CONCURRENCE\": {\n            \"type\": \"BOOLEAN\",\n            \"value\": false\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id\n",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id\n"
									],
									"variable": [
										{
											"key": "id\n",
											"value": "{{policeIdPrev}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Jun 2020 08:27:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"adjustmentCoefficient\": 0.0,\n        \"beneficiaryAuthorizations\": {\n            \"POLICY_HOLDER\": {\n                \"authorized\": true,\n                \"maxAge\": 67\n            },\n            \"CHILD\": {\n                \"authorized\": false\n            },\n            \"SPOUSE\": {\n                \"authorized\": false\n            },\n            \"PARENT\": {\n                \"authorized\": false\n            },\n            \"OTHER\": {\n                \"authorized\": false\n            }\n        },\n        \"branchCode\": \"PREVOYANCE\",\n        \"branchLabel\": \"Prévoyance\",\n        \"brokers\": [\n            {\n                \"broker\": {\n                    \"businessInformation\": {},\n                    \"code\": \"I10\",\n                    \"id\": \"1000012\",\n                    \"type\": \"COURTIER\"\n                },\n                \"commissionRate\": 8.0,\n                \"freeZones\": {},\n                \"roleCode\": \"PRINCIPAL\",\n                \"roleLabel\": \"Principal\"\n            }\n        ],\n        \"cardinalityType\": \"COLLECTIVE\",\n        \"coinsurance\": false,\n        \"commercialCoefficient\": 0.0,\n        \"commissions\": {\n            \"coinsuranceApetitionCommission\": 0.0,\n            \"endorsementDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"newBusinessDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"termDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"terminationDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"totalCommissionRate\": 0.0\n        },\n        \"companyCode\": \"S0001\",\n        \"companyLabel\": \"TPA Swiss Life\",\n        \"contacts\": [],\n        \"contributionBase\": {\n            \"baseType\": \"SALARY\",\n            \"code\": \"SLCEP_ASS_ZONES\",\n            \"id\": \"1000298\",\n            \"label\": \"Assiette par Zone\",\n            \"startDate\": \"2020-06-24\"\n        },\n        \"currentIndex\": 0.0,\n        \"customerDeposit\": \"0.0\",\n        \"customerId\": \"1000304\",\n        \"customerName\": \"ENTREPRISE 8582143\",\n        \"debtRecoveryExclusion\": false,\n        \"description\": \"Etude prévoyance\",\n        \"freeZones\": {\n            \"TPA_SLCEP_ZL_GENE_TARIF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCEP_ZL_NIV_BLOC_IT_IP\": {\n                \"type\": \"STRING\",\n                \"value\": \"1\"\n            },\n            \"TPA_SLCEP_ZL_TR_AGE\": {\n                \"type\": \"STRING\",\n                \"value\": \"55&plus\"\n            },\n            \"TPA_SLCEP_ZL_INDEMN\": {\n                \"type\": \"STRING\",\n                \"value\": \"CpltCFE\"\n            },\n            \"TPA_SLCEP_ZL_NAF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Activités d'enquête\"\n            },\n            \"TPA_PERSONNE_CREA_LIEN_PRE_AFIL\": {},\n            \"TPA_SLCEP_ZL_NIV_BLOC_DECES\": {\n                \"type\": \"STRING\",\n                \"value\": \"PRUDENCE\"\n            },\n            \"TPA_SLCEP_ZL_SURPRIME_QM\": {},\n            \"TPA_SLCEP_ZL_SURPRIME_REPRISE_PASSIF\": {},\n            \"TPA_SLCEP_ZL_AGE_MOY_SAL\": {},\n            \"TPA_SLCEP_ZL_TR_SALAIRES_RETENUES\": {\n                \"type\": \"STRING\",\n                \"value\": \"AB\"\n            },\n            \"TPA_SLCEP_ZL_COUV\": {\n                \"type\": \"STRING\",\n                \"value\": \"AB\"\n            },\n            \"TPA_SLCEP_ZL_OFFRE\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCEP_ZL_COEF_INDEXATION\": {},\n            \"TPA_SLCEP_ZL_NIV_FRANCHISE_CHOISI\": {},\n            \"TPA_SLCEP_ZL_TAUX_INDEMNISATION\": {},\n            \"TPA_SLCEP_ZL_TAUX_MINORATION_COMISSIONS\": {}\n        },\n        \"grouping\": \"73835728\",\n        \"id\": \"1000601\",\n        \"indexable\": false,\n        \"insurerId\": 1000010,\n        \"insurerName\": \"SWISSLIFE PREVOYANCE ET SANTE\",\n        \"jobClassCode\": \"NONCADRE\",\n        \"jobClassLabel\": \"Non cadre\",\n        \"limitationPeriod\": 0,\n        \"management\": {\n            \"salesRepCallName\": \"DUPONT JEANN\",\n            \"salesRepUserId\": \"B2CAPPORTEUR\"\n        },\n        \"number\": \"SLCEP_D_000076\",\n        \"origin\": 0,\n        \"payment\": {\n            \"bankDetailsUsageCode\": \"P\",\n            \"bankDetailsUsageLabel\": \"Principale\",\n            \"discountPayer\": \"CUSTOMER\",\n            \"endorsementDiscountCode\": \"VA\",\n            \"endorsementPayer\": \"CUSTOMER\",\n            \"endorsementPaymentCode\": \"PA\",\n            \"newBusinessPayer\": \"CUSTOMER\",\n            \"newBusinessPaymentCode\": \"PA\",\n            \"payablePersonCallName\": \"ENTREPRISE 8582143\",\n            \"payerPersonId\": 1000849,\n            \"paymentAddress\": {\n                \"countryCode\": \"FO\",\n                \"countryName\": \"Féroé (Iles)\",\n                \"line1\": \"6707 Rue Pierre-Delore\",\n                \"line3\": \"34069\",\n                \"line4\": \"Tourcoing\",\n                \"mainAddress\": true,\n                \"resume\": \"6707 Rue Pierre-Delore 34069, Féroé (Iles)\"\n            },\n            \"periodicity\": \"QUARTERLY\",\n            \"termPayer\": \"CUSTOMER\",\n            \"termPaymentCode\": \"PA\",\n            \"termPeriodicity\": \"EXPIRED\"\n        },\n        \"previousIndex\": 0.0,\n        \"productCode\": \"SLCEP\",\n        \"productLabel\": \"SwissLife Corporate Expat Prévoyance\",\n        \"provisionalPremiumCallRate\": 0.0,\n        \"revisable\": false,\n        \"status\": {\n            \"code\": \"QUOTE\",\n            \"creationDate\": \"2020-06-24\",\n            \"earliestDate\": \"2020-06-24\",\n            \"effectiveDate\": \"2020-06-24\",\n            \"effectiveTime\": \"2020-06-24\",\n            \"mainDueDate\": \"0101\",\n            \"nextDueDate\": \"2020-06-24\",\n            \"nextDueDateCode\": \"2006\",\n            \"nextMainDueDate\": \"2021-01-01\",\n            \"originalContractEffectiveDate\": \"2020-06-24\",\n            \"startDate\": \"2020-06-24\",\n            \"subcode\": \"02\",\n            \"sublabel\": \"Tarification sur mesure accordée\",\n            \"termBlocked\": false\n        },\n        \"typology\": {\n            \"mandatoryMembership\": true,\n            \"nonResponsible\": false,\n            \"pensionPlan\": false\n        }\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Consulter le devis prevoyance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/collective/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contractId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{policeIdPrev}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Jul 2020 12:29:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"adjustmentCoefficient\": 0,\n        \"beneficiaryAuthorizations\": {\n            \"POLICY_HOLDER\": {\n                \"authorized\": true,\n                \"maxAge\": 67\n            },\n            \"CHILD\": {\n                \"authorized\": false\n            },\n            \"SPOUSE\": {\n                \"authorized\": false\n            },\n            \"PARENT\": {\n                \"authorized\": false\n            },\n            \"OTHER\": {\n                \"authorized\": false\n            }\n        },\n        \"branchCode\": \"PREVOYANCE\",\n        \"branchLabel\": \"Prévoyance\",\n        \"brokers\": [\n            {\n                \"broker\": {\n                    \"businessInformation\": {\n                        \"companyName\": \"TPA SWISS LIFE\",\n                        \"creationDate\": \"2020-03-30\",\n                        \"freeZones\": {\n                            \"TPA_PERSONNE_EXONERATION\": {},\n                            \"TPA_SLCES_NATIONALITE\": {},\n                            \"TPA_PERSONNE_TYPE_EXONERATION\": {},\n                            \"TPA_PERSONNE_CREA_LIEN_ESPACE\": {},\n                            \"TPA_SLCES_LIEN_ESPACE_ENTR\": {}\n                        },\n                        \"lastUpdateDate\": \"2020-06-17\",\n                        \"siren\": \"324453243\",\n                        \"siret\": \"324453243\",\n                        \"titleId\": \"Ag\",\n                        \"titleLabel\": \"Agence\"\n                    },\n                    \"code\": \"I10\",\n                    \"communication\": {\n                        \"homePhone\": \"++33\"\n                    },\n                    \"id\": \"1000012\",\n                    \"mainAddress\": {\n                        \"city\": \"PARIS 09\",\n                        \"countryCode\": \"FR\",\n                        \"countryName\": \"France\",\n                        \"id\": \"1000030\",\n                        \"inseeCode\": \"75109\",\n                        \"line1\": \"22 rue de la charité\",\n                        \"mainAddress\": true,\n                        \"resume\": \"22 rue de la charité, 75009 PARIS 09, France\",\n                        \"zipCode\": \"75009\"\n                    },\n                    \"type\": \"COURTIER\"\n                },\n                \"freeZones\": {},\n                \"roleCode\": \"PRINCIPAL\",\n                \"roleLabel\": \"Principal\"\n            }\n        ],\n        \"cardinalityType\": \"COLLECTIVE\",\n        \"coinsurance\": false,\n        \"commercialCoefficient\": 0,\n        \"commissions\": {\n            \"coinsuranceApetitionCommission\": 0,\n            \"endorsementDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"newBusinessDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"termDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"terminationDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"totalCommissionRate\": 0\n        },\n        \"companyCode\": \"S0001\",\n        \"companyLabel\": \"TPA Swiss Life\",\n        \"contacts\": [],\n        \"currentIndex\": 0,\n        \"customerDeposit\": \"0.0\",\n        \"customerId\": \"1000374\",\n        \"customerName\": \"ENTREPRISE 6226027\",\n        \"debtRecoveryExclusion\": false,\n        \"description\": \"Etude prévoyance\",\n        \"establishmentId\": \"SLPS\",\n        \"establishmentLabel\": \"SWISS LIFE PREVOYANCE ET SANTE\",\n        \"freeZones\": {\n            \"TPA_SLCEP_ZL_GENE_TARIF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCEP_ZL_NIV_BLOC_IT_IP\": {},\n            \"TPA_SLCEP_ZL_TR_AGE\": {},\n            \"TPA_SLCEP_ZL_INDEMN\": {},\n            \"TPA_SLCEP_ZL_NAF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Activités de centres d'appels\"\n            },\n            \"TPA_PERSONNE_CREA_LIEN_PRE_AFIL\": {},\n            \"TPA_SLCEP_ZL_TYPE_DE_SIGNATURE\": {},\n            \"TPA_SLCEP_ZL_NIV_BLOC_DECES\": {},\n            \"TPA_SLCEP_ZL_SURPRIME_QM\": {},\n            \"TPA_SLCEP_ZL_OPTION_IT_IP_SOUSCRITE\": {},\n            \"TPA_SLCEP_ZL_SURPRIME_REPRISE_PASSIF\": {},\n            \"TPA_SLCEP_ZL_AGE_MOY_SAL\": {},\n            \"TPA_SLCEP_ZL_TR_SALAIRES_RETENUES\": {},\n            \"TPA_SLCEP_ZL_OFFRE\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCEP_ZL_CODE_NAF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Tarif normal\"\n            },\n            \"TPA_SLCEP_ZL_COEF_INDEXATION\": {},\n            \"TPA_SLCEP_ZL_NIV_FRANCHISE_CHOISI\": {},\n            \"TPA_SLCEP_ZL_TAUX_INDEMNISATION\": {},\n            \"TPA_SLCEP_ZL_TAUX_MINORATION_COMISSIONS\": {}\n        },\n        \"grouping\": \"75639131\",\n        \"id\": \"1000917\",\n        \"indexable\": false,\n        \"insurerId\": 1000010,\n        \"insurerName\": \"SWISSLIFE PREVOYANCE ET SANTE\",\n        \"limitationPeriod\": 0,\n        \"management\": {},\n        \"number\": \"SLCEP_000108\",\n        \"origin\": 0,\n        \"payment\": {\n            \"bankDetailsUsageCode\": \"P\",\n            \"bankDetailsUsageLabel\": \"Principale\",\n            \"discountPayer\": \"CUSTOMER\",\n            \"endorsementDiscountCode\": \"VA\",\n            \"endorsementPayer\": \"CUSTOMER\",\n            \"endorsementPaymentCode\": \"PA\",\n            \"newBusinessPayer\": \"CUSTOMER\",\n            \"newBusinessPaymentCode\": \"PA\",\n            \"payablePersonCallName\": \"ENTREPRISE 6226027\",\n            \"payerPersonId\": 1001065,\n            \"paymentAddress\": {\n                \"countryCode\": \"FJ\",\n                \"countryName\": \"Fidji\",\n                \"id\": \"1000304\",\n                \"line1\": \"2240 Avenue du Fort-Caire\",\n                \"line3\": \"68012\",\n                \"line4\": \"Strasbourg\",\n                \"mainAddress\": true,\n                \"resume\": \"2240 Avenue du Fort-Caire 68012, Fidji\"\n            },\n            \"paymentBankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"22 avenue FOCH\",\n                \"bankAddress2\": \"Immeuble lumière\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"Lyon\",\n                \"countryCode\": \"FR\",\n                \"creationDate\": \"2020-07-07\",\n                \"holder\": \"TONY STARK\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"1000212\",\n                \"updateDate\": \"2020-07-07\",\n                \"zipCode\": \"69007\"\n            },\n            \"periodicity\": \"QUARTERLY\",\n            \"termPayer\": \"CUSTOMER\",\n            \"termPaymentCode\": \"PA\",\n            \"termPeriodicity\": \"EXPIRED\"\n        },\n        \"previousIndex\": 0,\n        \"productCode\": \"SLCEP\",\n        \"productLabel\": \"SwissLife Corporate Expat Prévoyance\",\n        \"provisionalPremiumCallRate\": 0,\n        \"revisable\": false,\n        \"status\": {\n            \"code\": \"QUOTE\",\n            \"creationDate\": \"2020-07-09\",\n            \"earliestDate\": \"2020-07-09\",\n            \"effectiveDate\": \"2020-07-09\",\n            \"effectiveTime\": \"2020-07-09\",\n            \"mainDueDate\": \"0101\",\n            \"nextDueDate\": \"2020-07-09\",\n            \"nextDueDateCode\": \"2007\",\n            \"nextMainDueDate\": \"2021-01-01\",\n            \"originalContractEffectiveDate\": \"2020-07-09\",\n            \"startDate\": \"2020-07-09\",\n            \"subcode\": \"01\",\n            \"sublabel\": \"A finaliser\",\n            \"termBlocked\": false\n        },\n        \"typology\": {\n            \"mandatoryMembership\": true,\n            \"nonResponsible\": false,\n            \"pensionPlan\": false\n        }\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Générer les modèles de couverture",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"defaultReasonCode\": \"NOUVELLE_ASSIETTE\",\r\n    \"defaultFormula\": \"PPCS1_D_P\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/collective/contracts/:id/coverageModels",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts",
								":id",
								"coverageModels"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contractId}}",
									"description": "(Required) Quote identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "Générer les modèles de couverture",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/coverageModels",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"coverageModels"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{contractId}}",
											"description": "(Required) Quote identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Content-Language",
									"value": "fr-FR"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Apr 2023 12:53:42 GMT"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": [\n        {\n            \"beneficiaries\": [\n                {\n                    \"clauses\": [],\n                    \"formulaCode\": \"PPCS1\",\n                    \"id\": \"20260702\",\n                    \"qualification\": \"POLICY_HOLDER\",\n                    \"warranties\": [\n                        {\n                            \"beneficiaryType\": \"POLICY_HOLDER\",\n                            \"capital\": 80,\n                            \"code\": \"IC***\",\n                            \"compensationRates\": {\n                                \"global\": 80\n                            },\n                            \"coverageCode\": \"PPSPROD_PPCS1_IC\",\n                            \"coverageLabel\": \"PPSADP Incapacité collective standard\",\n                            \"deductibleValue\": 30,\n                            \"duration\": 0,\n                            \"freeZones\": {\n                                \"PPSPROD_PATS1_SOUSCRIPTION_DENTAIRE\": {},\n                                \"PPSPROD_PPCS1_ZL_VALEUR_REFERENCE\": {},\n                                \"PPSPROD_PPCS1_ZL_RECAP_TAUX_INV1\": {},\n                                \"PPSPROD_PPCS1_ZL_RACHAT_FRANCHISE\": {},\n                                \"PPSPROD_PPCS1_ZL_DETAIL_FRANCH_HOSPI\": {},\n                                \"PPSPROD_PPCS1_ZL_GAD_NIVE_DECES\": {\n                                    \"type\": \"STRING\",\n                                    \"value\": \"NIVEAU 1\"\n                                },\n                                \"PPSPROD_PPCS1_ZL_NBR_JOUR_GARANTIE\": {},\n                                \"PPSPROD_PPCS1_ZL_NIV_GARANTIE\": {},\n                                \"PPSPROD_PPCS1_ZL_INVALIDITE_1_SOUSCRITE\": {}\n                            },\n                            \"id\": \"23879258\",\n                            \"indemnity\": 0,\n                            \"insurerCode\": \"XDSN1\",\n                            \"insurerName\": \"INETUM CIE\",\n                            \"label\": \"Incapacité\",\n                            \"reductionCoefficient\": 0,\n                            \"type\": \"INCAPACITY\"\n                        },\n                        {\n                            \"beneficiaryType\": \"POLICY_HOLDER\",\n                            \"capital\": 90,\n                            \"code\": \"IV23*\",\n                            \"compensationRates\": {\n                                \"global\": 90\n                            },\n                            \"coverageCode\": \"PPSPROD_PPCS1_IV_COLL_STD\",\n                            \"coverageLabel\": \"PPSADP Invalidité collective Standard\",\n                            \"deductibleValue\": 30,\n                            \"duration\": 0,\n                            \"freeZones\": {\n                                \"PPSPROD_PATS1_SOUSCRIPTION_DENTAIRE\": {},\n                                \"PPSPROD_PPCS1_ZL_VALEUR_REFERENCE\": {},\n                                \"PPSPROD_PPCS1_ZL_RECAP_TAUX_INV1\": {},\n                                \"PPSPROD_PPCS1_ZL_RACHAT_FRANCHISE\": {},\n                                \"PPSPROD_PPCS1_ZL_DETAIL_FRANCH_HOSPI\": {},\n                                \"PPSPROD_PPCS1_ZL_GAD_NIVE_DECES\": {\n                                    \"type\": \"STRING\",\n                                    \"value\": \"NIVEAU 1\"\n                                },\n                                \"PPSPROD_PPCS1_ZL_NBR_JOUR_GARANTIE\": {},\n                                \"PPSPROD_PPCS1_ZL_NIV_GARANTIE\": {},\n                                \"PPSPROD_PPCS1_ZL_INVALIDITE_1_SOUSCRITE\": {}\n                            },\n                            \"id\": \"23879273\",\n                            \"indemnity\": 0,\n                            \"insurerCode\": \"XDSN1\",\n                            \"insurerName\": \"INETUM CIE\",\n                            \"label\": \"Invalidité Catégorie 2 et 3 \",\n                            \"reductionCoefficient\": 0,\n                            \"type\": \"DISABILITY\"\n                        },\n                        {\n                            \"capital\": 0,\n                            \"code\": \"DC***\",\n                            \"compensationRates\": {},\n                            \"deductibleValue\": 30,\n                            \"duration\": 0,\n                            \"freeZones\": {\n                                \"PPSPROD_PATS1_SOUSCRIPTION_DENTAIRE\": {},\n                                \"PPSPROD_PPCS1_ZL_VALEUR_REFERENCE\": {},\n                                \"PPSPROD_PPCS1_ZL_RECAP_TAUX_INV1\": {},\n                                \"PPSPROD_PPCS1_ZL_RACHAT_FRANCHISE\": {},\n                                \"PPSPROD_PPCS1_ZL_DETAIL_FRANCH_HOSPI\": {},\n                                \"PPSPROD_PPCS1_ZL_GAD_NIVE_DECES\": {\n                                    \"type\": \"STRING\",\n                                    \"value\": \"NIVEAU 1\"\n                                },\n                                \"PPSPROD_PPCS1_ZL_NBR_JOUR_GARANTIE\": {},\n                                \"PPSPROD_PPCS1_ZL_NIV_GARANTIE\": {},\n                                \"PPSPROD_PPCS1_ZL_INVALIDITE_1_SOUSCRITE\": {}\n                            },\n                            \"id\": \"23879277\",\n                            \"indemnity\": 0,\n                            \"insurerCode\": \"XDSN1\",\n                            \"insurerName\": \"INETUM CIE\",\n                            \"label\": \"Décès toutes causes\",\n                            \"reductionCoefficient\": 0,\n                            \"type\": \"DEATH\"\n                        }\n                    ]\n                }\n            ],\n            \"code\": \"PPCS1_D_P\",\n            \"coverageModelLabel\": \"Modèle déclaratif couverture standard PRV\",\n            \"freeZones\": {},\n            \"id\": \"20399549\",\n            \"label\": \"PPCS1_D_P\",\n            \"startDate\": \"2023-03-13\",\n            \"versionId\": \"20399549\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Générer les modèles de cotisation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"defaultReasonCode\": \"NOUVELLE_ASSIETTE\",\r\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\r\n    \"details\": [\r\n        {\r\n            \"beneficiaries\": [\r\n                {\r\n                    \"qualification\": \"POLICY_HOLDER\",\r\n                    \"warranties\": [\r\n                        {\r\n                            \"additionalPremiumRate\": 5.0,\r\n                            \"baseNature\": \"LUMP_BASE\",\r\n                            \"baseType\": \"AA\",\r\n                            \"baseValue\": 2.0,\r\n                            \"code\": \"IC**A\",\r\n                            \"deductibleValue\": 500,\r\n                            \"indemnity\": 0,\r\n                            \"multiplier\": 1.0,\r\n                            \"reductionCoefficient\": 4.0\r\n                        },\r\n                        {\r\n                            \"additionalPremiumRate\": 5.0,\r\n                            \"baseNature\": \"LUMP_BASE\",\r\n                            \"baseType\": \"AA\",\r\n                            \"baseValue\": 2.0,\r\n                            \"code\": \"RF**A\",\r\n                            \"deductibleValue\": 500,\r\n                            \"indemnity\": 0,\r\n                            \"multiplier\": 1.0,\r\n                            \"reductionCoefficient\": 4.0\r\n                        },\r\n                        {\r\n                            \"additionalPremiumRate\": 5.0,\r\n                            \"baseNature\": \"LUMP_BASE\",\r\n                            \"baseType\": \"AA\",\r\n                            \"baseValue\": 2.0,\r\n                            \"code\": \"IV1*A\",\r\n                            \"deductibleValue\": 500,\r\n                            \"indemnity\": 0,\r\n                            \"multiplier\": 1.0,\r\n                            \"reductionCoefficient\": 4.0\r\n                        },\r\n                        {\r\n                            \"additionalPremiumRate\": 5.0,\r\n                            \"baseNature\": \"LUMP_BASE\",\r\n                            \"baseType\": \"AA\",\r\n                            \"baseValue\": 2.0,\r\n                            \"code\": \"IV23A\",\r\n                            \"deductibleValue\": 500,\r\n                            \"indemnity\": 0,\r\n                            \"multiplier\": 1.0,\r\n                            \"reductionCoefficient\": 4.0\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": \"PPCS1_D_C_TABCD\",\r\n            \"startDate\": \"{{dateDuJour_Moins_1_Mois}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts",
								":id",
								"contributionModels"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contractId}}",
									"description": "(Required) Quote identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"contributionModels"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"contributionModels"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"contributionModels"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"contributionModels"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"contributionModels"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Grille tarifaire prevoyance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/collective/contracts/:id/contributionModels",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts",
								":id",
								"contributionModels"
							],
							"query": [
								{
									"key": "offset",
									"value": "false",
									"description": "Zero-indexed offset",
									"disabled": true
								},
								{
									"key": "sorters",
									"value": "",
									"description": "Properties to sort results with, prefix by + for ascending or - for descending",
									"disabled": true
								},
								{
									"key": "details",
									"value": "false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contractId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/contributions?details=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"contributions"
									],
									"query": [
										{
											"key": "date",
											"value": "",
											"description": "Contribution base date",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "false",
											"description": "Zero-indexed offset",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"description": "Maximum of items returned",
											"disabled": true
										},
										{
											"key": "sorters",
											"value": "",
											"description": "Properties to sort results with, prefix by + for ascending or - for descending",
											"disabled": true
										},
										{
											"key": "details",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "1000100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Tue, 02 Jun 2020 17:06:16 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": [\n        {\n            \"annualAmountExclTax\": 0.009463,\n            \"annualAmountInclTax\": 0.009463,\n            \"annualGrossAmount\": 3.87E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0096,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_A\",\n            \"groupingCode\": \"TA\",\n            \"groupingLabel\": \"TA\",\n            \"label\": \"Zone A\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.009463,\n            \"annualAmountInclTax\": 0.009463,\n            \"annualGrossAmount\": 3.87E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0096,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_A\",\n            \"groupingCode\": \"TB\",\n            \"groupingLabel\": \"TB\",\n            \"label\": \"Zone A\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.009868,\n            \"annualAmountInclTax\": 0.009868,\n            \"annualGrossAmount\": 4.45E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0099,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_B\",\n            \"groupingCode\": \"TA\",\n            \"groupingLabel\": \"TA\",\n            \"label\": \"Zone B\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.009868,\n            \"annualAmountInclTax\": 0.009868,\n            \"annualGrossAmount\": 4.45E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0099,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_B\",\n            \"groupingCode\": \"TB\",\n            \"groupingLabel\": \"TB\",\n            \"label\": \"Zone B\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.010546,\n            \"annualAmountInclTax\": 0.010546,\n            \"annualGrossAmount\": 5.42E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0105,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_C\",\n            \"groupingCode\": \"TA\",\n            \"groupingLabel\": \"TA\",\n            \"label\": \"Zone C\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.010546,\n            \"annualAmountInclTax\": 0.010546,\n            \"annualGrossAmount\": 5.42E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0105,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_C\",\n            \"groupingCode\": \"TB\",\n            \"groupingLabel\": \"TB\",\n            \"label\": \"Zone C\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.012172,\n            \"annualAmountInclTax\": 0.012172,\n            \"annualGrossAmount\": 7.74E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0122,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_D\",\n            \"groupingCode\": \"TA\",\n            \"groupingLabel\": \"TA\",\n            \"label\": \"Zone D\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        },\n        {\n            \"annualAmountExclTax\": 0.012172,\n            \"annualAmountInclTax\": 0.012172,\n            \"annualGrossAmount\": 7.74E-4,\n            \"annualPassExclTax\": 0.0,\n            \"annualPassInclTax\": 0.0,\n            \"basicValue\": 0.0,\n            \"beginDate\": \"2021-07-28\",\n            \"callRateExclTax\": 0.0122,\n            \"callRateInclTax\": 0.0,\n            \"code\": \"SLCEP_MA_ZONE_D\",\n            \"groupingCode\": \"TB\",\n            \"groupingLabel\": \"TB\",\n            \"label\": \"Zone D\",\n            \"monthlyPassInclTax\": 0.0,\n            \"taxes\": 0.0\n        }\n    ],\n    \"limit\": 10,\n    \"offset\": 0,\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Souscrire le contrat prévoyance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"contractId\", jsonData.data.id);\r",
									"console.log(\"URL pour consulter l'objet créé dans CLEVA Web :\");\r",
									"console.log(pm.environment.get(\"clevaWebUrl\")+ \"adp/collectif/\" +jsonData.data.id +\"/consultationCollectif\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/health/collective/contracts/:id/subscribe",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"collective",
								"contracts",
								":id",
								"subscribe"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contractId}}",
									"description": "(Required) Quote identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/health/collective/contracts/:id/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"collective",
										"contracts",
										":id",
										"subscribe"
									],
									"variable": [
										{
											"key": "id",
											"value": "1000172",
											"description": "(Required) Quote identifier"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 03 Jun 2020 10:30:54 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"status\": \"SUCCESS\",\n    \"data\": {\n        \"adjustmentCoefficient\": 0,\n        \"branchCode\": \"SANTE\",\n        \"branchLabel\": \"Santé\",\n        \"cardinalityType\": \"COLLECTIVE\",\n        \"coinsurance\": false,\n        \"commercialCoefficient\": 0,\n        \"companyCode\": \"S0001\",\n        \"companyLabel\": \"TPA Swiss Life\",\n        \"currentIndex\": 0,\n        \"customerDeposit\": \"0.0\",\n        \"customerId\": \"1000101\",\n        \"customerName\": \"STARK INDUSTRIES\",\n        \"debtRecoveryExclusion\": false,\n        \"description\": \"Devis santé en cours d'instruction\",\n        \"id\": \"1000172\",\n        \"indexable\": false,\n        \"insurerName\": \"SWISSLIFE PREVOYANCE ET SANTE\",\n        \"insurerId\": 1000010,\n        \"number\": \"SLCES_C_000007\",\n        \"origin\": 0,\n        \"previousIndex\": 0,\n        \"productCode\": \"SLCES\",\n        \"productLabel\": \"SwissLife Corporate Expat Santé\",\n        \"provisionalPremiumCallRate\": 0,\n        \"revisable\": false,\n        \"status\": {\n            \"code\": \"CONTRACT\",\n            \"subcode\": \"1\",\n            \"sublabel\": \"En cours\",\n            \"effectiveTime\": \"2020-06-03\",\n            \"originalContractEffectiveDate\": \"2020-06-03\",\n            \"earliestDate\": \"2020-06-03\",\n            \"creationDate\": \"2020-06-03\",\n            \"startDate\": \"2020-06-03\",\n            \"lastDeadlineDate\": \"2020-06-03\",\n            \"effectiveDate\": \"2020-06-03\",\n            \"updateDate\": \"2020-06-03\",\n            \"nextDueDate\": \"2020-07-01\",\n            \"nextMainDueDate\": \"2021-01-01\",\n            \"mainDueDate\": \"0101\",\n            \"nextDueDateCode\": \"2007\",\n            \"termBlocked\": false\n        },\n        \"management\": {\n            \"salesRepCallName\": \"DUPONT JEANN\",\n            \"salesRepUserId\": \"B2CAPPORTEUR\"\n        },\n        \"payment\": {\n            \"bankDetailsUsageCode\": \"P\",\n            \"bankDetailsUsageLabel\": \"Principale\",\n            \"directDebitDay\": 5,\n            \"discountPayer\": \"CUSTOMER\",\n            \"endorsementDiscountCode\": \"VA\",\n            \"endorsementPayer\": \"CUSTOMER\",\n            \"endorsementPaymentCode\": \"PA\",\n            \"paymentAddress\": {\n                \"countryCode\": \"FR\",\n                \"countryName\": \"France\",\n                \"mainAddress\": true,\n                \"resume\": \"21, avenue des frères lumière Batiment Oxford 69005, France\",\n                \"line1\": \"21, avenue des frères lumière\",\n                \"line2\": \"Batiment Oxford\",\n                \"line3\": \"69005\",\n                \"line4\": \"Lyon\"\n            },\n            \"paymentBankDetails\": {\n                \"id\": 1000040,\n                \"countryCode\": \"FR\",\n                \"countryLabel\": \"FR\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"bic\": \"CRLYFRPP\",\n                \"holder\": \"TONY STARK\",\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"22 avenue FOCH\",\n                \"bankAddress2\": \"Immeuble lumière\",\n                \"zipCode\": \"69007\",\n                \"city\": \"Lyon\",\n                \"creationDate\": \"2020-06-03\",\n                \"updateDate\": \"2020-06-03\"\n            },\n            \"termPayer\": \"CUSTOMER\",\n            \"termPaymentCode\": \"PA\",\n            \"termPeriodicity\": \"EXPIRED\",\n            \"newBusinessNonDeductedCommissionPayout\": false,\n            \"newBusinessPayer\": \"CUSTOMER\",\n            \"newBusinessPaymentCode\": \"PA\",\n            \"payablePersonCallName\": \"STARK INDUSTRIES\",\n            \"payerPersonId\": 1000169,\n            \"periodicity\": \"QUARTERLY\"\n        },\n        \"grouping\": \"PR_0012\",\n        \"freeZones\": {\n            \"SLCES_ZL_DELEGATION\": {},\n            \"SLCES_ZL_SOCLE_NIV\": {\n                \"type\": \"STRING\",\n                \"value\": \"SAFETY\"\n            },\n            \"SLCES_ZL_OFFRE\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCES_ZL_COUV\": {\n                \"type\": \"STRING\",\n                \"value\": \"1erEuro\"\n            },\n            \"SLCES_ZL_ZONE\": {\n                \"type\": \"STRING\",\n                \"value\": \"AUT\"\n            },\n            \"SLCES_ZL_RENFORT_NIV\": {},\n            \"SLCES_ZL_TR_AGE\": {\n                \"type\": \"STRING\",\n                \"value\": \"55&plus\"\n            },\n            \"SLCES_ZL_AGE_MOY_SAL\": {\n                \"type\": \"STRING\",\n                \"value\": \"70\"\n            },\n            \"SLCES_ZL_GENE_TARIF\": {\n                \"type\": \"STRING\",\n                \"value\": \"Standard\"\n            },\n            \"TPA_SLCES_ZL_RC\": {\n                \"type\": \"BOOLEAN\",\n                \"value\": true\n            },\n            \"SLCES_ZL_DEPART_GEO\": {},\n            \"TPA_PERSONNE_CREA_LIEN_PRE_AFIL\": {},\n            \"TPA_SLCES_ZL_TYPE_DE_SIGNATURE\": {}\n        },\n        \"commissions\": {\n            \"coinsuranceApetitionCommission\": 0,\n            \"newBusinessDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"endorsementDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"terminationDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"termDeduced\": \"NOT_DEDUCTED_WITH_DEPOSIT_SLIP\",\n            \"totalCommissionRate\": 0\n        },\n        \"typology\": {\n            \"basic\": true,\n            \"basicType\": \"ENTERPRISE\",\n            \"pensionPlan\": false,\n            \"mandatoryMembership\": true,\n            \"nonResponsible\": false\n        },\n        \"contacts\": [],\n        \"brokers\": [\n            {\n                \"roleCode\": \"PRINCIPAL\",\n                \"roleLabel\": \"Principal\",\n                \"freeZones\": {},\n                \"broker\": {\n                    \"id\": \"1000012\",\n                    \"code\": \"I10\",\n                    \"type\": \"COURTIER\",\n                    \"businessInformation\": {}\n                }\n            }\n        ],\n        \"version\": {\n            \"id\": \"1000040\",\n            \"valueDate\": \"2020-06-03\",\n            \"operationDate\": \"2020-06-03\",\n            \"label\": \"Affaire nouvelle\",\n            \"userLogin\": \"B2CAPPORTEUR\",\n            \"userName\": \"DUPONT JEANN\"\n        },\n        \"dsnReference\": \"SLCES_C_000007\",\n        \"jobClassCode\": \"CADRE\",\n        \"jobClassLabel\": \"Cadre\",\n        \"contributionBase\": {\n            \"id\": \"1000080\",\n            \"code\": \"SLCES_ASS_IF_ZONE\",\n            \"startDate\": \"2020-06-03\",\n            \"description\": \"Isole/Famille par zone\",\n            \"label\": \"Isole/Famille\",\n            \"baseType\": \"WORKFORCE\"\n        },\n        \"beneficiaryAuthorizations\": {\n            \"CHILD\": {\n                \"authorized\": true,\n                \"maxAge\": 26,\n                \"maxAgeNoProof\": 18\n            },\n            \"SPOUSE\": {\n                \"authorized\": true,\n                \"maxAge\": 70\n            },\n            \"PARENT\": {\n                \"authorized\": false\n            },\n            \"OTHER\": {\n                \"authorized\": false\n            }\n        }\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Affiliation salarié",
			"item": [
				{
					"name": "Motifs affiliation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"reasonCode\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?product={{productCode}}&object=RISK&text=Nouvelle embauche",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "product",
									"value": "{{productCode}}"
								},
								{
									"key": "type",
									"value": "STRUCK_OFF",
									"disabled": true
								},
								{
									"key": "object",
									"value": "RISK"
								},
								{
									"key": "text",
									"value": "Nouvelle embauche"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "REASONS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?product=PSCS1&type=STRUCK_OFF&object=RISK",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "product",
											"value": "PSCS1"
										},
										{
											"key": "type",
											"value": "STRUCK_OFF"
										},
										{
											"key": "object",
											"value": "RISK"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "REASONS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 08:17:49 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"REASONS\",\n        \"description\": \"Reasons\",\n        \"moreResults\": false,\n        \"title\": \"Reasons\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"DECES\",\n                \"label\": \"Décès de l'adhérent\"\n            },\n            {\n                \"code\": \"DEMISSION\",\n                \"label\": \"Démission\"\n            },\n            {\n                \"code\": \"LICENCIEMENT\",\n                \"label\": \"Licenciement\"\n            },\n            {\n                \"code\": \"RETRAITE\",\n                \"label\": \"Retraite\"\n            },\n            {\n                \"code\": \"SORT_PROG\",\n                \"label\": \"Sortie programmée par batch des adhérents\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des banques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"Banque\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Crédit Agricole",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Crédit Agricole"
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "dtfdfg",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSIARD_SOCLE_BANQUES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupérer titre salarié",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"personTitles\", codes);\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"titre\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Madam",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "TITLES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "Madam",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "TITLES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:52:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"TITLES\",\n        \"description\": \"List of titles\",\n        \"moreResults\": false,\n        \"title\": \"TITLES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"Mme\",\n                \"label\": \"Madame\"\n            },\n            {\n                \"code\": \"Mlle\",\n                \"label\": \"Mademoiselle\"\n            },\n            {\n                \"code\": \"Me\",\n                \"label\": \"Maître\"\n            },\n            {\n                \"code\": \"Mmes\",\n                \"label\": \"Mesdames\"\n            },\n            {\n                \"code\": \"Mles\",\n                \"label\": \"Mesdemoiselles\"\n            },\n            {\n                \"code\": \"MM.\",\n                \"label\": \"Messieurs\"\n            },\n            {\n                \"code\": \"M.\",\n                \"label\": \"Monsieur\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Récupérer situation de famille salarié",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"civilites\", codes);\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"civilite\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "C",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CIVIL_STATUS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "C",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CIVIL_STATUS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:53:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CIVIL_STATUS\",\n        \"description\": \"Classification of marital status\",\n        \"moreResults\": false,\n        \"title\": \"Civil status\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"AU\",\n                \"label\": \"Autre\"\n            },\n            {\n                \"code\": \"I\",\n                \"label\": \"Autres\"\n            },\n            {\n                \"code\": \"CNC\",\n                \"label\": \"Concubin(e)\"\n            },\n            {\n                \"code\": \"C\",\n                \"label\": \"Célibataire\"\n            },\n            {\n                \"code\": \"D\",\n                \"label\": \"Divorcé(e)\"\n            },\n            {\n                \"code\": \"CPLP\",\n                \"label\": \"En couple\"\n            },\n            {\n                \"code\": \"IN\",\n                \"label\": \"Inconnu\"\n            },\n            {\n                \"code\": \"M\",\n                \"label\": \"Marié(e)\"\n            },\n            {\n                \"code\": \"P\",\n                \"label\": \"Pacsé(e)\"\n            },\n            {\n                \"code\": \"S\",\n                \"label\": \"Séparé(e)\"\n            },\n            {\n                \"code\": \"V\",\n                \"label\": \"Veuf(ve)\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Pré-affiliation contrat",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"salariePhone\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"salarieFamilyName\", window.faker.name.lastName());\r",
									"    pm.collectionVariables.set(\"salarieFirstName\", window.faker.name.firstName());\r",
									"    pm.collectionVariables.set(\"salarieEmail\", window.faker.internet.email());\r",
									"    pm.collectionVariables.set(\"affiliateExternalReference\", window.faker.random.number());\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('AWAITING');\r",
									"});\r",
									"\r",
									"//Set variables\r",
									"pm.collectionVariables.set(\"affilId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"affilPersonId\", jsonData.data.person.id);\r",
									"pm.collectionVariables.set(\"affilPersonName\", jsonData.data.person.completeName);\r",
									"pm.collectionVariables.set(\"affilAssureId\", jsonData.data.insuredId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contractId\": {{contractId}},\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"reasonCode\" : \"{{reasonCode}}\",\n    \"status\": \"AWAITING\",\n    \"person\": {\n        \"familyName\": \"{{salarieFamilyName}}\",\n        \"firstName\": \"{{salarieFirstName}}\",\n        \"birthDate\": \"{{dateDuJour_Moins_35_Ans}}\",\n        \"externalReference\": \"{{affiliateExternalReference}}\",\n        \"socialSecurityKey\": \"{{cleNir}}\",\n        \"socialSecurityNumber\": \"{{nir}}\"\n    },\n    \"communication\": {\n        \"cellphone\": \"{{salariePhone}}\",\n        \"email\": \"{{salarieEmail}}\"\n    },\n    \"earning\": {\n        \"annualEarning\": 100000\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/affiliates",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates"
							],
							"query": [
								{
									"key": "ITN_ACTIVATE_SCENARIO",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "201 CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ITN_ACTIVATE_SCENARIO",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contractId\": {{policeIFId}},\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"externalReference\": \"{{affiliateExternalReference}}\",\n    \"status\": \"AWAITING\",\n    \"person\": {\n        \"familyName\": \"{{salarieFamilyName}}\",\n        \"firstName\": \"{{salarieFirstName}}\",\n        \"birthDate\": \"{{dateDuJour_Moins_35_Ans}}\",\n        \"socialSecurityKey\": \"{{cleNir}}\",\n        \"socialSecurityNumber\": \"{{nir}}\"\n    },\n    \"communication\": {\n        \"cellphone\": \"{{salariePhone}}\",\n        \"email\": \"{{salarieEmail}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates"
									],
									"query": [
										{
											"key": "ITN_ACTIVATE_SCENARIO",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:50:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:50:43+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:50:43+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {},\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"AWAITING\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"links\": [\n        {\n            \"actions\": [\n                {\n                    \"description\": \"Load affiliate\",\n                    \"method\": \"GET\",\n                    \"name\": \"load\"\n                }\n            ],\n            \"href\": \"http://localhost:8080/T9-Assurance/rest/health/affiliates/20000064\",\n            \"rel\": \"self\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Rechercher des clients physiques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const results = jsonData.data;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"personId\", results[_.random(0, results.length-1)].searchDetails.person.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/customers?type=NATURAL&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "type",
									"value": "NATURAL"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulter les éléments de salaire historisés CLEVW-51605",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    //Content is empty with no historized salary because it's new\r",
									"    pm.test(\"No historized salary found\", () => {\r",
									"    pm.expect(jsonData.data.length).to.eql(0);\r",
									"    });    \r",
									"\r",
									"} else {\r",
									"    //status code is not 200\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/affiliates/:id/salaries?historized=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id",
								"salaries"
							],
							"query": [
								{
									"key": "historized",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Compléter affiliation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);\r",
									"\r",
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"assureZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"assureAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set(\"assureAdressLatitude\", window.faker.address.latitude());\r",
									"    pm.collectionVariables.set(\"assureAdressLongitude\", window.faker.address.longitude());\r",
									"    pm.collectionVariables.set(\"assureAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"assureAdressLine2\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"bankZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"bankAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set(\"bankAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"bankAdressLine2\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('AWAITING');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"person\": {\n        \"id\": \"{{affilPersonId}}\",\n        \"titleCode\": \"{{titre}}\",\n        \"countryCode\": \"FR\",\n        \"familySituationCode\": \"{{civilite}}\"\n    },\n    \"communication\": {\n        \"emailSendingAgreement\": \"SENDING_EMAILS_REFUSED\"\n    },\n    \"refundsPayment\": {\n        \"currencyCode\": \"EUR\",\n        \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n        \"address\": {\n            \"countryCode\": \"FR\",\n            \"mainAddress\": true,\n            \"line1\": \"{{assureAdressLine1}}\",\n            \"line2\": \"{{assureAdressLine2}}\",\n            \"zipCode\": \"{{assureZipCode}}\",\n            \"city\": \"{{assureAdrCity}}\",\n            \"latitude\": {{assureAdressLatitude}},\n            \"longitude\": {{assureAdressLongitude}}\n        },\n        \"bankDetails\": {\n            \"iban\": \"FR7612345678901234567890104\",\n            \"bic\": \"CRLYFRPP\",\n            \"holder\": \"{{affilPersonName}}\",\n            \"bank\": \"{{Banque}}\",\n            \"bankAddress1\": \"{{bankAdressLine1}}\",\n            \"bankAddress2\": \"{{bankAdressLine2}}\",\n            \"zipCode\": \"{{bankZipCode}}\",\n            \"city\": \"{{bankAdrCity}}\"\n        },\n        \"thirdPartyPayment\": true,\n        \"thirdPartyPaymentPersonId\": \"{{personId}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/affiliates/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}",
									"description": "(Required) Affiliate identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"person\": {\n        \"id\": \"{{affilIF1PersonId}}\",\n        \"titleCode\": \"{{titre}}\",\n        \"familySituationId\": \"{{civilite}}\",\n        \"countryCode\": \"FR\"\n    },\n    \"communication\": {\n        \"emailSendingAgreement\": false\n    },\n    \"refundsPayment\": {\n        \"currencyCode\": \"EUR\",\n        \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n        \"address\": {\n            \"countryCode\": \"FR\",\n            \"mainAddress\": true,\n            \"line1\": \"{{assureAdressLine1}}\",\n            \"line2\": \"{{assureAdressLine2}}\",\n            \"zipCode\": \"{{assureZipCode}}\",\n            \"city\": \"{{assureAdrCity}}\",\n            \"latitude\": {{assureAdressLatitude}},\n            \"longitude\": {{assureAdressLongitude}}\n        },\n        \"bankDetails\": {\n            \"iban\": \"FR7612345678901234567890104\",\n            \"bic\": \"CRLYFRPP\",\n            \"holder\": \"{{affilIF1PersonName}}\",\n            \"bank\": \"{{Banque}}\",\n            \"bankAddress1\": \"{{bankAdressLine1}}\",\n            \"bankAddress2\": \"{{bankAdressLine2}}\",\n            \"zipCode\": \"{{bankZipCode}}\",\n            \"city\": \"{{bankAdrCity}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:51:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\",\n            \"emailSendingAgreement\": \"false\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:51:41+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"countryCode\": \"FR\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"familySituationCode\": \"AU\",\n            \"familySituationId\": \"AU\",\n            \"familySituationLabel\": \"Autre\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:51:40+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\",\n            \"titleCode\": \"Mlle\",\n            \"titleLabel\": \"Mademoiselle\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {\n            \"address\": {\n                \"city\": \"North Hugo\",\n                \"countryCode\": \"FR\",\n                \"countryName\": \"FRANCE\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"id\": \"20000048\",\n                \"latitude\": 1.3231,\n                \"line1\": \"Lilou d'Argenteuil\",\n                \"line2\": \"Passage Saint-Jacques\",\n                \"longitude\": 88.7669,\n                \"mainAddress\": true,\n                \"resume\": \"Lilou d'Argenteuil Passage Saint-Jacques, 54233 North Hugo, FRANCE\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"validityDate\": \"2021-12-28\",\n                \"zipCode\": \"54233\"\n            },\n            \"bankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"Manon de Vaugirard\",\n                \"bankAddress2\": \"Impasse du Havre\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"New Aliciachester\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"holder\": \"PAUL ALEXANDRE\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"20000042\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"zipCode\": \"05028\"\n            },\n            \"currencyCode\": \"EUR\",\n            \"currencyLabel\": \"euro \",\n            \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n            \"paymentChoiceLabel\": \"PA\"\n        },\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"AWAITING\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"links\": [\n        {\n            \"actions\": [\n                {\n                    \"description\": \"Load affiliate\",\n                    \"method\": \"GET\",\n                    \"name\": \"load\"\n                }\n            ],\n            \"href\": \"http://localhost:8080/T9-Assurance/rest/health/affiliates/20000064\",\n            \"rel\": \"self\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Chargement affiliation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('AWAITING');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/affiliates/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}",
									"description": "(Required) Affiliate identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/health/affiliates/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:51:11 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\",\n            \"emailSendingAgreement\": \"false\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:50:53+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"countryCode\": \"FR\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"familySituationCode\": \"AU\",\n            \"familySituationId\": \"AU\",\n            \"familySituationLabel\": \"Autre\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:50:52+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\",\n            \"titleCode\": \"Mlle\",\n            \"titleLabel\": \"Mademoiselle\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {\n            \"address\": {\n                \"city\": \"South Lisa\",\n                \"countryCode\": \"FR\",\n                \"countryName\": \"FRANCE\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"id\": \"20000048\",\n                \"latitude\": -17.5502,\n                \"line1\": \"Alice du Chat-qui-Pêche\",\n                \"line2\": \"Allée, Voie de la Harpe\",\n                \"longitude\": 119.1864,\n                \"mainAddress\": true,\n                \"resume\": \"Alice du Chat-qui-Pêche Allée, Voie de la Harpe, 00864 South Lisa, FRANCE\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"validityDate\": \"2021-12-28\",\n                \"zipCode\": \"00864\"\n            },\n            \"bankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"Bertrand d'Abbeville\",\n                \"bankAddress2\": \"Impasse de l'Abbaye\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"Yanisside\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"holder\": \"PAUL ALEXANDRE\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"20000042\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"zipCode\": \"59081\"\n            },\n            \"currencyCode\": \"EUR\",\n            \"currencyLabel\": \"euro \",\n            \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n            \"paymentChoiceLabel\": \"PA\"\n        },\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"AWAITING\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"links\": [\n        {\n            \"actions\": [\n                {\n                    \"description\": \"Load affiliate\",\n                    \"method\": \"GET\",\n                    \"name\": \"load\"\n                }\n            ],\n            \"href\": \"http://localhost:8080/T9-Assurance/rest/health/affiliates/20000064\",\n            \"rel\": \"self\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Valider affiliation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('IN_PROGRESS');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"IN_PROGRESS\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/affiliates/:id/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id",
								"status"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}",
									"description": "(Required) Affiliate identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "201 CREATED",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"IN_PROGRESS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates/:id/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:52:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\",\n            \"emailSendingAgreement\": \"false\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:52:09+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"countryCode\": \"FR\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"familySituationCode\": \"AU\",\n            \"familySituationId\": \"AU\",\n            \"familySituationLabel\": \"Autre\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:52:08+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\",\n            \"titleCode\": \"Mlle\",\n            \"titleLabel\": \"Mademoiselle\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {\n            \"address\": {\n                \"city\": \"North Hugo\",\n                \"countryCode\": \"FR\",\n                \"countryName\": \"FRANCE\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"id\": \"20000048\",\n                \"latitude\": 1.3231,\n                \"line1\": \"Lilou d'Argenteuil\",\n                \"line2\": \"Passage Saint-Jacques\",\n                \"longitude\": 88.7669,\n                \"mainAddress\": true,\n                \"resume\": \"Lilou d'Argenteuil Passage Saint-Jacques, 54233 North Hugo, FRANCE\",\n                \"updateDate\": \"2021-12-28T14:51:40+01:00\",\n                \"validityDate\": \"2021-12-28\",\n                \"zipCode\": \"54233\"\n            },\n            \"bankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"Bertrand d'Abbeville\",\n                \"bankAddress2\": \"Impasse de l'Abbaye\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"Yanisside\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"holder\": \"PAUL ALEXANDRE\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"20000042\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"zipCode\": \"59081\"\n            },\n            \"currencyCode\": \"EUR\",\n            \"currencyLabel\": \"euro \",\n            \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n            \"paymentChoiceLabel\": \"PA\"\n        },\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"IN_PROGRESS\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						},
						{
							"name": "400 BAD REQUEST",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"IN_PROGRESS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates/:id/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:50:14 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"errorCode\": \"AffiliateStatus.Status.001\",\n    \"message\": \"This status modification is not possible\",\n    \"status\": \"FAIL\"\n}"
						}
					]
				},
				{
					"name": "Consulter les éléments de salaire CLEVW-49349",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    //status code is not 200\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/affiliates/:id/salaries",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id",
								"salaries"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Autre affiliation avec pmt des presta en création",
			"item": [
				{
					"name": "Motifs affiliation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"reasonCode\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?product={{productCode}}&object=RISK&text=Nouvelle embauche",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "product",
									"value": "{{productCode}}"
								},
								{
									"key": "type",
									"value": "STRUCK_OFF",
									"disabled": true
								},
								{
									"key": "object",
									"value": "RISK"
								},
								{
									"key": "text",
									"value": "Nouvelle embauche"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "REASONS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?product=PSCS1&type=STRUCK_OFF&object=RISK",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "product",
											"value": "PSCS1"
										},
										{
											"key": "type",
											"value": "STRUCK_OFF"
										},
										{
											"key": "object",
											"value": "RISK"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "REASONS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 08:17:49 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"REASONS\",\n        \"description\": \"Reasons\",\n        \"moreResults\": false,\n        \"title\": \"Reasons\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"DECES\",\n                \"label\": \"Décès de l'adhérent\"\n            },\n            {\n                \"code\": \"DEMISSION\",\n                \"label\": \"Démission\"\n            },\n            {\n                \"code\": \"LICENCIEMENT\",\n                \"label\": \"Licenciement\"\n            },\n            {\n                \"code\": \"RETRAITE\",\n                \"label\": \"Retraite\"\n            },\n            {\n                \"code\": \"SORT_PROG\",\n                \"label\": \"Sortie programmée par batch des adhérents\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des banques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"Banque\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Crédit Agricole",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Crédit Agricole"
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "dtfdfg",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSIARD_SOCLE_BANQUES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupérer titre salarié",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"personTitles\", codes);\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"titre\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Madam",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "TITLES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "Madam",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "TITLES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:52:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"TITLES\",\n        \"description\": \"List of titles\",\n        \"moreResults\": false,\n        \"title\": \"TITLES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"Mme\",\n                \"label\": \"Madame\"\n            },\n            {\n                \"code\": \"Mlle\",\n                \"label\": \"Mademoiselle\"\n            },\n            {\n                \"code\": \"Me\",\n                \"label\": \"Maître\"\n            },\n            {\n                \"code\": \"Mmes\",\n                \"label\": \"Mesdames\"\n            },\n            {\n                \"code\": \"Mles\",\n                \"label\": \"Mesdemoiselles\"\n            },\n            {\n                \"code\": \"MM.\",\n                \"label\": \"Messieurs\"\n            },\n            {\n                \"code\": \"M.\",\n                \"label\": \"Monsieur\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Récupérer situation de famille salarié",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"civilites\", codes);\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"civilite\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "C",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CIVIL_STATUS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "C",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CIVIL_STATUS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:53:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CIVIL_STATUS\",\n        \"description\": \"Classification of marital status\",\n        \"moreResults\": false,\n        \"title\": \"Civil status\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"AU\",\n                \"label\": \"Autre\"\n            },\n            {\n                \"code\": \"I\",\n                \"label\": \"Autres\"\n            },\n            {\n                \"code\": \"CNC\",\n                \"label\": \"Concubin(e)\"\n            },\n            {\n                \"code\": \"C\",\n                \"label\": \"Célibataire\"\n            },\n            {\n                \"code\": \"D\",\n                \"label\": \"Divorcé(e)\"\n            },\n            {\n                \"code\": \"CPLP\",\n                \"label\": \"En couple\"\n            },\n            {\n                \"code\": \"IN\",\n                \"label\": \"Inconnu\"\n            },\n            {\n                \"code\": \"M\",\n                \"label\": \"Marié(e)\"\n            },\n            {\n                \"code\": \"P\",\n                \"label\": \"Pacsé(e)\"\n            },\n            {\n                \"code\": \"S\",\n                \"label\": \"Séparé(e)\"\n            },\n            {\n                \"code\": \"V\",\n                \"label\": \"Veuf(ve)\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Pré-affiliation contrat",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {\r",
									"    if (error || response.code !== 200) {\r",
									"        pm.expect.fail('Could not load external library');\r",
									"    }\r",
									"\r",
									"    eval(response.text());\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"salariePhone\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"salarieFamilyName\", window.faker.name.lastName());\r",
									"    pm.collectionVariables.set(\"salarieFirstName\", window.faker.name.firstName());\r",
									"    pm.collectionVariables.set(\"salarieEmail\", window.faker.internet.email());\r",
									"    pm.collectionVariables.set(\"affiliateExternalReference\", window.faker.random.number());\r",
									"\r",
									"});\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);\r",
									"\r",
									"//refunds payment\r",
									"pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {\r",
									"    if (error || response.code !== 200) {\r",
									"        pm.expect.fail('Could not load external library');\r",
									"    }\r",
									"\r",
									"    eval(response.text());\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"\r",
									"    pm.collectionVariables.set(\"assureZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"assureAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set(\"assureAdressLatitude\", window.faker.address.latitude());\r",
									"    pm.collectionVariables.set(\"assureAdressLongitude\", window.faker.address.longitude());\r",
									"    pm.collectionVariables.set(\"assureAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"assureAdressLine2\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {\r",
									"    if (error || response.code !== 200) {\r",
									"        pm.expect.fail('Could not load external library');\r",
									"    }\r",
									"\r",
									"    eval(response.text());\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"\r",
									"    pm.collectionVariables.set(\"bankZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"bankAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set(\"bankAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"bankAdressLine2\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('AWAITING');\r",
									"});\r",
									"\r",
									"//Set variables\r",
									"pm.collectionVariables.set(\"affilId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"affilPersonId\", jsonData.data.person.id);\r",
									"pm.collectionVariables.set(\"affilPersonName\", jsonData.data.person.completeName);\r",
									"pm.collectionVariables.set(\"affilAssureId\", jsonData.data.insuredId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contractId\": {{contractId}},\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"reasonCode\" : \"{{reasonCode}}\",\n    \"status\": \"AWAITING\",\n    \"person\": {\n        \"familyName\": \"{{salarieFamilyName}}\",\n        \"firstName\": \"{{salarieFirstName}}\",\n        \"birthDate\": \"{{dateDuJour_Moins_35_Ans}}\",\n        \"externalReference\": \"{{affiliateExternalReference}}\",\n        \"socialSecurityKey\": \"{{cleNir}}\",\n        \"socialSecurityNumber\": \"{{nir}}\"\n    },\n    \"communication\": {\n        \"cellphone\": \"{{salariePhone}}\",\n        \"email\": \"{{salarieEmail}}\"\n    },\n    \"earning\": {\n        \"annualEarning\": 100000\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/affiliates",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates"
							],
							"query": [
								{
									"key": "ITN_ACTIVATE_SCENARIO",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "201 CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "ITN_ACTIVATE_SCENARIO",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contractId\": {{policeIFId}},\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"externalReference\": \"{{affiliateExternalReference}}\",\n    \"status\": \"AWAITING\",\n    \"person\": {\n        \"familyName\": \"{{salarieFamilyName}}\",\n        \"firstName\": \"{{salarieFirstName}}\",\n        \"birthDate\": \"{{dateDuJour_Moins_35_Ans}}\",\n        \"socialSecurityKey\": \"{{cleNir}}\",\n        \"socialSecurityNumber\": \"{{nir}}\"\n    },\n    \"communication\": {\n        \"cellphone\": \"{{salariePhone}}\",\n        \"email\": \"{{salarieEmail}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates"
									],
									"query": [
										{
											"key": "ITN_ACTIVATE_SCENARIO",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:50:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:50:43+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:50:43+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {},\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"AWAITING\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"links\": [\n        {\n            \"actions\": [\n                {\n                    \"description\": \"Load affiliate\",\n                    \"method\": \"GET\",\n                    \"name\": \"load\"\n                }\n            ],\n            \"href\": \"http://localhost:8080/T9-Assurance/rest/health/affiliates/20000064\",\n            \"rel\": \"self\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Ajouter une adresse à une personne physique",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {\r",
									"    if (error || response.code !== 200) {\r",
									"        pm.expect.fail('Could not load external library');\r",
									"    }\r",
									"\r",
									"    eval(response.text());\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"customerAdrZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"customerAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set('customerAdressNumber', _.random(0,10))\r",
									"\r",
									"    pm.collectionVariables.set(\"customerAdressStreetName\",  window.faker.address.streetName());\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    //testing bank information\r",
									"    pm.test(\"city is correct\", () => {\r",
									"        pm.expect(jsonData.data.city).to.be.a(\"string\");\r",
									"    });\r",
									"    \r",
									"    pm.collectionVariables.set(\"personAddressId\", jsonData.data.id)\r",
									"\r",
									"\r",
									"} else {\r",
									"    //status code is not 201\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"activeUses\": [\r\n        {\r\n            \"code\": \"P\"\r\n        }\r\n    ],\r\n    \"countryCode\": \"FR\",\r\n    \"mainAddress\": true,\r\n    \"line1\": \"{{assureAdressLine1}}\",\r\n    \"line2\": \"{{assureAdressLine2}}\",\r\n    \"zipCode\": \"{{assureZipCode}}\",\r\n    \"city\": \"{{assureAdrCity}}\",\r\n    \"latitude\": {{assureAdressLatitude}},\r\n    \"longitude\": {{assureAdressLongitude}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/addresses",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"addresses"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilPersonId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter un RIB à une personne physique",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"personAdrZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"personAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set('personAdressNumber', _.random(0,10))\r",
									"\r",
									"    pm.collectionVariables.set(\"personAdrStreet\",  window.faker.address.streetName());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    //testing bank information\r",
									"    pm.test(\"bank name is correct\", () => {\r",
									"        pm.expect(jsonData.data.bank).to.eql(\"Credit agricole\");\r",
									"    });\r",
									"\r",
									"    //testing iban information\r",
									"    pm.test(\"iban is correct\", () => {\r",
									"        pm.expect(jsonData.data.iban).to.be.a(\"string\");\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"personBankDetailsId\", jsonData.data.id)\r",
									"\r",
									"\r",
									"} else {\r",
									"    //status code is not 201\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"activeUses\": [\r\n        {\r\n            \"code\": \"P\"\r\n        }\r\n    ],\r\n    \"iban\": \"FR7612345678901234567890104\",\r\n    \"bic\": \"AGRIFRPP\",\r\n    \"holder\": \"{{salarieFirstName}} {{salarieFamilyName}}\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{personAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{personAdrZipCode}}\",\r\n    \"city\": \"{{personAdrCity}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilPersonId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ajouter un RIB à une personne physique",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"{{$randomBankAccountBic}}\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"countryCode\": \"FR\",\r\n    \"activeUses\": [\"AU\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/persons/:id/bankDetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"persons",
										":id",
										"bankDetails"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{personID}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jan 2022 15:06:17 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"activeUses\": [\n            \"AU\"\n        ],\n        \"bank\": \"Credit agricole\",\n        \"bankAddress1\": \"14 725 Rue Baraban\",\n        \"bankAddress2\": \"Second RIB\",\n        \"bic\": \"HGMOSIQ1\",\n        \"city\": \"Nanterre\",\n        \"countryCode\": \"FR\",\n        \"creationDate\": \"2022-01-26T16:06:17+01:00\",\n        \"iban\": \"FR2012739000501327895759P67\",\n        \"id\": \"20000237\",\n        \"zipCode\": \"67271\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Rechercher des clients physiques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const results = jsonData.data;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"personId\", results[_.random(0, results.length-1)].searchDetails.person.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/customers?type=NATURAL&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "type",
									"value": "NATURAL"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Compléter affiliation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('AWAITING');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"person\": {\n        \"id\": \"{{affilPersonId}}\",\n        \"titleCode\": \"{{titre}}\",\n        \"familySituationCode\": \"{{civilite}}\"\n    },\n    \"communication\": {\n        \"emailSendingAgreement\": \"SENDING_EMAILS_REFUSED\"\n    },\n    \"refundsPayment\": {\n        \"currencyCode\": \"EUR\",\n        \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n        \"address\": {\n            \"id\": \"{{personAddressId}}\"\n        },\n        \"bankDetails\": {\n            \"id\": \"{{personBankDetailsId}}\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/affiliates/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}",
									"description": "(Required) Affiliate identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"effectiveDate\": \"{{dateDuJour_Moins_1_Mois}}\",\n    \"person\": {\n        \"id\": \"{{affilIF1PersonId}}\",\n        \"titleCode\": \"{{titre}}\",\n        \"familySituationId\": \"{{civilite}}\",\n        \"countryCode\": \"FR\"\n    },\n    \"communication\": {\n        \"emailSendingAgreement\": false\n    },\n    \"refundsPayment\": {\n        \"currencyCode\": \"EUR\",\n        \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n        \"address\": {\n            \"countryCode\": \"FR\",\n            \"mainAddress\": true,\n            \"line1\": \"{{assureAdressLine1}}\",\n            \"line2\": \"{{assureAdressLine2}}\",\n            \"zipCode\": \"{{assureZipCode}}\",\n            \"city\": \"{{assureAdrCity}}\",\n            \"latitude\": {{assureAdressLatitude}},\n            \"longitude\": {{assureAdressLongitude}}\n        },\n        \"bankDetails\": {\n            \"iban\": \"FR7612345678901234567890104\",\n            \"bic\": \"CRLYFRPP\",\n            \"holder\": \"{{affilIF1PersonName}}\",\n            \"bank\": \"{{Banque}}\",\n            \"bankAddress1\": \"{{bankAdressLine1}}\",\n            \"bankAddress2\": \"{{bankAdressLine2}}\",\n            \"zipCode\": \"{{bankZipCode}}\",\n            \"city\": \"{{bankAdrCity}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:51:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\",\n            \"emailSendingAgreement\": \"false\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:51:41+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"countryCode\": \"FR\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"familySituationCode\": \"AU\",\n            \"familySituationId\": \"AU\",\n            \"familySituationLabel\": \"Autre\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:51:40+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\",\n            \"titleCode\": \"Mlle\",\n            \"titleLabel\": \"Mademoiselle\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {\n            \"address\": {\n                \"city\": \"North Hugo\",\n                \"countryCode\": \"FR\",\n                \"countryName\": \"FRANCE\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"id\": \"20000048\",\n                \"latitude\": 1.3231,\n                \"line1\": \"Lilou d'Argenteuil\",\n                \"line2\": \"Passage Saint-Jacques\",\n                \"longitude\": 88.7669,\n                \"mainAddress\": true,\n                \"resume\": \"Lilou d'Argenteuil Passage Saint-Jacques, 54233 North Hugo, FRANCE\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"validityDate\": \"2021-12-28\",\n                \"zipCode\": \"54233\"\n            },\n            \"bankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"Manon de Vaugirard\",\n                \"bankAddress2\": \"Impasse du Havre\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"New Aliciachester\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"holder\": \"PAUL ALEXANDRE\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"20000042\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"zipCode\": \"05028\"\n            },\n            \"currencyCode\": \"EUR\",\n            \"currencyLabel\": \"euro \",\n            \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n            \"paymentChoiceLabel\": \"PA\"\n        },\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"AWAITING\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"links\": [\n        {\n            \"actions\": [\n                {\n                    \"description\": \"Load affiliate\",\n                    \"method\": \"GET\",\n                    \"name\": \"load\"\n                }\n            ],\n            \"href\": \"http://localhost:8080/T9-Assurance/rest/health/affiliates/20000064\",\n            \"rel\": \"self\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Chargement affiliation isolé famille",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('AWAITING');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/affiliates/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}",
									"description": "(Required) Affiliate identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/health/affiliates/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:51:11 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\",\n            \"emailSendingAgreement\": \"false\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:50:53+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"countryCode\": \"FR\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"familySituationCode\": \"AU\",\n            \"familySituationId\": \"AU\",\n            \"familySituationLabel\": \"Autre\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:50:52+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\",\n            \"titleCode\": \"Mlle\",\n            \"titleLabel\": \"Mademoiselle\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {\n            \"address\": {\n                \"city\": \"South Lisa\",\n                \"countryCode\": \"FR\",\n                \"countryName\": \"FRANCE\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"id\": \"20000048\",\n                \"latitude\": -17.5502,\n                \"line1\": \"Alice du Chat-qui-Pêche\",\n                \"line2\": \"Allée, Voie de la Harpe\",\n                \"longitude\": 119.1864,\n                \"mainAddress\": true,\n                \"resume\": \"Alice du Chat-qui-Pêche Allée, Voie de la Harpe, 00864 South Lisa, FRANCE\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"validityDate\": \"2021-12-28\",\n                \"zipCode\": \"00864\"\n            },\n            \"bankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"Bertrand d'Abbeville\",\n                \"bankAddress2\": \"Impasse de l'Abbaye\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"Yanisside\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"holder\": \"PAUL ALEXANDRE\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"20000042\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"zipCode\": \"59081\"\n            },\n            \"currencyCode\": \"EUR\",\n            \"currencyLabel\": \"euro \",\n            \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n            \"paymentChoiceLabel\": \"PA\"\n        },\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"AWAITING\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"links\": [\n        {\n            \"actions\": [\n                {\n                    \"description\": \"Load affiliate\",\n                    \"method\": \"GET\",\n                    \"name\": \"load\"\n                }\n            ],\n            \"href\": \"http://localhost:8080/T9-Assurance/rest/health/affiliates/20000064\",\n            \"rel\": \"self\"\n        }\n    ],\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Valider affiliation isolé famille",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contract Id check\", function () {\r",
									"    pm.expect(jsonData.data.contractId).to.eql(pm.collectionVariables.get(\"contractId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Effective date check\", function () {\r",
									"    pm.expect(jsonData.data.effectiveDate).to.eql(pm.collectionVariables.get(\"dateDuJour_Moins_1_Mois\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Coverage code check\", function () {\r",
									"    pm.expect(jsonData.data.coverageCode).to.eql('PPCS1_D_P');\r",
									"});\r",
									"\r",
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(jsonData.data.status).to.eql('IN_PROGRESS');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"IN_PROGRESS\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/affiliates/:id/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"affiliates",
								":id",
								"status"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{affilId}}",
									"description": "(Required) Affiliate identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "201 CREATED",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"IN_PROGRESS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates/:id/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:52:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"beneficiaries\": [],\n        \"billingStartDate\": \"2021-11-28\",\n        \"communication\": {\n            \"cellphone\": \"0454250126\",\n            \"email\": \"Maeva_Renard@gmail.com\",\n            \"emailSendingAgreement\": \"false\"\n        },\n        \"companyEntryDate\": \"2021-11-28\",\n        \"contractId\": \"20000021\",\n        \"contractNumber\": \"PSCS1_C_01390\",\n        \"contractStatus\": \"CONTRACT\",\n        \"contractType\": \"ENTERPRISE\",\n        \"coverageCode\": \"PSCS1_ISO\",\n        \"coverageLabel\": \"Isolé\",\n        \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n        \"customerId\": \"20000020\",\n        \"customerName\": \"GAUTIER - RICHARD\",\n        \"earning\": {},\n        \"effectiveDate\": \"2021-11-28\",\n        \"freeZones\": {},\n        \"id\": \"20000064\",\n        \"identifier\": \"PAUL ALEXANDRE\",\n        \"insuredId\": \"20000074\",\n        \"insuredName\": \"PAUL ALEXANDRE\",\n        \"insuredNumber\": \"019179\",\n        \"lastUpdate\": \"2021-12-28T14:52:09+01:00\",\n        \"person\": {\n            \"birthDate\": \"1986-12-28\",\n            \"completeName\": \"PAUL ALEXANDRE\",\n            \"countryCode\": \"FR\",\n            \"creationDate\": \"2021-12-28T14:50:43+01:00\",\n            \"familyName\": \"PAUL\",\n            \"familySituationCode\": \"AU\",\n            \"familySituationId\": \"AU\",\n            \"familySituationLabel\": \"Autre\",\n            \"firstName\": \"ALEXANDRE\",\n            \"freeZones\": {},\n            \"id\": \"20000096\",\n            \"lastUpdateDate\": \"2021-12-28T14:52:08+01:00\",\n            \"socialSecurityKey\": \"54\",\n            \"socialSecurityNumber\": \"1820435800679\",\n            \"titleCode\": \"Mlle\",\n            \"titleLabel\": \"Mademoiselle\"\n        },\n        \"productCode\": \"PSCS1\",\n        \"productLabel\": \"Santé précalculé : Produit collectif standard\",\n        \"refundsPayment\": {\n            \"address\": {\n                \"city\": \"North Hugo\",\n                \"countryCode\": \"FR\",\n                \"countryName\": \"FRANCE\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"id\": \"20000048\",\n                \"latitude\": 1.3231,\n                \"line1\": \"Lilou d'Argenteuil\",\n                \"line2\": \"Passage Saint-Jacques\",\n                \"longitude\": 88.7669,\n                \"mainAddress\": true,\n                \"resume\": \"Lilou d'Argenteuil Passage Saint-Jacques, 54233 North Hugo, FRANCE\",\n                \"updateDate\": \"2021-12-28T14:51:40+01:00\",\n                \"validityDate\": \"2021-12-28\",\n                \"zipCode\": \"54233\"\n            },\n            \"bankDetails\": {\n                \"bank\": \"HSBC\",\n                \"bankAddress1\": \"Bertrand d'Abbeville\",\n                \"bankAddress2\": \"Impasse de l'Abbaye\",\n                \"bic\": \"CRLYFRPP\",\n                \"city\": \"Yanisside\",\n                \"creationDate\": \"2021-12-28T14:50:52+01:00\",\n                \"holder\": \"PAUL ALEXANDRE\",\n                \"iban\": \"FR7612345678901234567890104\",\n                \"id\": \"20000042\",\n                \"updateDate\": \"2021-12-28T14:50:52+01:00\",\n                \"zipCode\": \"59081\"\n            },\n            \"currencyCode\": \"EUR\",\n            \"currencyLabel\": \"euro \",\n            \"paymentChoiceCode\": \"DIRECT_DEBIT\",\n            \"paymentChoiceLabel\": \"PA\"\n        },\n        \"socialSecurityNumber\": \"1820435800679\",\n        \"startDate\": \"2021-11-28\",\n        \"status\": \"IN_PROGRESS\",\n        \"versionId\": \"20000064\",\n        \"window\": \"HEALTH\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						},
						{
							"name": "400 BAD REQUEST",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"IN_PROGRESS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/health/affiliates/:id/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"health",
										"affiliates",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{affilIF1Id}}",
											"description": "(Required) Affiliate identifier"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 13:50:14 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"errorCode\": \"AffiliateStatus.Status.001\",\n    \"message\": \"This status modification is not possible\",\n    \"status\": \"FAIL\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const moment = require('moment');",
					"pm.collectionVariables.set(\"dateDuJour\", moment().format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Plus_1_Mois\", moment().add(30, 'days').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Plus_6_Mois\", moment().add(180, 'days').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_1_Mois\", moment().add(-30, 'days').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_6_Mois\", moment().add(-180, 'days').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_5_Ans\", moment().add(-5, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_10_Ans\", moment().add(-10, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_15_Ans\", moment().add(-15, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_20_Ans\", moment().add(-20, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_30_Ans\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_35_Ans\", moment().add(-35, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_40_Ans\", moment().add(-40, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_45_Ans\", moment().add(-45, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_50_Ans\", moment().add(-50, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_60_Ans\", moment().add(-60, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJour_Moins_70_Ans\", moment().add(-70, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"dateDuJourFormatRecherche\", moment().format(\"YYYY/MM/DD\"));",
					"",
					"var useId = false;",
					"if (request.url.includes('/:id')){",
					"    useId == true;",
					"}",
					"",
					"checkFaker = pm.collectionVariables.has(\"fakerText\")",
					"if (checkFaker == false)",
					"{",
					"    pm.collectionVariables.set(\"fakerText\", \"\")",
					"    pm.collectionVariables.get(\"fakerText\");",
					"    console.log(\"vérification faker : \"+pm.collectionVariables.get(\"fakerText\").length);",
					"}",
					"",
					"if (pm.collectionVariables.get(\"fakerText\").length < 1){",
					"    pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {",
					"    pm.collectionVariables.set(\"fakerText\", response.text());",
					"    console.log(\"la librairie a du être chargée\");})",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (request.name != 'Connexion CLEVA' && request.name != 'Connexion Cleva'){",
					"",
					"    if (request.method == 'GET'){",
					"        pm.test(\"Status code is 200\", function () {",
					"            pm.response.to.have.status(200);",
					"        });",
					"        if (!request.url.includes('/settings/lists')&&!request.url.includes('/me')&&!request.url.includes('/system')&&pm.collectionVariables.get(\"useId\")==false){",
					"            pm.test(\"Limit is a number\", function () {",
					"                pm.expect(pm.response.json().limit).to.be.an(\"number\");",
					"            });",
					"            pm.test(\"resultSize is a number\", function () {",
					"                pm.expect(pm.response.json().resultSize).to.be.an(\"number\");",
					"            });",
					"            pm.test(\"offset is a number\", function () {",
					"                pm.expect(pm.response.json().offset).to.be.an(\"number\");",
					"            });  ",
					"        }",
					"    }",
					"",
					"    if (request.method == 'POST'){",
					"",
					"        pm.test(\"Successful POST request\", function () {",
					"            pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"        });",
					"    }",
					"",
					"    if (request.method == 'PUT'){",
					"        pm.test(\"Successful POST request\", function () {",
					"            pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"        });",
					"    }",
					"",
					"    if (request.method == 'PATCH'){",
					"",
					"        pm.test(\"Status code is 200\", function () {",
					"            pm.response.to.have.status(200);",
					"        });",
					"    }",
					"",
					"    if (pm.response.code == 200||pm.response.code == 201||pm.response.code == 202){",
					"        //Content type is json",
					"        pm.test(\"Content-Type header is application/json\", () => {",
					"        pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"        });",
					"",
					"        //getJson data",
					"        const jsonData = pm.response.json();",
					"",
					"        //Body of response is present by testing length of response",
					"        pm.test(\"Body is present\", () => {",
					"            jsonData.length > 1;",
					"        });",
					"",
					"        //Testing if jsonData is an object",
					"        pm.test(\"JsonData content\", () => {",
					"            pm.expect(jsonData).to.be.an(\"object\");",
					"        });",
					"    }",
					"",
					"}",
					"",
					"//Styles pour les listes",
					"if (request.url.includes('/settings/lists')){",
					"    pm.test(\"Code is a string\", function () {",
					"        pm.expect(pm.response.json().data.code).to.be.a(\"string\");",
					"    });",
					"    pm.test(\"description is a string\", function () {",
					"        pm.expect(pm.response.json().data.description).to.be.a(\"string\");",
					"    });",
					"    pm.test(\"moreResults is a boolean\", function () {",
					"        pm.expect(pm.response.json().data.moreResults).to.be.a(\"boolean\");",
					"    });",
					"    pm.test(\"title is a string\", function () {",
					"        pm.expect(pm.response.json().data.title).to.be.a(\"string\");",
					"    });",
					"    pm.test(\"type is a string\", function () {",
					"        pm.expect(pm.response.json().data.type).to.be.a(\"string\");",
					"    }); ",
					"    pm.visualizer.set(pm.collectionVariables.get(\"templateListes\"), {",
					"      response: pm.response.json()",
					"    });",
					"}",
					"",
					"//Tests de performance",
					"if (pm.environment.get(\"executePerformanceTests\") == 'true'){",
					"  if (request.method == 'GET'){",
					"    //Les listes doivent s'exécuter en moins de 500 ms",
					"    if (request.url.includes('/settings/lists')){",
					"        pm.test(\"Response time is less than 500ms\", function () {",
					"        pm.expect(pm.response.responseTime).to.be.below(500);",
					"       });",
					"    }else{",
					"        //Les recherches doivent s'exécuter en mois de une seconde et demi",
					"        pm.test(\"Response time is less than 1500ms\", function () {",
					"        pm.expect(pm.response.responseTime).to.be.below(1500);",
					"       });",
					"    }  ",
					"  }",
					"  if (request.method == 'POST'){",
					"       //Les POST doivent s'exécuter en moins de 2 secondes",
					"      pm.test(\"Response time is less than 2000ms\", function () {",
					"          pm.expect(pm.response.responseTime).to.be.below(2000);",
					"      });",
					"  }",
					"",
					"  if (request.method == 'PATCH'){",
					"      //Les PATCH doivent s'exécuter en moins de 2 secondes",
					"      pm.test(\"Response time is less than 2000ms\", function () {",
					"          pm.expect(pm.response.responseTime).to.be.below(2000);",
					"      });",
					"  }",
					"",
					"  if (request.method == 'PUT'){",
					"      //Les PUT doivent s'exécuter en moins de 2 secondes",
					"      pm.test(\"Response time is less than 2000ms\", function () {",
					"          pm.expect(pm.response.responseTime).to.be.below(2000);",
					"      });",
					"  }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "templateListes",
			"value": " <style type=\"text/css\">\n        .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\n        .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\n        .tftable tr {background-color:#ffffff;}\n        .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\n        .tftable tr:hover {background-color:#e0ffff;}\n    </style>\n    \n    <table class=\"tftable\" border=\"1\">\n        <tr>\n            <th>Code</th>\n            <th>Label</th>\n        </tr>\n        \n        {{#each response.data.values}}\n            <tr id=row_{{@key}} onClick=\"handleClick(this.code)\">\n                <td id={{@key}}>{{code}}</td>\n                <td>{{label}}</td>\n            </tr>\n        {{/each}}\n    </table>"
		},
		{
			"key": "folderName",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "codeProduitSante",
			"value": ""
		},
		{
			"key": "codeProduitPrevoyance",
			"value": ""
		},
		{
			"key": "codeAssPrev",
			"value": ""
		},
		{
			"key": "naf",
			"value": ""
		},
		{
			"key": "personTitles",
			"value": ""
		},
		{
			"key": "contactTitle",
			"value": ""
		},
		{
			"key": "countryCode",
			"value": ""
		},
		{
			"key": "grouping",
			"value": ""
		},
		{
			"key": "customerEntrepriseName",
			"value": ""
		},
		{
			"key": "customerEntrepriseSupplementName",
			"value": ""
		},
		{
			"key": "customerAdrZipCode",
			"value": ""
		},
		{
			"key": "customerAdrCity",
			"value": ""
		},
		{
			"key": "customerAdrStreet",
			"value": ""
		},
		{
			"key": "customerAdrLatitude",
			"value": ""
		},
		{
			"key": "customerAdrLongitude",
			"value": ""
		},
		{
			"key": "customerPhoneNumber",
			"value": ""
		},
		{
			"key": "customerEmail",
			"value": ""
		},
		{
			"key": "customerWebSite",
			"value": ""
		},
		{
			"key": "customerExternalReference",
			"value": ""
		},
		{
			"key": "customerEntrepriseSiren",
			"value": ""
		},
		{
			"key": "customerEntrepriseNic",
			"value": ""
		},
		{
			"key": "customerEntrepriseSiret",
			"value": ""
		},
		{
			"key": "customerId",
			"value": ""
		},
		{
			"key": "customerName",
			"value": ""
		},
		{
			"key": "customerPersonId",
			"value": ""
		},
		{
			"key": "siret",
			"value": ""
		},
		{
			"key": "enterpriseTitles",
			"value": ""
		},
		{
			"key": "customerTitle",
			"value": ""
		},
		{
			"key": "policeIdPrev",
			"value": ""
		},
		{
			"key": "zlAgeMoyenSalaries",
			"value": ""
		},
		{
			"key": "dateDuJour",
			"value": ""
		},
		{
			"key": "dateDuJour_Plus_1_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Plus_6_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_1_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_6_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_5_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_10_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_15_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_20_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_30_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_35_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_40_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_45_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_50_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_60_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_70_Ans",
			"value": ""
		},
		{
			"key": "dateDuJourFormatRecherche",
			"value": ""
		},
		{
			"key": "productCode",
			"value": ""
		},
		{
			"key": "PSCS1PricingId",
			"value": ""
		},
		{
			"key": "PricingId",
			"value": ""
		},
		{
			"key": "customerBank",
			"value": ""
		},
		{
			"key": "jobCategoryCode",
			"value": ""
		},
		{
			"key": "customerBankZipCode",
			"value": ""
		},
		{
			"key": "customerBankCity",
			"value": ""
		},
		{
			"key": "customerBankStreet",
			"value": ""
		},
		{
			"key": "bankDetailsCustomerId",
			"value": ""
		},
		{
			"key": "Sexe",
			"value": ""
		},
		{
			"key": "AnneeNaissance",
			"value": ""
		},
		{
			"key": "MoisNaissance",
			"value": ""
		},
		{
			"key": "DepartementNaissance",
			"value": ""
		},
		{
			"key": "InseeCommune",
			"value": ""
		},
		{
			"key": "NumeroOrdre",
			"value": ""
		},
		{
			"key": "nir",
			"value": ""
		},
		{
			"key": "cleNir",
			"value": ""
		},
		{
			"key": "salariePhone",
			"value": ""
		},
		{
			"key": "salarieFamilyName",
			"value": ""
		},
		{
			"key": "salarieFirstName",
			"value": ""
		},
		{
			"key": "salarieEmail",
			"value": ""
		},
		{
			"key": "affiliateExternalReference",
			"value": ""
		},
		{
			"key": "contractId",
			"value": ""
		},
		{
			"key": "affilId",
			"value": ""
		},
		{
			"key": "affiPersonId",
			"value": ""
		},
		{
			"key": "affilPersonName",
			"value": ""
		},
		{
			"key": "affilAssureId",
			"value": ""
		},
		{
			"key": "titre",
			"value": ""
		},
		{
			"key": "civilites",
			"value": ""
		},
		{
			"key": "civilite",
			"value": ""
		},
		{
			"key": "Banque",
			"value": ""
		},
		{
			"key": "assureZipCode",
			"value": ""
		},
		{
			"key": "assureAdrCity",
			"value": ""
		},
		{
			"key": "assureAdressLatitude",
			"value": ""
		},
		{
			"key": "assureAdressLongitude",
			"value": ""
		},
		{
			"key": "assureAdressLine1",
			"value": ""
		},
		{
			"key": "assureAdressLine2",
			"value": ""
		},
		{
			"key": "bankZipCode",
			"value": ""
		},
		{
			"key": "bankAdrCity",
			"value": ""
		},
		{
			"key": "bankAdressLine1",
			"value": ""
		},
		{
			"key": "bankAdressLine2",
			"value": ""
		},
		{
			"key": "affilPersonId",
			"value": ""
		},
		{
			"key": "reasonCode",
			"value": ""
		},
		{
			"key": "personId",
			"value": ""
		},
		{
			"key": "customerAdressNumber",
			"value": ""
		},
		{
			"key": "customerAdressStreetName",
			"value": ""
		},
		{
			"key": "personAddressId",
			"value": ""
		},
		{
			"key": "companyAdrZipCode",
			"value": ""
		},
		{
			"key": "companyAdrCity",
			"value": ""
		},
		{
			"key": "companyAdressNumber",
			"value": ""
		},
		{
			"key": "companyAdrStreet",
			"value": ""
		},
		{
			"key": "personBankDetailsId",
			"value": ""
		},
		{
			"key": "fakerText",
			"value": ""
		},
		{
			"key": "jobCategories",
			"value": ""
		},
		{
			"key": "companyAdressStreetName",
			"value": ""
		},
		{
			"key": "companyBankDetailsID",
			"value": ""
		},
		{
			"key": "personAdrZipCode",
			"value": ""
		},
		{
			"key": "personAdrCity",
			"value": ""
		},
		{
			"key": "personAdressNumber",
			"value": ""
		},
		{
			"key": "personAdrStreet",
			"value": ""
		},
		{
			"key": "currentYear",
			"value": ""
		},
		{
			"key": "salaryLabel",
			"value": ""
		},
		{
			"key": "salaryType",
			"value": ""
		},
		{
			"key": "affilSalaireID",
			"value": ""
		},
		{
			"key": "remunerationBaseId",
			"value": ""
		},
		{
			"key": "contact1FamilyName",
			"value": ""
		},
		{
			"key": "contact1FirstName",
			"value": ""
		},
		{
			"key": "contact1Gender",
			"value": ""
		},
		{
			"key": "contact1Cellphone",
			"value": ""
		},
		{
			"key": "contact1Mail",
			"value": ""
		},
		{
			"key": "contactID",
			"value": ""
		},
		{
			"key": "spouseFamilyName",
			"value": ""
		},
		{
			"key": "spouseFirstName",
			"value": ""
		},
		{
			"key": "spousePersonId",
			"value": ""
		},
		{
			"key": "childFirstName",
			"value": ""
		},
		{
			"key": "childMail",
			"value": ""
		},
		{
			"key": "childBirthDate",
			"value": ""
		},
		{
			"key": "twins1PersonId",
			"value": ""
		},
		{
			"key": "twins2PersonId",
			"value": ""
		}
	]
}
{
	"info": {
		"_postman_id": "85d148b1-fe28-451f-94ce-c73e56366466",
		"name": "ADP_Contrats_PSTS1_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15648122",
		"_collection_link": "https://inetum-cleva.postman.co/workspace/CLEVA-Master~491a802d-eace-4fda-b198-5d182da34b41/collection/15648122-85d148b1-fe28-451f-94ce-c73e56366466?action=share&creator=15648122&source=collection_link"
	},
	"item": [
		{
			"name": "Connexion et initialisation",
			"item": [
				{
					"name": "Connexion CLEVA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"console.log(pm.response.text());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Mes informations master",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Content type is json\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Body of response is present by testing length of response\r",
									"pm.test(\"Body is present\", () => {\r",
									"    jsonData.length > 1;\r",
									"});\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"JsonData content\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"me"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/me",
									"host": [
										"{{url}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:56:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"communication\": {},\n        \"person\": {\n            \"completeName\": \"ADMIN ADP\",\n            \"creationDate\": \"2021-03-22T19:01:50+01:00\",\n            \"familyName\": \"ADMIN\",\n            \"firstName\": \"ADP\",\n            \"freeZones\": {},\n            \"id\": \"1000481\",\n            \"lastUpdateDate\": \"2021-03-22T19:01:50+01:00\"\n        },\n        \"profiles\": [\n            \"P_WEBADMIN\"\n        ],\n        \"userCompanyCode\": \"ADP**\",\n        \"userCompanyLabel\": \"Starterbox - ADP\",\n        \"userLogin\": \"adp.admin\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Informations système",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Content type is json\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Body of response is present by testing length of response\r",
									"pm.test(\"Body is present\", () => {\r",
									"    jsonData.length > 1;\r",
									"});\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"JsonData content\", () => {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/system/info",
							"host": [
								"{{url}}"
							],
							"path": [
								"system",
								"info"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/system/info",
									"host": [
										"{{url}}"
									],
									"path": [
										"system",
										"info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:57:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"status\": \"UP\",\n        \"elasticSearch\": {\n            \"status\": \"NOT_CONFIGURED\"\n        },\n        \"v9_database\": {\n            \"status\": \"UP\",\n            \"tag\": \"cleva_version_tag-2021_08\"\n        },\n        \"applicationServer\": {\n            \"status\": \"UP\",\n            \"upSince\": \"2021-12-28T15:25:43+01:00\",\n            \"version\": \"15.5.0.rc202147-1\"\n        },\n        \"akka_cluster\": {\n            \"status\": \"NOT_CONFIGURED\"\n        },\n        \"transverse_database\": {\n            \"status\": \"UP\"\n        }\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set('folderName','Connexion et initialisation');"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Listes globales",
			"item": [
				{
					"name": "Connexion CLEVA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Liste NAF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Listes retournées\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"// L'élément selectionné dans la liste\r",
									"pm.collectionVariables.set(\"naf\", codes[_.random(0, codes.length-1)].code);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?maxResult=50",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "%Activ",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "50"
								},
								{
									"key": "code",
									"value": "01.11",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "NAF"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?maxResult=50",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "%Activ",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "50"
										},
										{
											"key": "code",
											"value": "01.11",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "NAF"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 27 Dec 2021 13:21:21 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"NAF\",\n        \"description\": \"NAF codes\",\n        \"moreResults\": true,\n        \"title\": \"NAF codes\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"88.10B\",\n                \"label\": \"Accueil accompagn. sans héberg. adultes handicapés ou pers. âgées\"\n            },\n            {\n                \"code\": \"8810B\",\n                \"label\": \"Accueil accompagn. sans héberg. adultes handicapés ou pers. âgées\"\n            },\n            {\n                \"code\": \"88.91A\",\n                \"label\": \"Accueil de jeunes enfants\"\n            },\n            {\n                \"code\": \"8891A\",\n                \"label\": \"Accueil de jeunes enfants\"\n            },\n            {\n                \"code\": \"853C\",\n                \"label\": \"Accueil des adultes handicapés\"\n            },\n            {\n                \"code\": \"853B\",\n                \"label\": \"Accueil des enfants en difficulté\"\n            },\n            {\n                \"code\": \"853A\",\n                \"label\": \"Accueil des enfants handicapés\"\n            },\n            {\n                \"code\": \"853D\",\n                \"label\": \"Accueil des personnes âgées\"\n            },\n            {\n                \"code\": \"88.91B\",\n                \"label\": \"Accueil ou accompagnement sans hébergement d’enfants handicapés\"\n            },\n            {\n                \"code\": \"8891B\",\n                \"label\": \"Accueil ou accompagnement sans hébergement d’enfants handicapés\"\n            },\n            {\n                \"code\": \"88.10\",\n                \"label\": \"Action soc. sans héberg. pers. âgées & handicapées\"\n            },\n            {\n                \"code\": \"8530\",\n                \"label\": \"Action sociale\"\n            },\n            {\n                \"code\": \"88.99B\",\n                \"label\": \"Action sociale sans hébergement n.c.a.\"\n            },\n            {\n                \"code\": \"8899B\",\n                \"label\": \"Action sociale sans hébergement n.c.a.\"\n            },\n            {\n                \"code\": \"88.91\",\n                \"label\": \"Action sociale sans hébergement pour jeunes enfants\"\n            },\n            {\n                \"code\": \"82.91\",\n                \"label\": \"Activ. de recouvrement factures & d'info. financ. s/la clientèle\"\n            },\n            {\n                \"code\": \"82.91Z\",\n                \"label\": \"Activ. de recouvrement factures & d'info. financ. s/la clientèle\"\n            },\n            {\n                \"code\": \"8291Z\",\n                \"label\": \"Activ. de recouvrement factures et d'info. financ. s/la clientèle\"\n            },\n            {\n                \"code\": \"98.20\",\n                \"label\": \"Activ. indifférenciées ménages  : produc. services (usage propre)\"\n            },\n            {\n                \"code\": \"98.20Z\",\n                \"label\": \"Activ. indifférenciées ménages  : produc. services (usage propre)\"\n            },\n            {\n                \"code\": \"9820Z\",\n                \"label\": \"Activ. indifférenciées ménages : produc. services (usage propre)\"\n            },\n            {\n                \"code\": \"98.10\",\n                \"label\": \"Activ. indifférenciées ménages : producteurs biens (usage propre)\"\n            },\n            {\n                \"code\": \"98.10Z\",\n                \"label\": \"Activ. indifférenciées ménages : producteurs biens (usage propre)\"\n            },\n            {\n                \"code\": \"9810Z\",\n                \"label\": \"Activ. indifférenciées ménages : producteurs biens (usage propre)\"\n            },\n            {\n                \"code\": \"53.10\",\n                \"label\": \"Activ. poste dans le cadre d'une obligation de service universel\"\n            },\n            {\n                \"code\": \"53.10Z\",\n                \"label\": \"Activ. poste dans le cadre d'une obligation de service universel\"\n            },\n            {\n                \"code\": \"5310Z\",\n                \"label\": \"Activ. poste dans le cadre d'une obligation de service universel\"\n            },\n            {\n                \"code\": \"9100\",\n                \"label\": \"Activites Associatives\"\n            },\n            {\n                \"code\": \"9900\",\n                \"label\": \"Activites Extra-Territoriales\"\n            },\n            {\n                \"code\": \"7000\",\n                \"label\": \"Activites Immobilieres\"\n            },\n            {\n                \"code\": \"7200\",\n                \"label\": \"Activites Informatiques\"\n            },\n            {\n                \"code\": \"9200\",\n                \"label\": \"Activites Recreatives, Culturelles Et Sportives\"\n            },\n            {\n                \"code\": \"71.12A\",\n                \"label\": \"Activité des géomètres\"\n            },\n            {\n                \"code\": \"7112A\",\n                \"label\": \"Activité des géomètres\"\n            },\n            {\n                \"code\": \"86.21\",\n                \"label\": \"Activité des médecins généralistes\"\n            },\n            {\n                \"code\": \"86.21Z\",\n                \"label\": \"Activité des médecins généralistes\"\n            },\n            {\n                \"code\": \"8621Z\",\n                \"label\": \"Activité des médecins généralistes\"\n            },\n            {\n                \"code\": \"86.22\",\n                \"label\": \"Activité des médecins spécialistes\"\n            },\n            {\n                \"code\": \"74.90A\",\n                \"label\": \"Activité des économistes de la construction\"\n            },\n            {\n                \"code\": \"7490A\",\n                \"label\": \"Activité des économistes de la construction\"\n            },\n            {\n                \"code\": \"86.90E\",\n                \"label\": \"Activité profess. rééducation appareillage & pédicures-podologues\"\n            },\n            {\n                \"code\": \"8690E\",\n                \"label\": \"Activité profess. rééducation appareillage et pédicures-podologues\"\n            },\n            {\n                \"code\": \"923A\",\n                \"label\": \"Activités artistiques\"\n            },\n            {\n                \"code\": \"86.22B\",\n                \"label\": \"Activités chirurgicales\"\n            },\n            {\n                \"code\": \"8622B\",\n                \"label\": \"Activités chirurgicales\"\n            },\n            {\n                \"code\": \"9210\",\n                \"label\": \"Activités cinématographiques et vidéo\"\n            },\n            {\n                \"code\": \"81.10\",\n                \"label\": \"Activités combinées de soutien lié aux bâtiments\"\n            },\n            {\n                \"code\": \"81.10Z\",\n                \"label\": \"Activités combinées de soutien lié aux bâtiments\"\n            },\n            {\n                \"code\": \"8110Z\",\n                \"label\": \"Activités combinées de soutien lié aux bâtiments\"\n            },\n            {\n                \"code\": \"69.20\",\n                \"label\": \"Activités comptables\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "NAF activité hospitalières",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Listes retournées\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"// L'élément selectionné dans la liste\r",
									"pm.collectionVariables.set(\"nafActivitesHospitalieres\", codes[_.random(0, codes.length-1)].code);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Activités hospitalières&maxResult=50",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Activités hospitalières"
								},
								{
									"key": "maxResult",
									"value": "50"
								},
								{
									"key": "code",
									"value": "01.11",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "NAF"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=Activités hospitalières&maxResult=50",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "Activités hospitalières"
										},
										{
											"key": "maxResult",
											"value": "50"
										},
										{
											"key": "code",
											"value": "01.11",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "NAF"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Jan 2022 09:09:11 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"NAF\",\n        \"description\": \"NAF codes\",\n        \"moreResults\": false,\n        \"title\": \"NAF codes\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"851A\",\n                \"label\": \"Activités hospitalières\"\n            },\n            {\n                \"code\": \"86.10\",\n                \"label\": \"Activités hospitalières\"\n            },\n            {\n                \"code\": \"86.10Z\",\n                \"label\": \"Activités hospitalières\"\n            },\n            {\n                \"code\": \"8610Z\",\n                \"label\": \"Activités hospitalières\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Listes des produits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"function sante(produit) {\r",
									"  return  produit.label.includes('Santé');\r",
									"}\r",
									"\r",
									"function prevoyance(assiette) {\r",
									"  return  assiette.label.includes('Prévoyance');\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"productCode\", \"PSTS1\");\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=TNS - Santé",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "TNS - Santé"
								},
								{
									"key": "maxResult",
									"value": "20",
									"disabled": true
								},
								{
									"key": "code",
									"value": "01.11",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PRODUCTS_CODE"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "%Activ",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "20",
											"disabled": true
										},
										{
											"key": "code",
											"value": "01.11",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PRODUCTS_CODE"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:58:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"PRODUCTS_CODE\",\n        \"description\": \"Products\",\n        \"moreResults\": false,\n        \"title\": \"Products\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"PPCS1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"HEALTHPROVISION\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Adhérent\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Prévoyance déclaratif : Produit collectif standard\"\n            },\n            {\n                \"code\": \"PPCM1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"HEALTHPROVISION\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Adhérent\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Prévoyance déclaratif : Produit collectif sur mesure \"\n            },\n            {\n                \"code\": \"TNSMALHT\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"TNS MA SANTE\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"SANTE TNS MA LHT\"\n            },\n            {\n                \"code\": \"PSCS1\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Assuré et ayants-droit\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"Santé précalculé : Produit collectif standard\"\n            },\n            {\n                \"code\": \"PSCM1\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Assuré et ayants-droit\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"Santé précalculé : Produit collectif sur mesure\"\n            },\n            {\n                \"code\": \"PEID1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"LOAN\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"L'emprunteur et le co-emprunteur\",\n                    \"riskType.0\": \"EMPRUNTEUR\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Souche Garantie Emprunteur\"\n            },\n            {\n                \"code\": \"PGID1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskActivity.0\": \"IARD\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Objet Gav\",\n                    \"riskType.0\": \"MISC\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"Souche Garantie accident de la vie\"\n            },\n            {\n                \"code\": \"PTFD1\",\n                \"details\": {\n                    \"branchCode\": \"TRANSPORT\",\n                    \"riskReference.0\": \"TRA\",\n                    \"riskName.0\": \"Transport de marchandises\",\n                    \"riskType.0\": \"MISC\",\n                    \"cardinality\": \"COLLECTIVE\",\n                    \"branchLabel\": \"Transport\"\n                },\n                \"label\": \"Souche Transport par voie Maritime ou Aérienne\"\n            },\n            {\n                \"code\": \"PAID1\",\n                \"details\": {\n                    \"branchCode\": \"VEH_TERR\",\n                    \"riskCategory.0\": \"AUTO\",\n                    \"riskActivity.0\": \"IARD\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Véhicule\",\n                    \"riskType.0\": \"AUTO\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Véhicules terrestres\"\n                },\n                \"label\": \"Souche automobile particulier\"\n            },\n            {\n                \"code\": \"PMID1\",\n                \"details\": {\n                    \"branchCode\": \"INCENDIE\",\n                    \"riskCategory.0\": \"HOME\",\n                    \"riskActivity.0\": \"IARD\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Risque habitation\",\n                    \"riskType.0\": \"MISC\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Incendie et Eléments naturels\"\n                },\n                \"label\": \"Souche multirisques habitation\"\n            },\n            {\n                \"code\": \"PATS1\",\n                \"details\": {\n                    \"branchCode\": \"COMMUN\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Travailleur Non Salarié\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Branche Commune ADP\"\n                },\n                \"label\": \"TNS - Association\"\n            },\n            {\n                \"code\": \"PPTS1\",\n                \"details\": {\n                    \"branchCode\": \"PREVOYANCE\",\n                    \"riskCategory.0\": \"HEALTHPROVISION\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Travailleur Non Salarié\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Prévoyance\"\n                },\n                \"label\": \"TNS - Prévoyance\"\n            },\n            {\n                \"code\": \"PSTS1\",\n                \"details\": {\n                    \"branchCode\": \"SANTE\",\n                    \"riskCategory.0\": \"HEALTH\",\n                    \"riskActivity.0\": \"ADP\",\n                    \"riskReference.0\": \"1\",\n                    \"riskName.0\": \"Travailleur Non Salarié\",\n                    \"riskType.0\": \"HEALTH\",\n                    \"cardinality\": \"INDIVIDUAL\",\n                    \"branchLabel\": \"Santé\"\n                },\n                \"label\": \"TNS - Santé\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste titres entreprises",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=LEGAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "LEGAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "TITLES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=LEGAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "LEGAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "TITLES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:59:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"TITLES\",\n        \"description\": \"List of titles\",\n        \"moreResults\": false,\n        \"title\": \"TITLES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"ADMI\",\n                \"label\": \"ADMI\"\n            },\n            {\n                \"code\": \"Ag\",\n                \"label\": \"Agence\"\n            },\n            {\n                \"code\": \"Ag I\",\n                \"label\": \"Agence immobilière\"\n            },\n            {\n                \"code\": \"Assoc\",\n                \"label\": \"Association\"\n            },\n            {\n                \"code\": \"Asl\",\n                \"label\": \"Association Syndicale Libre\"\n            },\n            {\n                \"code\": \"AU\",\n                \"label\": \"Autre\"\n            },\n            {\n                \"code\": \"Bnq\",\n                \"label\": \"Banque\"\n            },\n            {\n                \"code\": \"Bur\",\n                \"label\": \"Bureau\"\n            },\n            {\n                \"code\": \"Cbt\",\n                \"label\": \"Cabinet\"\n            },\n            {\n                \"code\": \"CAF\",\n                \"label\": \"Caisse d'Allocation Familiale\"\n            },\n            {\n                \"code\": \"CHS\",\n                \"label\": \"Centre Hospitalier Spécialisé\\t\"\n            },\n            {\n                \"code\": \"CHU\",\n                \"label\": \"Centre Hospitalier Universitaire\"\n            },\n            {\n                \"code\": \"Cln\",\n                \"label\": \"Clinique\"\n            },\n            {\n                \"code\": \"Clg\",\n                \"label\": \"Collège\"\n            },\n            {\n                \"code\": \"Cte\",\n                \"label\": \"Comité\"\n            },\n            {\n                \"code\": \"Ce\",\n                \"label\": \"Comité d'Entreprise\"\n            },\n            {\n                \"code\": \"Cne\",\n                \"label\": \"Commune\"\n            },\n            {\n                \"code\": \"Cie\",\n                \"label\": \"Compagnie\"\n            },\n            {\n                \"code\": \"Coop\",\n                \"label\": \"Coopérative\"\n            },\n            {\n                \"code\": \"Dr\",\n                \"label\": \"Docteur\"\n            },\n            {\n                \"code\": \"EARL\",\n                \"label\": \"EARL\"\n            },\n            {\n                \"code\": \"EURL\",\n                \"label\": \"EURL\"\n            },\n            {\n                \"code\": \"Ecole\",\n                \"label\": \"Ecole\"\n            },\n            {\n                \"code\": \"Ent\",\n                \"label\": \"Entreprise\"\n            },\n            {\n                \"code\": \"Etb\",\n                \"label\": \"Etablissement\"\n            },\n            {\n                \"code\": \"Etbs\",\n                \"label\": \"Etablissements\"\n            },\n            {\n                \"code\": \"Etude\",\n                \"label\": \"Etude\"\n            },\n            {\n                \"code\": \"Gge\",\n                \"label\": \"Garage\"\n            },\n            {\n                \"code\": \"GIE\",\n                \"label\": \"Groupement d'Interêt Economique\"\n            },\n            {\n                \"code\": \"00000\",\n                \"label\": \"Titre inconnu\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste titres de personnes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"pm.collectionVariables.set(\"personTitles\", codes);\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"customerTitle\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "TITLES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "TITLES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:59:43 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"TITLES\",\n        \"description\": \"List of titles\",\n        \"moreResults\": false,\n        \"title\": \"TITLES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"Mme\",\n                \"label\": \"Madame\"\n            },\n            {\n                \"code\": \"Mlle\",\n                \"label\": \"Mademoiselle\"\n            },\n            {\n                \"code\": \"Me\",\n                \"label\": \"Maître\"\n            },\n            {\n                \"code\": \"Mmes\",\n                \"label\": \"Mesdames\"\n            },\n            {\n                \"code\": \"Mles\",\n                \"label\": \"Mesdemoiselles\"\n            },\n            {\n                \"code\": \"MM.\",\n                \"label\": \"Messieurs\"\n            },\n            {\n                \"code\": \"M.\",\n                \"label\": \"Monsieur\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des pays",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"countryCode\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=FR&maxResult=200",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "FR"
								},
								{
									"key": "maxResult",
									"value": "200"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "COUNTRIES"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "ITN_ACTIVATE_SCENARIO",
										"value": "true",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?maxResult=200",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "éta",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "COUNTRIES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 14:59:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"COUNTRIES\",\n        \"description\": \"List of countries\",\n        \"moreResults\": true,\n        \"title\": \"COUNTRIES\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"AF\",\n                \"label\": \"Afghanistan\"\n            },\n            {\n                \"code\": \"ZA\",\n                \"label\": \"Afrique du Sud\"\n            },\n            {\n                \"code\": \"AL\",\n                \"label\": \"Albanie\"\n            },\n            {\n                \"code\": \"DZ\",\n                \"label\": \"Algérie\"\n            },\n            {\n                \"code\": \"DE\",\n                \"label\": \"Allemagne\"\n            },\n            {\n                \"code\": \"AD\",\n                \"label\": \"Andorre\"\n            },\n            {\n                \"code\": \"AO\",\n                \"label\": \"Angola\"\n            },\n            {\n                \"code\": \"AI\",\n                \"label\": \"Anguilla\"\n            },\n            {\n                \"code\": \"AG\",\n                \"label\": \"Antigua and Barbuda\"\n            },\n            {\n                \"code\": \"SA\",\n                \"label\": \"Arabie saoudite\"\n            },\n            {\n                \"code\": \"AR\",\n                \"label\": \"Argentine\"\n            },\n            {\n                \"code\": \"AM\",\n                \"label\": \"Arménie\"\n            },\n            {\n                \"code\": \"AW\",\n                \"label\": \"Aruba\"\n            },\n            {\n                \"code\": \"AU\",\n                \"label\": \"Australie\"\n            },\n            {\n                \"code\": \"AT\",\n                \"label\": \"Autriche\"\n            },\n            {\n                \"code\": \"AZ\",\n                \"label\": \"Azerbaïdjan\"\n            },\n            {\n                \"code\": \"BS\",\n                \"label\": \"Bahamas\"\n            },\n            {\n                \"code\": \"BH\",\n                \"label\": \"Bahreïn\"\n            },\n            {\n                \"code\": \"BD\",\n                \"label\": \"Bangladesh\"\n            },\n            {\n                \"code\": \"BB\",\n                \"label\": \"Barbade\"\n            },\n            {\n                \"code\": \"BE\",\n                \"label\": \"Belgique\"\n            },\n            {\n                \"code\": \"BZ\",\n                \"label\": \"Belize\"\n            },\n            {\n                \"code\": \"BM\",\n                \"label\": \"Bermudes\"\n            },\n            {\n                \"code\": \"BT\",\n                \"label\": \"Bhutan\"\n            },\n            {\n                \"code\": \"BY\",\n                \"label\": \"Biélorussie\"\n            },\n            {\n                \"code\": \"BO\",\n                \"label\": \"Bolivie\"\n            },\n            {\n                \"code\": \"BA\",\n                \"label\": \"Bosnie Herzégovine\"\n            },\n            {\n                \"code\": \"BW\",\n                \"label\": \"Botswana\"\n            },\n            {\n                \"code\": \"BN\",\n                \"label\": \"Brunei\"\n            },\n            {\n                \"code\": \"BR\",\n                \"label\": \"Brésil\"\n            },\n            {\n                \"code\": \"BG\",\n                \"label\": \"Bulgarie\"\n            },\n            {\n                \"code\": \"BF\",\n                \"label\": \"Burkina Faso\"\n            },\n            {\n                \"code\": \"BI\",\n                \"label\": \"Burundi\"\n            },\n            {\n                \"code\": \"BJ\",\n                \"label\": \"Bénin\"\n            },\n            {\n                \"code\": \"KH\",\n                \"label\": \"Cambodge\"\n            },\n            {\n                \"code\": \"CM\",\n                \"label\": \"Cameroun\"\n            },\n            {\n                \"code\": \"CA\",\n                \"label\": \"Canada\"\n            },\n            {\n                \"code\": \"CV\",\n                \"label\": \"Cap Vert\"\n            },\n            {\n                \"code\": \"KY\",\n                \"label\": \"Caïman (Iles)\"\n            },\n            {\n                \"code\": \"CL\",\n                \"label\": \"Chili\"\n            },\n            {\n                \"code\": \"CN\",\n                \"label\": \"Chine\"\n            },\n            {\n                \"code\": \"CY\",\n                \"label\": \"Chypre\"\n            },\n            {\n                \"code\": \"VA\",\n                \"label\": \"Cité du Vatican (Saint-Siège)\"\n            },\n            {\n                \"code\": \"CC\",\n                \"label\": \"Cocos (Iles)\"\n            },\n            {\n                \"code\": \"CO\",\n                \"label\": \"Colombie\"\n            },\n            {\n                \"code\": \"KM\",\n                \"label\": \"Comores\"\n            },\n            {\n                \"code\": \"CG\",\n                \"label\": \"Congo\"\n            },\n            {\n                \"code\": \"CD\",\n                \"label\": \"Congo (République démocratique)\"\n            },\n            {\n                \"code\": \"KP\",\n                \"label\": \"Corée du Nord\"\n            },\n            {\n                \"code\": \"KR\",\n                \"label\": \"Corée du Sud\"\n            },\n            {\n                \"code\": \"CR\",\n                \"label\": \"Costa Rica\"\n            },\n            {\n                \"code\": \"HR\",\n                \"label\": \"Croatie\"\n            },\n            {\n                \"code\": \"CU\",\n                \"label\": \"Cuba\"\n            },\n            {\n                \"code\": \"CI\",\n                \"label\": \"Côte d'Ivoire\"\n            },\n            {\n                \"code\": \"DK\",\n                \"label\": \"Danemark\"\n            },\n            {\n                \"code\": \"DJ\",\n                \"label\": \"Djibouti\"\n            },\n            {\n                \"code\": \"DO\",\n                \"label\": \"Dominicaine (République)\"\n            },\n            {\n                \"code\": \"DM\",\n                \"label\": \"Dominique\"\n            },\n            {\n                \"code\": \"ES\",\n                \"label\": \"Espagne\"\n            },\n            {\n                \"code\": \"EE\",\n                \"label\": \"Estonie\"\n            },\n            {\n                \"code\": \"FR\",\n                \"label\": \"FRANCE\"\n            },\n            {\n                \"code\": \"FK\",\n                \"label\": \"Falkland (Iles Malouines)\"\n            },\n            {\n                \"code\": \"FJ\",\n                \"label\": \"Fidji\"\n            },\n            {\n                \"code\": \"FI\",\n                \"label\": \"Finlande\"\n            },\n            {\n                \"code\": \"FO\",\n                \"label\": \"Féroé (Iles)\"\n            },\n            {\n                \"code\": \"GY\",\n                \"label\": \"GUYANA\"\n            },\n            {\n                \"code\": \"GA\",\n                \"label\": \"Gabon\"\n            },\n            {\n                \"code\": \"GM\",\n                \"label\": \"Gambie\"\n            },\n            {\n                \"code\": \"GH\",\n                \"label\": \"Ghana\"\n            },\n            {\n                \"code\": \"GI\",\n                \"label\": \"Gibraltar\"\n            },\n            {\n                \"code\": \"GB\",\n                \"label\": \"Grande Bretagne\"\n            },\n            {\n                \"code\": \"GD\",\n                \"label\": \"Grenade\"\n            },\n            {\n                \"code\": \"GL\",\n                \"label\": \"Groenland\"\n            },\n            {\n                \"code\": \"GR\",\n                \"label\": \"Grèce\"\n            },\n            {\n                \"code\": \"GP\",\n                \"label\": \"Guadeloupe\"\n            },\n            {\n                \"code\": \"GU\",\n                \"label\": \"Guam\"\n            },\n            {\n                \"code\": \"GT\",\n                \"label\": \"Guatemala\"\n            },\n            {\n                \"code\": \"GN\",\n                \"label\": \"Guinée\"\n            },\n            {\n                \"code\": \"GQ\",\n                \"label\": \"Guinée Équatoriale\"\n            },\n            {\n                \"code\": \"GW\",\n                \"label\": \"Guinée-Bissau\"\n            },\n            {\n                \"code\": \"GF\",\n                \"label\": \"Guyane Française\"\n            },\n            {\n                \"code\": \"GE\",\n                \"label\": \"Géorgie\"\n            },\n            {\n                \"code\": \"HT\",\n                \"label\": \"Haïti\"\n            },\n            {\n                \"code\": \"HN\",\n                \"label\": \"Honduras\"\n            },\n            {\n                \"code\": \"HK\",\n                \"label\": \"Hong Kong\"\n            },\n            {\n                \"code\": \"HU\",\n                \"label\": \"Hongrie\"\n            },\n            {\n                \"code\": \"IN\",\n                \"label\": \"Inde\"\n            },\n            {\n                \"code\": \"ID\",\n                \"label\": \"Indonésie\"\n            },\n            {\n                \"code\": \"IQ\",\n                \"label\": \"Irak\"\n            },\n            {\n                \"code\": \"IR\",\n                \"label\": \"Iran\"\n            },\n            {\n                \"code\": \"IE\",\n                \"label\": \"Irlande\"\n            },\n            {\n                \"code\": \"IS\",\n                \"label\": \"Islande\"\n            },\n            {\n                \"code\": \"IL\",\n                \"label\": \"Israël\"\n            },\n            {\n                \"code\": \"IT\",\n                \"label\": \"Italie\"\n            },\n            {\n                \"code\": \"JM\",\n                \"label\": \"Jamaïque\"\n            },\n            {\n                \"code\": \"JP\",\n                \"label\": \"Japon\"\n            },\n            {\n                \"code\": \"JO\",\n                \"label\": \"Jordanie\"\n            },\n            {\n                \"code\": \"KZ\",\n                \"label\": \"Kazakhstan\"\n            },\n            {\n                \"code\": \"KE\",\n                \"label\": \"Kenya\"\n            },\n            {\n                \"code\": \"KI\",\n                \"label\": \"Kiribati\"\n            },\n            {\n                \"code\": \"KW\",\n                \"label\": \"Koweït\"\n            },\n            {\n                \"code\": \"KG\",\n                \"label\": \"Kyrgyzstan\"\n            },\n            {\n                \"code\": \"LA\",\n                \"label\": \"Laos\"\n            },\n            {\n                \"code\": \"LS\",\n                \"label\": \"Lesotho\"\n            },\n            {\n                \"code\": \"LV\",\n                \"label\": \"Lettonie\"\n            },\n            {\n                \"code\": \"LB\",\n                \"label\": \"Liban\"\n            },\n            {\n                \"code\": \"LR\",\n                \"label\": \"Liberia\"\n            },\n            {\n                \"code\": \"LY\",\n                \"label\": \"Libye\"\n            },\n            {\n                \"code\": \"LI\",\n                \"label\": \"Liechtenstein\"\n            },\n            {\n                \"code\": \"LT\",\n                \"label\": \"Lituanie\"\n            },\n            {\n                \"code\": \"LU\",\n                \"label\": \"Luxembourg\"\n            },\n            {\n                \"code\": \"MC\",\n                \"label\": \"MONACO\"\n            },\n            {\n                \"code\": \"MO\",\n                \"label\": \"Macao\"\n            },\n            {\n                \"code\": \"MK\",\n                \"label\": \"Macédoine\"\n            },\n            {\n                \"code\": \"MG\",\n                \"label\": \"Madagascar\"\n            },\n            {\n                \"code\": \"MY\",\n                \"label\": \"Malaisie\"\n            },\n            {\n                \"code\": \"MW\",\n                \"label\": \"Malawi\"\n            },\n            {\n                \"code\": \"MV\",\n                \"label\": \"Maldives\"\n            },\n            {\n                \"code\": \"ML\",\n                \"label\": \"Mali\"\n            },\n            {\n                \"code\": \"MT\",\n                \"label\": \"Malte\"\n            },\n            {\n                \"code\": \"MP\",\n                \"label\": \"Mariannes (Iles du Nord)\"\n            },\n            {\n                \"code\": \"MA\",\n                \"label\": \"Maroc\"\n            },\n            {\n                \"code\": \"MH\",\n                \"label\": \"Marshall (Iles)\"\n            },\n            {\n                \"code\": \"MQ\",\n                \"label\": \"Martinique\"\n            },\n            {\n                \"code\": \"MU\",\n                \"label\": \"Maurice (Ile)\"\n            },\n            {\n                \"code\": \"MR\",\n                \"label\": \"Mauritanie\"\n            },\n            {\n                \"code\": \"YT\",\n                \"label\": \"Mayotte\"\n            },\n            {\n                \"code\": \"MX\",\n                \"label\": \"Mexico\"\n            },\n            {\n                \"code\": \"FM\",\n                \"label\": \"Micronésie\"\n            },\n            {\n                \"code\": \"MD\",\n                \"label\": \"Moldavie\"\n            },\n            {\n                \"code\": \"MN\",\n                \"label\": \"Mongolie\"\n            },\n            {\n                \"code\": \"MS\",\n                \"label\": \"Montserrat\"\n            },\n            {\n                \"code\": \"MZ\",\n                \"label\": \"Mozambique\"\n            },\n            {\n                \"code\": \"MM\",\n                \"label\": \"Myanmar\"\n            },\n            {\n                \"code\": \"NA\",\n                \"label\": \"Namibie\"\n            },\n            {\n                \"code\": \"NR\",\n                \"label\": \"Nauru\"\n            },\n            {\n                \"code\": \"NI\",\n                \"label\": \"Nicaragua\"\n            },\n            {\n                \"code\": \"NE\",\n                \"label\": \"Niger\"\n            },\n            {\n                \"code\": \"NG\",\n                \"label\": \"Nigeria\"\n            },\n            {\n                \"code\": \"NU\",\n                \"label\": \"Niue\"\n            },\n            {\n                \"code\": \"NF\",\n                \"label\": \"Norfolk (Ile)\"\n            },\n            {\n                \"code\": \"NO\",\n                \"label\": \"Norvège\"\n            },\n            {\n                \"code\": \"NZ\",\n                \"label\": \"Nouvelle Zélande\"\n            },\n            {\n                \"code\": \"NC\",\n                \"label\": \"Nouvelle-Calédonie\"\n            },\n            {\n                \"code\": \"NP\",\n                \"label\": \"Népal\"\n            },\n            {\n                \"code\": \"OM\",\n                \"label\": \"Oman\"\n            },\n            {\n                \"code\": \"UG\",\n                \"label\": \"Ouganda\"\n            },\n            {\n                \"code\": \"UZ\",\n                \"label\": \"Ouzbekistan\"\n            },\n            {\n                \"code\": \"PK\",\n                \"label\": \"Pakistan\"\n            },\n            {\n                \"code\": \"PW\",\n                \"label\": \"Palau\"\n            },\n            {\n                \"code\": \"PA\",\n                \"label\": \"Panama\"\n            },\n            {\n                \"code\": \"PG\",\n                \"label\": \"Papouasie \"\n            },\n            {\n                \"code\": \"PY\",\n                \"label\": \"Paraguay\"\n            },\n            {\n                \"code\": \"NL\",\n                \"label\": \"Pays-Bas\"\n            },\n            {\n                \"code\": \"PH\",\n                \"label\": \"Philippines\"\n            },\n            {\n                \"code\": \"PN\",\n                \"label\": \"Pitcairn\"\n            },\n            {\n                \"code\": \"PL\",\n                \"label\": \"Pologne\"\n            },\n            {\n                \"code\": \"PF\",\n                \"label\": \"Polynésie Française \"\n            },\n            {\n                \"code\": \"PR\",\n                \"label\": \"Porto Rico\"\n            },\n            {\n                \"code\": \"PT\",\n                \"label\": \"Portugal\"\n            },\n            {\n                \"code\": \"PE\",\n                \"label\": \"Pérou\"\n            },\n            {\n                \"code\": \"QA\",\n                \"label\": \"Qatar\"\n            },\n            {\n                \"code\": \"RO\",\n                \"label\": \"Roumanie\"\n            },\n            {\n                \"code\": \"RU\",\n                \"label\": \"Russie\"\n            },\n            {\n                \"code\": \"RW\",\n                \"label\": \"Rwanda\"\n            },\n            {\n                \"code\": \"CF\",\n                \"label\": \"République Centre Afrique\"\n            },\n            {\n                \"code\": \"RE\",\n                \"label\": \"Réunion \"\n            },\n            {\n                \"code\": \"KN\",\n                \"label\": \"Saint Kitts and Nevis\"\n            },\n            {\n                \"code\": \"BL\",\n                \"label\": \"Saint-Barthélemy\"\n            },\n            {\n                \"code\": \"SM\",\n                \"label\": \"Saint-Marin\"\n            },\n            {\n                \"code\": \"MF\",\n                \"label\": \"Saint-Martin (Partie Française)\"\n            },\n            {\n                \"code\": \"VC\",\n                \"label\": \"Saint-Vincent-et-les-Grenadines\"\n            },\n            {\n                \"code\": \"PM\",\n                \"label\": \"Saint-pierre-et-miquelon\"\n            },\n            {\n                \"code\": \"SH\",\n                \"label\": \"Sainte-Hélène\"\n            },\n            {\n                \"code\": \"LC\",\n                \"label\": \"Sainte-Lucie\"\n            },\n            {\n                \"code\": \"SB\",\n                \"label\": \"Salomon (Iles)\"\n            },\n            {\n                \"code\": \"SV\",\n                \"label\": \"Salvador\"\n            },\n            {\n                \"code\": \"WS\",\n                \"label\": \"Samoa\"\n            },\n            {\n                \"code\": \"AS\",\n                \"label\": \"Samoa (Iles)\"\n            },\n            {\n                \"code\": \"RS\",\n                \"label\": \"Serbie\"\n            },\n            {\n                \"code\": \"SC\",\n                \"label\": \"Seychelles\"\n            },\n            {\n                \"code\": \"SL\",\n                \"label\": \"Sierra Leone\"\n            },\n            {\n                \"code\": \"SG\",\n                \"label\": \"Singapour\"\n            },\n            {\n                \"code\": \"SK\",\n                \"label\": \"Slovaquie\"\n            },\n            {\n                \"code\": \"SI\",\n                \"label\": \"Slovénie\"\n            },\n            {\n                \"code\": \"SO\",\n                \"label\": \"Somalie\"\n            },\n            {\n                \"code\": \"SD\",\n                \"label\": \"Soudan\"\n            },\n            {\n                \"code\": \"LK\",\n                \"label\": \"Sri Lanka\"\n            },\n            {\n                \"code\": \"SS\",\n                \"label\": \"Sud Soudan\"\n            },\n            {\n                \"code\": \"CH\",\n                \"label\": \"Suisse\"\n            },\n            {\n                \"code\": \"SR\",\n                \"label\": \"Suriname\"\n            },\n            {\n                \"code\": \"SE\",\n                \"label\": \"Suède\"\n            },\n            {\n                \"code\": \"SZ\",\n                \"label\": \"Swaziland\"\n            },\n            {\n                \"code\": \"SY\",\n                \"label\": \"Syrie\"\n            },\n            {\n                \"code\": \"ST\",\n                \"label\": \"São Tomé-et-Príncipe\"\n            },\n            {\n                \"code\": \"SN\",\n                \"label\": \"Sénégal\"\n            },\n            {\n                \"code\": \"TJ\",\n                \"label\": \"Tadjikistan\"\n            },\n            {\n                \"code\": \"TW\",\n                \"label\": \"Taiwan\"\n            },\n            {\n                \"code\": \"TZ\",\n                \"label\": \"Tanzanie\"\n            },\n            {\n                \"code\": \"TD\",\n                \"label\": \"Tchad\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des villes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=PARI&maxResult=50&countryCode=FR",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "PARI"
								},
								{
									"key": "maxResult",
									"value": "50"
								},
								{
									"key": "countryCode",
									"value": "FR"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CITIES"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=PARI&maxResult=50&countryCode=FR",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "PARI"
										},
										{
											"key": "maxResult",
											"value": "50"
										},
										{
											"key": "countryCode",
											"value": "FR"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CITIES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:00:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CITIES\",\n        \"description\": \"List of cities\",\n        \"moreResults\": false,\n        \"title\": \"Cities\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"30730\",\n                \"label\": \"PARIGNARGUES\"\n            },\n            {\n                \"code\": \"35133\",\n                \"label\": \"PARIGNE\"\n            },\n            {\n                \"code\": \"72250\",\n                \"label\": \"PARIGNE L EVEQUE\"\n            },\n            {\n                \"code\": \"72330\",\n                \"label\": \"PARIGNE LE POLIN\"\n            },\n            {\n                \"code\": \"53100\",\n                \"label\": \"PARIGNE SUR BRAYE\"\n            },\n            {\n                \"code\": \"42120\",\n                \"label\": \"PARIGNY\"\n            },\n            {\n                \"code\": \"58210\",\n                \"label\": \"PARIGNY LA ROSE\"\n            },\n            {\n                \"code\": \"58320\",\n                \"label\": \"PARIGNY LES VAUX\"\n            },\n            {\n                \"code\": \"75001\",\n                \"label\": \"PARIS 01\"\n            },\n            {\n                \"code\": \"75002\",\n                \"label\": \"PARIS 02\"\n            },\n            {\n                \"code\": \"75003\",\n                \"label\": \"PARIS 03\"\n            },\n            {\n                \"code\": \"75004\",\n                \"label\": \"PARIS 04\"\n            },\n            {\n                \"code\": \"75005\",\n                \"label\": \"PARIS 05\"\n            },\n            {\n                \"code\": \"75006\",\n                \"label\": \"PARIS 06\"\n            },\n            {\n                \"code\": \"75007\",\n                \"label\": \"PARIS 07\"\n            },\n            {\n                \"code\": \"75008\",\n                \"label\": \"PARIS 08\"\n            },\n            {\n                \"code\": \"75009\",\n                \"label\": \"PARIS 09\"\n            },\n            {\n                \"code\": \"75010\",\n                \"label\": \"PARIS 10\"\n            },\n            {\n                \"code\": \"75011\",\n                \"label\": \"PARIS 11\"\n            },\n            {\n                \"code\": \"75012\",\n                \"label\": \"PARIS 12\"\n            },\n            {\n                \"code\": \"75013\",\n                \"label\": \"PARIS 13\"\n            },\n            {\n                \"code\": \"75014\",\n                \"label\": \"PARIS 14\"\n            },\n            {\n                \"code\": \"75015\",\n                \"label\": \"PARIS 15\"\n            },\n            {\n                \"code\": \"75016\",\n                \"label\": \"PARIS 16\"\n            },\n            {\n                \"code\": \"75116\",\n                \"label\": \"PARIS 16\"\n            },\n            {\n                \"code\": \"75017\",\n                \"label\": \"PARIS 17\"\n            },\n            {\n                \"code\": \"75018\",\n                \"label\": \"PARIS 18\"\n            },\n            {\n                \"code\": \"75019\",\n                \"label\": \"PARIS 19\"\n            },\n            {\n                \"code\": \"75020\",\n                \"label\": \"PARIS 20\"\n            },\n            {\n                \"code\": \"71150\",\n                \"label\": \"PARIS L HOPITAL\"\n            },\n            {\n                \"code\": \"81310\",\n                \"label\": \"PARISOT\"\n            },\n            {\n                \"code\": \"82160\",\n                \"label\": \"PARISOT\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des départements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"departementResidence\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Seine et Ma&maxResult=150",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Seine et Ma"
								},
								{
									"key": "maxResult",
									"value": "150"
								},
								{
									"key": "countryCode",
									"value": "FR",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSPROD_PSTS1_LA_DEPARTEMENT"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=PARI&maxResult=50&countryCode=FR",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "PARI"
										},
										{
											"key": "maxResult",
											"value": "50"
										},
										{
											"key": "countryCode",
											"value": "FR"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CITIES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:00:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CITIES\",\n        \"description\": \"List of cities\",\n        \"moreResults\": false,\n        \"title\": \"Cities\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"30730\",\n                \"label\": \"PARIGNARGUES\"\n            },\n            {\n                \"code\": \"35133\",\n                \"label\": \"PARIGNE\"\n            },\n            {\n                \"code\": \"72250\",\n                \"label\": \"PARIGNE L EVEQUE\"\n            },\n            {\n                \"code\": \"72330\",\n                \"label\": \"PARIGNE LE POLIN\"\n            },\n            {\n                \"code\": \"53100\",\n                \"label\": \"PARIGNE SUR BRAYE\"\n            },\n            {\n                \"code\": \"42120\",\n                \"label\": \"PARIGNY\"\n            },\n            {\n                \"code\": \"58210\",\n                \"label\": \"PARIGNY LA ROSE\"\n            },\n            {\n                \"code\": \"58320\",\n                \"label\": \"PARIGNY LES VAUX\"\n            },\n            {\n                \"code\": \"75001\",\n                \"label\": \"PARIS 01\"\n            },\n            {\n                \"code\": \"75002\",\n                \"label\": \"PARIS 02\"\n            },\n            {\n                \"code\": \"75003\",\n                \"label\": \"PARIS 03\"\n            },\n            {\n                \"code\": \"75004\",\n                \"label\": \"PARIS 04\"\n            },\n            {\n                \"code\": \"75005\",\n                \"label\": \"PARIS 05\"\n            },\n            {\n                \"code\": \"75006\",\n                \"label\": \"PARIS 06\"\n            },\n            {\n                \"code\": \"75007\",\n                \"label\": \"PARIS 07\"\n            },\n            {\n                \"code\": \"75008\",\n                \"label\": \"PARIS 08\"\n            },\n            {\n                \"code\": \"75009\",\n                \"label\": \"PARIS 09\"\n            },\n            {\n                \"code\": \"75010\",\n                \"label\": \"PARIS 10\"\n            },\n            {\n                \"code\": \"75011\",\n                \"label\": \"PARIS 11\"\n            },\n            {\n                \"code\": \"75012\",\n                \"label\": \"PARIS 12\"\n            },\n            {\n                \"code\": \"75013\",\n                \"label\": \"PARIS 13\"\n            },\n            {\n                \"code\": \"75014\",\n                \"label\": \"PARIS 14\"\n            },\n            {\n                \"code\": \"75015\",\n                \"label\": \"PARIS 15\"\n            },\n            {\n                \"code\": \"75016\",\n                \"label\": \"PARIS 16\"\n            },\n            {\n                \"code\": \"75116\",\n                \"label\": \"PARIS 16\"\n            },\n            {\n                \"code\": \"75017\",\n                \"label\": \"PARIS 17\"\n            },\n            {\n                \"code\": \"75018\",\n                \"label\": \"PARIS 18\"\n            },\n            {\n                \"code\": \"75019\",\n                \"label\": \"PARIS 19\"\n            },\n            {\n                \"code\": \"75020\",\n                \"label\": \"PARIS 20\"\n            },\n            {\n                \"code\": \"71150\",\n                \"label\": \"PARIS L HOPITAL\"\n            },\n            {\n                \"code\": \"81310\",\n                \"label\": \"PARISOT\"\n            },\n            {\n                \"code\": \"82160\",\n                \"label\": \"PARISOT\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste Civilités personne",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"customerCivilite\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "personType",
									"value": "NATURAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "CIVIL_STATUS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?personType=NATURAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "personType",
											"value": "NATURAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "CIVIL_STATUS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:00:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"CIVIL_STATUS\",\n        \"description\": \"Classification of marital status\",\n        \"moreResults\": false,\n        \"title\": \"Civil status\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"AU\",\n                \"label\": \"Autre\"\n            },\n            {\n                \"code\": \"I\",\n                \"label\": \"Autres\"\n            },\n            {\n                \"code\": \"CNC\",\n                \"label\": \"Concubin(e)\"\n            },\n            {\n                \"code\": \"C\",\n                \"label\": \"Célibataire\"\n            },\n            {\n                \"code\": \"D\",\n                \"label\": \"Divorcé(e)\"\n            },\n            {\n                \"code\": \"CPLP\",\n                \"label\": \"En couple\"\n            },\n            {\n                \"code\": \"IN\",\n                \"label\": \"Inconnu\"\n            },\n            {\n                \"code\": \"M\",\n                \"label\": \"Marié(e)\"\n            },\n            {\n                \"code\": \"P\",\n                \"label\": \"Pacsé(e)\"\n            },\n            {\n                \"code\": \"S\",\n                \"label\": \"Séparé(e)\"\n            },\n            {\n                \"code\": \"V\",\n                \"label\": \"Veuf(ve)\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste types de population",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"pm.collectionVariables.set(\"jobCategories\", codes);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "JOB_CATEGORIES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "culture",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "JOB_CATEGORIES",
											"description": "(Required) Code of the HelpList"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Dec 2021 15:01:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"JOB_CATEGORIES\",\n        \"description\": \"Classification of job categories\",\n        \"moreResults\": false,\n        \"title\": \"Job category\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"CADRE\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                }\n            },\n            {\n                \"code\": \"TNS\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                }\n            },\n            {\n                \"code\": \"NONCADRE\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                }\n            },\n            {\n                \"code\": \"ENSEMBLE\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"true\"\n                }\n            },\n            {\n                \"code\": \"AGIRC\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel affilié à l'AGIRC\"\n            },\n            {\n                \"code\": \"NC_ART4_4BIS_36\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel ne relevant des articles 4, 4bis et 36 de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"NC_ART4\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel ne relevant pas de l'article 4 de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"NC_ART4_4BIS\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel ne relevant pas des articles 4 et 4bis de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"C_ART4\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel relevant de l'article 4 de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"C_4_4BIS\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel relevant des articles 4 et 4bis de la CCN AGIRC du 14 mars 1947\"\n            },\n            {\n                \"code\": \"C_4_4BIS_36\",\n                \"details\": {\n                    \"company\": \"ADP**\",\n                    \"allEmployees\": \"false\"\n                },\n                \"label\": \"Personnel relevant des articles 4, 4bis et 36 de la CCN AGIRC du 14 mars 1947\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Liste des structures de cotisation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    let codes = jsonData.data.values;\r",
									"\r",
									"    pm.test(\"Has at least one code in values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(codes[0].code).to.be.a(\"STRING\");\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"individualHealthStructureCotisation\", codes[_.random(0,codes.length-1)].code)\r",
									"    console.log(\"la structure choisie est \"+pm.collectionVariables.get(\"individualHealthStructureCotisation\"))\r",
									"\r",
									"} else {\r",
									"    //status code is not 200\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Adulte",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "productCode",
									"value": "{{codeProduitSante}}",
									"disabled": true
								},
								{
									"key": "grouping",
									"value": "IN_PROGRESS",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSPROD_PSTS1_LS_STRUC_COTISATION"
								}
							]
						}
					},
					"response": [
						{
							"name": "PPSPROD_PSCS1_LA_ASSIETTE_EXTENSION",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "Adulte",
											"disabled": true
										},
										{
											"key": "maxResult",
											"value": "15",
											"disabled": true
										},
										{
											"key": "productCode",
											"value": "{{codeProduitSante}}",
											"disabled": true
										},
										{
											"key": "grouping",
											"value": "IN_PROGRESS",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "PPSPROD_PSCS1_LA_ASSIETTE_EXTENSION"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Feb 2022 10:55:55 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"category\": \"PPSPROD_PRODUIT_PSCS1\",\n        \"code\": \"PPSPROD_PSCS1_LA_ASSIETTE_EXTENSION\",\n        \"description\": \"Liste des assiettes de cotisation possible sur le contrat extension\",\n        \"moreResults\": false,\n        \"subCategory\": \"Metier\",\n        \"title\": \"Cotisation extension\",\n        \"type\": \"STATIC\",\n        \"values\": [\n            {\n                \"code\": \"PSCS1_ASS_UNI\",\n                \"label\": \"Famille\"\n            },\n            {\n                \"code\": \"PSCS1_ASS_ADE\",\n                \"label\": \"Adulte Enfant\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Type prestataire concentrateur",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"typePrestataireConcentrateurCode\", codes[_.random(0, codes.length-1)].code);\r",
									"\r",
									"pm.collectionVariables.set(\"typePrestataireConcentrateurLabel\", codes[_.random(0, codes.length-1)].label);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Concen",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Concen"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "SERVICE_PROVIDER_TYPES"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=Concen",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "Concen"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "SERVICE_PROVIDER_TYPES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Jan 2022 09:01:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"SERVICE_PROVIDER_TYPES\",\n        \"description\": \"Types of providers\",\n        \"moreResults\": false,\n        \"title\": \"ServiceProviderTypes\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"CONCENTRATEUR\",\n                \"label\": \"Organisme de santé\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Type prestataire réseau de soins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"typePrestataireReseauSoinsCode\", codes[_.random(0, codes.length-1)].code);\r",
									"\r",
									"pm.collectionVariables.set(\"typePrestataireReseauSoinsLabel\", codes[_.random(0, codes.length-1)].label);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=soins",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "soins"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "SERVICE_PROVIDER_TYPES"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=soins",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "soins"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "SERVICE_PROVIDER_TYPES"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Jan 2022 09:11:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"SERVICE_PROVIDER_TYPES\",\n        \"description\": \"Types of providers\",\n        \"moreResults\": false,\n        \"title\": \"ServiceProviderTypes\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"RESEAU_SOINS\",\n                \"label\": \"Réseau de soins\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Get code régime général",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"codeRegimeGeneral\", codes[_.random(0, codes.length-1)].code);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=REGIME GENERAL",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "REGIME GENERAL"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "SOCIAL_SYSTEMS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?text=REGIME GENERAL",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "REGIME GENERAL"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "SOCIAL_SYSTEMS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jan 2022 15:02:42 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"SOCIAL_SYSTEMS\",\n        \"description\": \"Social systems\",\n        \"moreResults\": false,\n        \"title\": \"SocialSystems\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"01\",\n                \"label\": \"REGIME GENERAL\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Get liste caisses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"codeCaisseRO\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?socialSystemCode={{codeRegimeGeneral}}&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "socialSystemCode",
									"value": "{{codeRegimeGeneral}}"
								},
								{
									"key": "text",
									"value": "rhône",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "MANDATORY_PLAN_ORGANIZATION"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?socialSystemCode={{codeRegimeGeneral}}&limit=100",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "socialSystemCode",
											"value": "{{codeRegimeGeneral}}"
										},
										{
											"key": "text",
											"value": "rhône",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "MANDATORY_PLAN_ORGANIZATION"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jan 2022 15:03:20 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"MANDATORY_PLAN_ORGANIZATION\",\n        \"description\": \"Mandatory Plan Organization\",\n        \"moreResults\": true,\n        \"title\": \"MandatoryPlanOrganization\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"982\",\n                \"label\": \"AURILLAC\"\n            },\n            {\n                \"code\": \"939\",\n                \"label\": \"CAMIEG\"\n            },\n            {\n                \"code\": \"225\",\n                \"label\": \"CANSSM\"\n            },\n            {\n                \"code\": \"100\",\n                \"label\": \"CAVIMAC\"\n            },\n            {\n                \"code\": \"971\",\n                \"label\": \"CGSS Guadeloupe\"\n            },\n            {\n                \"code\": \"973\",\n                \"label\": \"CGSS Guyane\"\n            },\n            {\n                \"code\": \"972\",\n                \"label\": \"CGSS Martinique\"\n            },\n            {\n                \"code\": \"974\",\n                \"label\": \"CGSS Réunion\"\n            },\n            {\n                \"code\": \"758\",\n                \"label\": \"CNMSS personnel CNMSS\"\n            },\n            {\n                \"code\": \"011\",\n                \"label\": \"CPAM Ain\"\n            },\n            {\n                \"code\": \"021\",\n                \"label\": \"CPAM Aisne\"\n            },\n            {\n                \"code\": \"031\",\n                \"label\": \"CPAM Allier\"\n            },\n            {\n                \"code\": \"061\",\n                \"label\": \"CPAM Alpes-Maritimes\"\n            },\n            {\n                \"code\": \"081\",\n                \"label\": \"CPAM Ardennes\"\n            },\n            {\n                \"code\": \"072\",\n                \"label\": \"CPAM Ardèche\"\n            },\n            {\n                \"code\": \"091\",\n                \"label\": \"CPAM Ariège\"\n            },\n            {\n                \"code\": \"101\",\n                \"label\": \"CPAM Aube\"\n            },\n            {\n                \"code\": \"111\",\n                \"label\": \"CPAM Aude\"\n            },\n            {\n                \"code\": \"121\",\n                \"label\": \"CPAM Aveyron\"\n            },\n            {\n                \"code\": \"673\",\n                \"label\": \"CPAM Bas-Rhin\"\n            },\n            {\n                \"code\": \"131\",\n                \"label\": \"CPAM Bouches-du-Rhône\"\n            },\n            {\n                \"code\": \"141\",\n                \"label\": \"CPAM Calvados\"\n            },\n            {\n                \"code\": \"151\",\n                \"label\": \"CPAM Cantal\"\n            },\n            {\n                \"code\": \"161\",\n                \"label\": \"CPAM Charente\"\n            },\n            {\n                \"code\": \"171\",\n                \"label\": \"CPAM Charente-Maritime\"\n            },\n            {\n                \"code\": \"181\",\n                \"label\": \"CPAM Cher\"\n            },\n            {\n                \"code\": \"191\",\n                \"label\": \"CPAM Corrèze\"\n            },\n            {\n                \"code\": \"201\",\n                \"label\": \"CPAM Corse-du-Sud\"\n            },\n            {\n                \"code\": \"231\",\n                \"label\": \"CPAM Creuse\"\n            },\n            {\n                \"code\": \"211\",\n                \"label\": \"CPAM Côte d'Or\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Get liste centres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"codeCentreRO\", codes[_.random(0, codes.length-1)].code);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?mandatoryPlanOrgnizationCode={{codeCaisseRO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Rhône",
									"disabled": true
								},
								{
									"key": "mandatoryPlanOrgnizationCode",
									"value": "{{codeCaisseRO}}"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "MANDATORY_PLAN_CENTERS"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/settings/lists/:helpListCode?mandatoryPlanOrgnizationCode={{codeCaisseRO}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"settings",
										"lists",
										":helpListCode"
									],
									"query": [
										{
											"key": "text",
											"value": "Rhône",
											"disabled": true
										},
										{
											"key": "mandatoryPlanOrgnizationCode",
											"value": "{{codeCaisseRO}}"
										}
									],
									"variable": [
										{
											"key": "helpListCode",
											"value": "MANDATORY_PLAN_CENTERS"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 20 Jan 2022 15:03:47 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"data\": {\n        \"code\": \"MANDATORY_PLAN_CENTERS\",\n        \"description\": \"Mandatory Plan Centers\",\n        \"moreResults\": true,\n        \"title\": \"MandatoryPlanCenters\",\n        \"type\": \"BUILTIN\",\n        \"values\": [\n            {\n                \"code\": \"000\",\n                \"label\": \"AURILLAC\"\n            },\n            {\n                \"code\": \"603\",\n                \"label\": \"CAMIEG\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CANSSM\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CAVIMAC\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CGSS Guadeloupe\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CGSS Guyane\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CGSS Martinique\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CGSS Réunion\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CNMSS personnel CNMSS\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Ain\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Aisne\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Allier\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Alpes-Maritimes\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Ardennes\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Ardèche\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Ariège\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Aube\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Aude\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Aveyron\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Bas-Rhin\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Bouches-du-Rhône\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Calvados\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Cantal\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Charente\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Charente-Maritime\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Cher\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Corrèze\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Corse-du-Sud\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Creuse\"\n            },\n            {\n                \"code\": \"000\",\n                \"label\": \"CPAM Côte d'Or\"\n            }\n        ]\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set('folderName','Listes globales');"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Contrat TNS avec souscripteur seul",
			"item": [
				{
					"name": "Connexion Cleva",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"console.log('Je me suis bien connecté');",
									"pm.collectionVariables.set(\"emailTestPrefixe\", \"lahmermichel\");",
									"pm.collectionVariables.set(\"emailTestAdresse\", \"@gmail.com\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Création client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"customerPhoneNumber\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"streetAddress\",window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerPersonFamilyName\", window.faker.name.lastName());\r",
									"    pm.collectionVariables.set(\"customerPersonFirstName\", window.faker.name.firstName());\r",
									"    pm.collectionVariables.set(\"customerEmail\", window.faker.internet.email());\r",
									"    pm.collectionVariables.set(\"customerAdrZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"customerAdrCity\", window.faker.address.city());\r",
									"    pm.collectionVariables.set(\"customerAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"customerAdressLine2\", window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerAdressLine3\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"    pm.collectionVariables.set(\"customerAdressLatitude\", window.faker.address.latitude());\r",
									"    pm.collectionVariables.set(\"customerAdressLongitude\", window.faker.address.longitude());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"customerDNaissance\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"jobCategoryCode\", \"37\"); //A remplacer après avec la helplist\r",
									"pm.collectionVariables.set(\"jobCode\", \"376c\"); //A remplacer après avec la helplist\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let customer = jsonData.data;\r",
									"\r",
									"\r",
									"//Récupération des variables\r",
									"pm.collectionVariables.set(\"customerId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"customerPersonId\", jsonData.data.person.id);\r",
									"pm.collectionVariables.set(\"customerPersonFamilyName\", jsonData.data.person.familyName);\r",
									"pm.collectionVariables.set(\"customerPersonFirstName\", jsonData.data.person.firstName);\r",
									"pm.collectionVariables.set(\"customerPersonName\", jsonData.data.person.completeName);\r",
									"pm.collectionVariables.set(\"customerPersonBirthDate\", jsonData.data.person.birthDate);\r",
									"pm.collectionVariables.set(\"customerPersonZipCode\", jsonData.data.address.zipCode);\r",
									"pm.collectionVariables.set(\"customerEmail\", jsonData.data.communication.email);\r",
									"\r",
									"//Tests\r",
									"\r",
									"pm.test(\"Check Job category Code\", function () {\r",
									"    pm.expect(customer.person.jobCategoryCode).to.eql(pm.collectionVariables.get(\"jobCategoryCode\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Check Job category\", function () {\r",
									"    pm.expect(customer.person.jobCode).to.eql(pm.collectionVariables.get(\"jobCode\"));\r",
									"});\r",
									"\r",
									"//Log des url pour consulter dans CLEVA\r",
									"console.log(\"URL pour consulter l'objet créé dans CLEVA Web :\")\r",
									"console.log(pm.environment.get(\"clevaWebUrl\")+ \"personne/physique/\" +jsonData.data.person.id +\"/consultation\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"person\": {\r\n        \"familyName\": \"{{customerPersonFamilyName}}\",\r\n        \"firstName\": \"{{customerPersonFirstName}}\",\r\n        \"birthDate\": \"{{customerDNaissance}}\",\r\n        \"titleCode\": \"{{customerTitle}}\",\r\n        \"familySituationCode\": \"{{customerCivilite}}\",\r\n        \"externalReference\": \"{{$timestamp}}\",\r\n        \"jobCategoryCode\": \"{{jobCategoryCode}}\",\r\n        \"jobCode\": \"{{jobCode}}\"\r\n    },\r\n    \"communication\": {\r\n        \"cellphone\": \"{{customerPhoneNumber}}\",\r\n        \"email\": \"{{customerEmail}}\"\r\n    },\r\n    \"address\": {\r\n        \"countryCode\": \"FR\",\r\n        \"mainAddress\": true,\r\n        \"line1\": \"{{customerAdressLine1}}\",\r\n        \"line2\": \"{{customerAdressLine2}}\",\r\n        \"line3\": \"{{customerAdressLine3}}\",\r\n        \"zipCode\": \"{{customerAdrZipCode}}\",\r\n        \"city\": \"{{customerAdrCity}}\",\r\n        \"latitude\": {{customerAdressLatitude}},\r\n        \"longitude\": {{customerAdressLongitude}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/person/customers",
							"host": [
								"{{url}}"
							],
							"path": [
								"person",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adresse fiscale",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"streetAddress\",window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerAdrZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"customerAdrCity\", window.faker.address.city());\r",
									"    pm.collectionVariables.set(\"customerAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"customerAdressLine2\", window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerAdressLine3\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"    pm.collectionVariables.set(\"customerAdressLatitude\", window.faker.address.latitude());\r",
									"    pm.collectionVariables.set(\"customerAdressLongitude\", window.faker.address.longitude());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"adresseFiscaleId\", jsonData.data.id);\r",
									"\r",
									"let uses = jsonData.data.activeUses;\r",
									"\r",
									"function isP(address) {\r",
									"  return address.code == 'P';\r",
									"}\r",
									"\r",
									"function isFI(address) {\r",
									"  return address.code == 'FI';\r",
									"}\r",
									"\r",
									"let fiscalAddress = uses.find(isFI);\r",
									"\r",
									"console.log(\"FI\", fiscalAddress);\r",
									"\r",
									"let use = uses[_.random(0, uses.length-1)];\r",
									"\r",
									"\r",
									"pm.test(\"Code is FI\", function () {\r",
									"    pm.expect(fiscalAddress.code).to.eql('FI');\r",
									"});\r",
									"\r",
									"pm.test(\"Label is Fiscale\", function () {\r",
									"    pm.expect(fiscalAddress.label).to.eql('Fiscale');\r",
									"});\r",
									"\r",
									"pm.test(\"Date de début est currentDate\", function () {\r",
									"    pm.expect(fiscalAddress.startDate).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"activeUses\": [\r\n        {\r\n            \"code\": \"FI\"\r\n        }\r\n    ],\r\n    \"countryCode\": \"FR\",\r\n    \"line1\": \"{{customerAdressLine1}}\",\r\n    \"line2\": \"{{customerAdressLine2}}\",\r\n    \"line3\": \"{{customerAdressLine3}}\",\r\n    \"zipCode\": \"{{customerAdrZipCode}}\",\r\n    \"city\": \"{{customerAdrCity}}\",\r\n    \"latitude\": {{customerAdressLatitude}},\r\n    \"longitude\": {{customerAdressLongitude}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/addresses",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"addresses"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter RIB Carpa",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);\r",
									"\r",
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {\r",
									"    if (error || response.code !== 200) {\r",
									"        pm.expect.fail('Could not load external library');\r",
									"    }\r",
									"\r",
									"    eval(response.text());\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"\r",
									"    pm.collectionVariables.set(\"bankZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"bankAdrCity\", window.faker.address.city());\r",
									"\r",
									"    pm.collectionVariables.set(\"bankAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"bankAdressLine2\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"otherBankDetailsCustomerId\", jsonData.data.id);\r",
									"\r",
									"pm.test(\"Code is AU\", function () {\r",
									"    pm.expect(jsonData.data.activeUses[0].code).to.eql(\"CARPA\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activeUses\": [\n        {\n            \"code\": \"CARPA\",\n            \"startDate\": \"{{currentDate}}\",\n            \"endDate\":\"{{6MonthsLater}}\"\n        }\n    ],\n    \"iban\": \"FR7630006000011234567890189\",\n    \"holder\": \"{{customerPersonFirstName}} {{customerPersonFamilyName}}\",\n    \"bic\": \"AGRIFRPP\",\n    \"bank\": \"Credit agricole\",\n    \"bankAddress1\": \"{{$randomStreetAddress}}\",\n    \"city\": \"{{$randomCity}}\",\n    \"type\": \"{{$randomBankAccountName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Liste des adresses",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"nombre d'adresses = 2\", function () {\r",
									"    pm.expect(jsonData.data.length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/persons/:id/addresses",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"addresses"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Liste des banques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"console.log(pm.response.json());\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"PGID1_Client_Banque\", codes[_.random(0, codes.length-1)].code);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "culture",
									"disabled": true
								},
								{
									"key": "maxResult",
									"value": "15",
									"disabled": true
								},
								{
									"key": "dtfdfg",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "PPSIARD_SOCLE_BANQUES",
									"description": "(Required) Code of the HelpList"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter un RIB au client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('companyAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('companyAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('companyAdressStreetName', window.faker.address.streetName());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"BankDetailsCustomerId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"iban\": \"FR2012739000501327895759P67\",\n    \"bic\": \"AGRIFRPP\",\n    \"bank\": \"Credit agricole\",\n    \"bankAddress1\": \"14 {{companyAdressStreetName}}\",\n    \"bankAddress2\": \"Second RIB\",\n    \"zipCode\": \"{{companyAdrZipCode}}\",\n    \"city\": \"{{companyAdrCity}}\",\n    \"activeUses\": [\n        {\n            \"code\": \"P\",\n            \"startDate\": \"{{currentDate}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Liste des RIBs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"nombre de RIB = 2\", function () {\r",
									"    pm.expect(jsonData.data.length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/persons/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Recherche client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"console.info(this.request.name);\r",
									"pm.sendRequest(\"https://randomuser.me/api/?nat=fr\", (err, res) => {\r",
									"    pm.collectionVariables.set('customerFamilyName', res.json().results[0].name.last)\r",
									"    pm.collectionVariables.set('customerFirstName', res.json().results[0].name.first)\r",
									"    pm.collectionVariables.set('customerGender', (res.json().results[0].gender.toUpperCase()))\r",
									"    pm.collectionVariables.set('customerPhone', res.json().results[0].phone)\r",
									"    pm.collectionVariables.set('customerMail', res.json().results[0].email)\r",
									"    pm.collectionVariables.set('customerDNaissance', moment(res.json().results[0].dob.date).format(\"YYYY-MM-DD\"))\r",
									"     pm.collectionVariables.set('customerAdrZipCode', res.json().results[0].location.postcode),\r",
									"    pm.collectionVariables.set('customerAdrCity', res.json().results[0].location.city)\r",
									"    pm.collectionVariables.set('customerAdressNumber', res.json().results[0].location.street.number)\r",
									"    pm.collectionVariables.set('customerAdressStreetName', res.json().results[0].location.street.name)\r",
									"}) "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/customers?email={{customerEmail}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "type",
									"value": "NATURAL",
									"disabled": true
								},
								{
									"key": "email",
									"value": "{{customerEmail}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Simulation de prime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthQuoteId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "ITN_ACTIVATE_SCENARIO",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\": \"{{customerId}}\",\r\n    \"productCode\": \"{{productCode}}\",\r\n    \"description\": \"PSTS1 créé par API REST\",\r\n    \"status\": {\r\n        \"subcode\": \"01\",\r\n        \"effectiveDate\": \"{{currentDate}}\"\r\n    },\r\n    \"freeZones\": {\r\n        \"PPSPROD_PSTS1_ZL_AGE_ADHESION\": {\r\n            \"type\": \"NUMERIC\",\r\n            \"value\": \"40\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_DEPT_RESIDENCE\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"{{departementResidence}}\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_STRUCTURE_COTISATION\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"{{individualHealthStructureCotisation}}\"\r\n        }\r\n    },\r\n    \"affiliate\": {\r\n        \"person\": {\r\n            \"id\": \"{{customerPersonId}}\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/pricing",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"pricing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Nouveau devis indiv santé",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthQuoteId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('contactEntrepriseName', window.faker.company.companyName());\r",
									"pm.collectionVariables.set('contactEntrepriseSupplementName', window.faker.company.companySuffix());\r",
									"\r",
									"pm.collectionVariables.set('contactAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('contactAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('contactAdrStreet', window.faker.address.streetName());\r",
									"pm.collectionVariables.set('contactAdrLatitude', window.faker.address.latitude());\r",
									"pm.collectionVariables.set('contactAdrLongitude', window.faker.address.longitude());\r",
									"\r",
									"pm.collectionVariables.set('contactPhoneNumber', window.faker.phone.phoneNumber());\r",
									"pm.collectionVariables.set('contactEmail', window.faker.internet.exampleEmail());\r",
									"pm.collectionVariables.set('contactWebSite', window.faker.internet.url());\r",
									"\r",
									"pm.collectionVariables.set('contactExternalReference', window.faker.random.number());\r",
									"\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\": \"{{customerId}}\",\r\n    \"productCode\": \"{{productCode}}\",\r\n    \"description\": \"PSTS1 créé par API REST\",\r\n    \"status\": {\r\n        \"subcode\": \"01\",\r\n        \"effectiveDate\": \"{{currentDate}}\"\r\n    },\r\n    \"freeZones\": {\r\n        \"PPSPROD_PSTS1_ZL_AGE_ADHESION\": {\r\n            \"type\": \"NUMERIC\",\r\n            \"value\": \"40\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_DEPT_RESIDENCE\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"{{departementResidence}}\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_STRUCTURE_COTISATION\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"{{individualHealthStructureCotisation}}\"\r\n        }\r\n    },\r\n    \"affiliate\": {\r\n        \"person\": {\r\n            \"id\": \"{{customerPersonId}}\"\r\n        },\r\n        \"formula\": \"ESSENTIELLE\",\r\n        \"mandatoryPlans\": [\r\n            {\r\n                \"activateNOEMIE\": true,\r\n                \"alsaceMoselle\": false,\r\n                \"birthDate\": \"{{35YearsAgo}}\",\r\n                \"effectiveDate\": \"{{5YearsAgo}}\",\r\n                \"identification\": \"{{nir}}\",\r\n                \"identificationKey\": \"{{cleNir}}\",\r\n                \"key\": \"{{cleNir}}\",\r\n                \"number\": \"{{nir}}\",\r\n                \"organizationCode\": \"{{codeCaisseRO}}\",\r\n                \"systemCode\": \"{{codeRegimeGeneral}}\"\r\n            }\r\n        ],\r\n        \"selfEmployedWorker\": {\r\n            \"deductibilityRate\": 10,\r\n            \"fiscalYear\": \"0210\",\r\n            \"membership\": true,\r\n            \"socialSystemCode\": \"GEN\"\r\n        },\r\n        \"interveners\": [\r\n            {\r\n                \"businessInformation\": {\r\n                    \"titleId\": \"{{contactTitle}}\",\r\n                    \"companyName\": \"{{contactEntrepriseName}}\"\r\n                },\r\n                \"communication\": {\r\n                    \"cellphone\": \"{{contactPhoneNumber}}\",\r\n                    \"email\": \"{{contactEmail}}\",\r\n                    \"webSite\": \"{{contactWebSite}}\"\r\n                },\r\n                \"address\": {\r\n                    \"countryCode\": \"FR\",\r\n                    \"mainAddress\": true,\r\n                    \"line1\": \"{{contactAdrStreet}}\",\r\n                    \"line3\": \"{{contactAdrZipCode}}\",\r\n                    \"line4\": \"{{contactAdrCity}}\",\r\n                    \"latitude\": \"{{contactAdrLatitude}}\",\r\n                    \"longitude\": \"{{contactAdrLongitude}}\"\r\n                },\r\n                \"roleCode\": \"ASSOCIATIO\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter le conjoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthQuoteId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"spouseBeneficiaryId\", jsonData.data.affiliate.beneficiaries[0].id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"spousePhone\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"spouseFamilyName\", window.faker.name.lastName());\r",
									"    pm.collectionVariables.set(\"spouseFirstName\", window.faker.name.firstName());\r",
									"\r",
									"    pm.collectionVariables.set(\"spouseGender\",\"FEMALE\");\r",
									"\r",
									"    pm.collectionVariables.set(\"spouseMail\", window.faker.internet.email());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"jobCategoryCode\", \"37\"); //A remplacer après avec la helplist\r",
									"pm.collectionVariables.set(\"jobCode\", \"376c\"); //A remplacer après avec la helplist\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Devis santé indiv API modifié\",\r\n    \"status\": {\r\n        \"subcode\": \"02\",\r\n        \"effectiveDate\": \"{{currentDate}}\"\r\n    },\r\n    \"affiliate\": {\r\n        \"beneficiaries\": [\r\n            {\r\n                \"qualification\": \"SPOUSE\",\r\n                \"autonomous\": false,\r\n                \"communication\": {\r\n                    \"email\": \"{{$randomEmail}}\"\r\n                },\r\n                \"person\": {\r\n                    \"familyName\": \"{{spouseFamilyName}}\",\r\n                    \"firstName\": \"{{spouseFirstName}}\",\r\n                    \"birthDate\": \"1990-02-01\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthQuoteId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modifier le nom du conjoint CLEVW-53517",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthQuoteId\", jsonData.data.id);\r",
									"\r",
									"\r",
									"pm.test(\"both family and firstName are correct\", function () {\r",
									"    pm.expect(pm.collectionVariables.get(\"spouseFirstName\")).to.eql(jsonData.data.affiliate.beneficiaries[0].person.firstName);\r",
									"    pm.expect(pm.collectionVariables.get(\"customerPersonFamilyName\")).to.eql(jsonData.data.affiliate.beneficiaries[0].person.familyName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"    // This is where you can set the locale. See faker.js docs for all available locales.\r",
									"    window.faker.locale=\"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"spousePhone\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"spouseFamilyName\", window.faker.name.lastName().toUpperCase());\r",
									"    pm.collectionVariables.set(\"spouseFirstName\", window.faker.name.firstName().toUpperCase());\r",
									"\r",
									"    pm.collectionVariables.set(\"spouseGender\",\"FEMALE\");\r",
									"\r",
									"    pm.collectionVariables.set(\"spouseMail\", window.faker.internet.email());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"jobCategoryCode\", \"37\"); //A remplacer après avec la helplist\r",
									"pm.collectionVariables.set(\"jobCode\", \"376c\"); //A remplacer après avec la helplist\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Devis santé indiv API modifié\",\r\n    \"status\": {\r\n        \"subcode\": \"02\",\r\n        \"effectiveDate\": \"{{currentDate}}\"\r\n    },\r\n    \"affiliate\": {\r\n        \"beneficiaries\": [\r\n            {\r\n                \"id\": \"{{spouseBeneficiaryId}}\",\r\n                \"person\": {\r\n                    \"familyName\": \"{{customerPersonFamilyName}}\",\r\n                    \"firstName\": \"{{spouseFirstName}}\",\r\n                    \"birthDate\": \"1990-02-01\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthQuoteId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Subscribe individual health contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthContractId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id/subscribe",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id",
								"subscribe"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthQuoteId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Load individual health contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthContractId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Liste sous natures d'avenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Check response status\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let codes = jsonData.data.values;\r",
									"\r",
									"\r",
									"//Set title code\r",
									"pm.collectionVariables.set(\"individualHealthEndorsementSubnature\", codes[_.random(0, codes.length-1)].code);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.info(this.request.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/settings/lists/:helpListCode?text=Bénéf&productCode={{productCode}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"settings",
								"lists",
								":helpListCode"
							],
							"query": [
								{
									"key": "text",
									"value": "Bénéf"
								},
								{
									"key": "maxResult",
									"value": "20",
									"disabled": true
								},
								{
									"key": "productCode",
									"value": "{{productCode}}"
								}
							],
							"variable": [
								{
									"key": "helpListCode",
									"value": "ENDORSEMENTS_NATURES"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Avenant ajouter deux enfants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"console.log(jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endorsement\": {\r\n        \"subNatureCode\": \"{{individualHealthEndorsementSubnature}}\",\r\n        \"effectiveDate\": \"{{currentDate}}\"\r\n    },\r\n    \"contract\": {\r\n        \"description\": \"Ajout de deux enfants par API\",\r\n        \"affiliate\": {\r\n            \"beneficiaries\": [\r\n                {\r\n                    \"qualification\": \"CHILD\",\r\n                    \"communication\": {\r\n                        \"email\": \"{{$randomEmail}}\"\r\n                    },\r\n                    \"person\": {\r\n                        \"familyName\": \"{{$randomLastName}}\",\r\n                        \"firstName\": \"{{$randomFirstName}}\",\r\n                        \"birthDate\": \"2005-02-01\"\r\n                    }\r\n                },\r\n                {\r\n                    \"qualification\": \"CHILD\",\r\n                    \"communication\": {\r\n                        \"email\": \"{{$randomEmail}}\"\r\n                    },\r\n                    \"person\": {\r\n                        \"familyName\": \"{{$randomLastName}}\",\r\n                        \"firstName\": \"{{$randomFirstName}}\",\r\n                        \"birthDate\": \"2009-02-01\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id/endorsements",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id",
								"endorsements"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthContractId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Liste des avenants d'un contrat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id/endorsements",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id",
								"endorsements"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthContractId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TNS formule excellence IF",
			"item": [
				{
					"name": "Connexion Cleva",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"console.log('Je me suis bien connecté');",
									"pm.collectionVariables.set(\"emailTestPrefixe\", \"lahmermichel\");",
									"pm.collectionVariables.set(\"emailTestAdresse\", \"@gmail.com\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Création client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"customerPhoneNumber\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"streetAddress\",window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerPersonFamilyName\", window.faker.name.lastName());\r",
									"    pm.collectionVariables.set(\"customerPersonFirstName\", window.faker.name.firstName());\r",
									"    pm.collectionVariables.set(\"customerEmail\", window.faker.internet.email());\r",
									"    pm.collectionVariables.set(\"customerAdrZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"customerAdrCity\", window.faker.address.city());\r",
									"    pm.collectionVariables.set(\"customerAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"customerAdressLine2\", window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerAdressLine3\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"    pm.collectionVariables.set(\"customerAdressLatitude\", window.faker.address.latitude());\r",
									"    pm.collectionVariables.set(\"customerAdressLongitude\", window.faker.address.longitude());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"customerDNaissance\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"jobCategoryCode\", \"37\"); //A remplacer après avec la helplist\r",
									"pm.collectionVariables.set(\"jobCode\", \"376c\"); //A remplacer après avec la helplist\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let customer = jsonData.data;\r",
									"\r",
									"\r",
									"//Récupération des variables\r",
									"pm.collectionVariables.set(\"customerId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"customerPersonId\", jsonData.data.person.id);\r",
									"pm.collectionVariables.set(\"customerPersonFamilyName\", jsonData.data.person.familyName);\r",
									"pm.collectionVariables.set(\"customerPersonFirstName\", jsonData.data.person.firstName);\r",
									"pm.collectionVariables.set(\"customerPersonName\", jsonData.data.person.completeName);\r",
									"pm.collectionVariables.set(\"customerPersonBirthDate\", jsonData.data.person.birthDate);\r",
									"pm.collectionVariables.set(\"customerPersonZipCode\", jsonData.data.address.zipCode);\r",
									"pm.collectionVariables.set(\"customerEmail\", jsonData.data.communication.email);\r",
									"\r",
									"//Tests\r",
									"\r",
									"pm.test(\"Check Job category Code\", function () {\r",
									"    pm.expect(customer.person.jobCategoryCode).to.eql(pm.collectionVariables.get(\"jobCategoryCode\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Check Job category\", function () {\r",
									"    pm.expect(customer.person.jobCode).to.eql(pm.collectionVariables.get(\"jobCode\"));\r",
									"});\r",
									"\r",
									"//Log des url pour consulter dans CLEVA\r",
									"console.log(\"URL pour consulter l'objet créé dans CLEVA Web :\")\r",
									"console.log(pm.environment.get(\"clevaWebUrl\")+ \"personne/physique/\" +jsonData.data.person.id +\"/consultation\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"person\": {\r\n        \"familyName\": \"{{customerPersonFamilyName}}\",\r\n        \"firstName\": \"{{customerPersonFirstName}}\",\r\n        \"birthDate\": \"{{customerDNaissance}}\",\r\n        \"titleCode\": \"{{customerTitle}}\",\r\n        \"familySituationCode\": \"{{customerCivilite}}\",\r\n        \"externalReference\": \"{{$timestamp}}\",\r\n        \"jobCategoryCode\": \"{{jobCategoryCode}}\",\r\n        \"jobCode\": \"{{jobCode}}\"\r\n    },\r\n    \"communication\": {\r\n        \"cellphone\": \"{{customerPhoneNumber}}\",\r\n        \"email\": \"{{customerEmail}}\"\r\n    },\r\n    \"address\": {\r\n        \"countryCode\": \"FR\",\r\n        \"mainAddress\": true,\r\n        \"line1\": \"{{customerAdressLine1}}\",\r\n        \"line2\": \"{{customerAdressLine2}}\",\r\n        \"line3\": \"{{customerAdressLine3}}\",\r\n        \"zipCode\": \"{{customerAdrZipCode}}\",\r\n        \"city\": \"{{customerAdrCity}}\",\r\n        \"latitude\": {{customerAdressLatitude}},\r\n        \"longitude\": {{customerAdressLongitude}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/person/customers",
							"host": [
								"{{url}}"
							],
							"path": [
								"person",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter un régime obligatoire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"mandatoryPlansId\", jsonData.data.identification);\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"identification is 1800144109133\", () => {\r",
									"    pm.expect(jsonData.data.identification).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"key is 88\", () => {\r",
									"    pm.expect(jsonData.data.key).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"systemCode is 01\", () => {\r",
									"    pm.expect(jsonData.data.systemCode).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, [2000]);\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"activateNOEMIE\": true,\r\n    \"alsaceMoselle\": false,\r\n    \"birthDate\": \"{{35YearsAgo}}\",\r\n    \"effectiveDate\": \"{{5MonthsAgo}}\",\r\n    \"identification\": \"{{nir}}\",\r\n    \"identificationKey\": \"{{cleNir}}\",\r\n    \"key\": \"{{cleNir}}\",\r\n    \"number\": \"{{nir}}\",\r\n    \"centerCode\": \"000\",\r\n    \"organizationCode\": \"011\",\r\n    \"systemCode\": \"01\"\r\n}\r\n\r\n/*\r\n    \"centerCode\": \"{{codeCentreRO}}\",\r\n    \"organizationCode\": \"{{codeCaisseRO}}\",\r\n    */",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/mandatoryPlans",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"mandatoryPlans"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter un RIB à une personne physique",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, [2000]);\r",
									"\r",
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('companyAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('companyAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('companyAdrStreet', window.faker.address.streetName());\r",
									"\r",
									"pm.collectionVariables.set('companyAdressNumber', _.random(1, 10));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    //testing bank information\r",
									"    pm.test(\"bank name is correct\", () => {\r",
									"        pm.expect(jsonData.data.bank).to.eql(\"Credit agricole\");\r",
									"    });\r",
									"\r",
									"    //testing iban information\r",
									"    pm.test(\"iban is correct\", () => {\r",
									"        pm.expect(jsonData.data.iban).to.eql(\"FR2012739000501327895759P67\");\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"personBankDetailsID\", jsonData.data.id)\r",
									"\r",
									"\r",
									"} else {\r",
									"    //status code is not 201\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"AGRIFRPP\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"activeUses\": [\r\n        {\r\n            \"code\": \"P\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ajouter un RIB à une personne physique",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"{{$randomBankAccountBic}}\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"countryCode\": \"FR\",\r\n    \"activeUses\": [\"AU\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/persons/:id/bankDetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"persons",
										":id",
										"bankDetails"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{personID}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jan 2022 15:06:17 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"activeUses\": [\n            \"AU\"\n        ],\n        \"bank\": \"Credit agricole\",\n        \"bankAddress1\": \"14 725 Rue Baraban\",\n        \"bankAddress2\": \"Second RIB\",\n        \"bic\": \"HGMOSIQ1\",\n        \"city\": \"Nanterre\",\n        \"countryCode\": \"FR\",\n        \"creationDate\": \"2022-01-26T16:06:17+01:00\",\n        \"iban\": \"FR2012739000501327895759P67\",\n        \"id\": \"20000237\",\n        \"zipCode\": \"67271\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Nouveau devis indiv santé",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthQuoteId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('contactEntrepriseName', window.faker.company.companyName());\r",
									"pm.collectionVariables.set('contactEntrepriseSupplementName', window.faker.company.companySuffix());\r",
									"\r",
									"pm.collectionVariables.set('contactAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('contactAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('contactAdrStreet', window.faker.address.streetName());\r",
									"pm.collectionVariables.set('contactAdrLatitude', window.faker.address.latitude());\r",
									"pm.collectionVariables.set('contactAdrLongitude', window.faker.address.longitude());\r",
									"\r",
									"pm.collectionVariables.set('contactPhoneNumber', window.faker.phone.phoneNumber());\r",
									"pm.collectionVariables.set('contactEmail', window.faker.internet.exampleEmail());\r",
									"pm.collectionVariables.set('contactWebSite', window.faker.internet.url());\r",
									"\r",
									"pm.collectionVariables.set('contactExternalReference', window.faker.random.number());\r",
									"\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\": \"{{customerId}}\",\r\n    \"productCode\": \"PSTS1\",\r\n    \"description\": \"Devis santé indiv API\",\r\n    \"status\": {\r\n        \"subcode\": \"01\",\r\n        \"effectiveDate\": \"{{lastYear}}\"\r\n    },\r\n    \"freeZones\": {\r\n        \"PPSPROD_PSTS1_ZL_AGE_ADHESION\": {\r\n            \"type\": \"NUMERIC\",\r\n            \"value\": \"35\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_DEPT_RESIDENCE\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"01\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_STRUCTURE_COTISATION\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"PPSPROD_PSTS1_IF\"\r\n        }\r\n    },\r\n    \"affiliate\": {\r\n        \"person\": {\r\n            \"id\": \"{{customerPersonId}}\"\r\n        },\r\n        \"formula\": \"EXCELLENCE\"\r\n    },\r\n    \"payment\": {\r\n        \"bankDetailsUsageCode\": \"P\",\r\n        \"directDebitDay\": 5,\r\n        \"discountNonDeductedCommissionPayout\": true,\r\n        \"endorsementDiscountCode\": \"VA\",\r\n        \"endorsementNonDeductedCommissionPayout\": true,\r\n        \"endorsementPaymentCode\": \"PF\",\r\n        \"fiscalTerritory\": \"STD\",\r\n        \"newBusinessNonDeductedCommissionPayout\": true,\r\n        \"newBusinessPayer\": \"CUSTOMER\",\r\n        \"newBusinessPaymentCode\": \"PF\",\r\n        \"numberMonthsPaymentPeriod\": 12,\r\n        \"payerPersonId\": \"{{customerPersonId}}\",\r\n        \"periodicity\": \"ANNUAL\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Souscrire le contrat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.environment.set(\"individualHealthContractId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id/subscribe",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id",
								"subscribe"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthQuoteId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulter le contrat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthContractId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TNS formule tiers confort IF",
			"item": [
				{
					"name": "Connexion Cleva",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", pm.response.text());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"console.log('Je me suis bien connecté');",
									"pm.collectionVariables.set(\"emailTestPrefixe\", \"lahmermichel\");",
									"pm.collectionVariables.set(\"emailTestAdresse\", \"@gmail.com\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "AALR",
									"type": "string"
								},
								{
									"key": "username",
									"value": "ALR",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"me",
								"login"
							]
						},
						"description": "Chargement d'une tâche"
					},
					"response": []
				},
				{
					"name": "Création client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"    pm.collectionVariables.set(\"customerPhoneNumber\",window.faker.phone.phoneNumber());\r",
									"    pm.collectionVariables.set(\"streetAddress\",window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerPersonFamilyName\", window.faker.name.lastName());\r",
									"    pm.collectionVariables.set(\"customerPersonFirstName\", window.faker.name.firstName());\r",
									"    pm.collectionVariables.set(\"customerEmail\", window.faker.internet.email());\r",
									"    pm.collectionVariables.set(\"customerAdrZipCode\", window.faker.address.zipCode());\r",
									"    pm.collectionVariables.set(\"customerAdrCity\", window.faker.address.city());\r",
									"    pm.collectionVariables.set(\"customerAdressLine1\",  window.faker.address.streetName());\r",
									"    pm.collectionVariables.set(\"customerAdressLine2\", window.faker.address.streetAddress());\r",
									"    pm.collectionVariables.set(\"customerAdressLine3\", window.faker.address.streetPrefix() + ' ' + window.faker.address.streetSuffix())  ;\r",
									"    pm.collectionVariables.set(\"customerAdressLatitude\", window.faker.address.latitude());\r",
									"    pm.collectionVariables.set(\"customerAdressLongitude\", window.faker.address.longitude());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"customerDNaissance\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));\r",
									"pm.collectionVariables.set(\"jobCategoryCode\", \"37\"); //A remplacer après avec la helplist\r",
									"pm.collectionVariables.set(\"jobCode\", \"376c\"); //A remplacer après avec la helplist\r",
									"\r",
									"console.info(pm.collectionVariables.get('folderName') + \" --> \" + this.request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"let customer = jsonData.data;\r",
									"\r",
									"\r",
									"//Récupération des variables\r",
									"pm.collectionVariables.set(\"customerId\", jsonData.data.id);\r",
									"pm.collectionVariables.set(\"customerPersonId\", jsonData.data.person.id);\r",
									"pm.collectionVariables.set(\"customerPersonFamilyName\", jsonData.data.person.familyName);\r",
									"pm.collectionVariables.set(\"customerPersonFirstName\", jsonData.data.person.firstName);\r",
									"pm.collectionVariables.set(\"customerPersonName\", jsonData.data.person.completeName);\r",
									"pm.collectionVariables.set(\"customerPersonBirthDate\", jsonData.data.person.birthDate);\r",
									"pm.collectionVariables.set(\"customerPersonZipCode\", jsonData.data.address.zipCode);\r",
									"pm.collectionVariables.set(\"customerEmail\", jsonData.data.communication.email);\r",
									"\r",
									"//Tests\r",
									"\r",
									"pm.test(\"Check Job category Code\", function () {\r",
									"    pm.expect(customer.person.jobCategoryCode).to.eql(pm.collectionVariables.get(\"jobCategoryCode\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Check Job category\", function () {\r",
									"    pm.expect(customer.person.jobCode).to.eql(pm.collectionVariables.get(\"jobCode\"));\r",
									"});\r",
									"\r",
									"//Log des url pour consulter dans CLEVA\r",
									"console.log(\"URL pour consulter l'objet créé dans CLEVA Web :\")\r",
									"console.log(pm.environment.get(\"clevaWebUrl\")+ \"personne/physique/\" +jsonData.data.person.id +\"/consultation\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"person\": {\r\n        \"familyName\": \"{{customerPersonFamilyName}}\",\r\n        \"firstName\": \"{{customerPersonFirstName}}\",\r\n        \"birthDate\": \"{{customerDNaissance}}\",\r\n        \"titleCode\": \"{{customerTitle}}\",\r\n        \"familySituationCode\": \"{{customerCivilite}}\",\r\n        \"externalReference\": \"{{$timestamp}}\",\r\n        \"jobCategoryCode\": \"{{jobCategoryCode}}\",\r\n        \"jobCode\": \"{{jobCode}}\"\r\n    },\r\n    \"communication\": {\r\n        \"cellphone\": \"{{customerPhoneNumber}}\",\r\n        \"email\": \"{{customerEmail}}\"\r\n    },\r\n    \"address\": {\r\n        \"countryCode\": \"FR\",\r\n        \"mainAddress\": true,\r\n        \"line1\": \"{{customerAdressLine1}}\",\r\n        \"line2\": \"{{customerAdressLine2}}\",\r\n        \"line3\": \"{{customerAdressLine3}}\",\r\n        \"zipCode\": \"{{customerAdrZipCode}}\",\r\n        \"city\": \"{{customerAdrCity}}\",\r\n        \"latitude\": {{customerAdressLatitude}},\r\n        \"longitude\": {{customerAdressLongitude}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/person/customers",
							"host": [
								"{{url}}"
							],
							"path": [
								"person",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter un régime obligatoire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"mandatoryPlansId\", jsonData.data.identification);\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"identification is 1800144109133\", () => {\r",
									"    pm.expect(jsonData.data.identification).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"key is 88\", () => {\r",
									"    pm.expect(jsonData.data.key).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"//Testing if jsonData is an object\r",
									"pm.test(\"systemCode is 01\", () => {\r",
									"    pm.expect(jsonData.data.systemCode).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, [2000]);\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"activateNOEMIE\": true,\r\n    \"alsaceMoselle\": false,\r\n    \"birthDate\": \"{{35YearsAgo}}\",\r\n    \"effectiveDate\": \"{{5MonthsAgo}}\",\r\n    \"identification\": \"{{nir}}\",\r\n    \"identificationKey\": \"{{cleNir}}\",\r\n    \"key\": \"{{cleNir}}\",\r\n    \"number\": \"{{nir}}\",\r\n    \"centerCode\": \"000\",\r\n    \"organizationCode\": \"011\",\r\n    \"systemCode\": \"01\"\r\n}\r\n\r\n/*\r\n    \"centerCode\": \"{{codeCentreRO}}\",\r\n    \"organizationCode\": \"{{codeCaisseRO}}\",\r\n    */",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/mandatoryPlans",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"mandatoryPlans"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter un RIB à une personne physique",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, [2000]);\r",
									"\r",
									"var moment = require('moment');\r",
									"\r",
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('companyAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('companyAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('companyAdrStreet', window.faker.address.streetName());\r",
									"\r",
									"pm.collectionVariables.set('companyAdressNumber', _.random(1, 10));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201){\r",
									"    //getJson data\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    //Content type is json\r",
									"    pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    });\r",
									"\r",
									"    //Body of response is present by testing length of response\r",
									"    pm.test(\"Body is present\", () => {\r",
									"        jsonData.length > 1;\r",
									"    });\r",
									"\r",
									"    //Testing if jsonData is an object\r",
									"    pm.test(\"Test jsonData content\", () => {\r",
									"        pm.expect(jsonData).to.be.an(\"object\");\r",
									"\r",
									"    });\r",
									"\r",
									"    //testing bank information\r",
									"    pm.test(\"bank name is correct\", () => {\r",
									"        pm.expect(jsonData.data.bank).to.eql(\"Credit agricole\");\r",
									"    });\r",
									"\r",
									"    //testing iban information\r",
									"    pm.test(\"iban is correct\", () => {\r",
									"        pm.expect(jsonData.data.iban).to.eql(\"FR2012739000501327895759P67\");\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"personBankDetailsID\", jsonData.data.id)\r",
									"\r",
									"\r",
									"} else {\r",
									"    //status code is not 201\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"AGRIFRPP\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"activeUses\": [\r\n        {\r\n            \"code\": \"P\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/persons/:id/bankDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"persons",
								":id",
								"bankDetails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{customerPersonId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ajouter un RIB à une personne physique",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"iban\": \"FR2012739000501327895759P67\",\r\n    \"bic\": \"{{$randomBankAccountBic}}\",\r\n    \"bank\": \"Credit agricole\",\r\n    \"bankAddress1\": \"14 {{companyAdrStreet}}\",\r\n    \"bankAddress2\": \"Second RIB\",\r\n    \"zipCode\": \"{{companyAdrZipCode}}\",\r\n    \"city\": \"{{companyAdrCity}}\",\r\n    \"countryCode\": \"FR\",\r\n    \"activeUses\": [\"AU\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/persons/:id/bankDetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"persons",
										":id",
										"bankDetails"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{personID}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jan 2022 15:06:17 GMT"
								},
								{
									"key": "Server",
									"value": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 201,\n    \"data\": {\n        \"activeUses\": [\n            \"AU\"\n        ],\n        \"bank\": \"Credit agricole\",\n        \"bankAddress1\": \"14 725 Rue Baraban\",\n        \"bankAddress2\": \"Second RIB\",\n        \"bic\": \"HGMOSIQ1\",\n        \"city\": \"Nanterre\",\n        \"countryCode\": \"FR\",\n        \"creationDate\": \"2022-01-26T16:06:17+01:00\",\n        \"iban\": \"FR2012739000501327895759P67\",\n        \"id\": \"20000237\",\n        \"zipCode\": \"67271\"\n    },\n    \"status\": \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Nouveau devis indiv santé",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.collectionVariables.set(\"individualHealthQuoteId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"window = {};\r",
									"\r",
									"(new Function(pm.collectionVariables.get(\"fakerText\")))();\r",
									"\r",
									"window.faker.locale = \"fr\";\r",
									"\r",
									"pm.collectionVariables.set('contactEntrepriseName', window.faker.company.companyName());\r",
									"pm.collectionVariables.set('contactEntrepriseSupplementName', window.faker.company.companySuffix());\r",
									"\r",
									"pm.collectionVariables.set('contactAdrZipCode', window.faker.address.zipCode());\r",
									"pm.collectionVariables.set('contactAdrCity', window.faker.address.city());\r",
									"pm.collectionVariables.set('contactAdrStreet', window.faker.address.streetName());\r",
									"pm.collectionVariables.set('contactAdrLatitude', window.faker.address.latitude());\r",
									"pm.collectionVariables.set('contactAdrLongitude', window.faker.address.longitude());\r",
									"\r",
									"pm.collectionVariables.set('contactPhoneNumber', window.faker.phone.phoneNumber());\r",
									"pm.collectionVariables.set('contactEmail', window.faker.internet.exampleEmail());\r",
									"pm.collectionVariables.set('contactWebSite', window.faker.internet.url());\r",
									"\r",
									"pm.collectionVariables.set('contactExternalReference', window.faker.random.number());\r",
									"\r",
									"\r",
									"//NIR generator\r",
									"pm.collectionVariables.set(\"Sexe\", _.random(1, 2));\r",
									"pm.collectionVariables.set(\"AnneeNaissance\", _.random(10, 99));\r",
									"pm.collectionVariables.set(\"MoisNaissance\", \"0\" + _.random(1, 9));\r",
									"pm.collectionVariables.set(\"DepartementNaissance\", _.random(10, 80));\r",
									"pm.collectionVariables.set(\"InseeCommune\", _.random(100, 800));\r",
									"pm.collectionVariables.set(\"NumeroOrdre\", _.random(100, 999));\r",
									"\r",
									"pm.collectionVariables.set(\"nir\",pm.collectionVariables.get(\"Sexe\")+\"\"+pm.collectionVariables.get(\"AnneeNaissance\")+pm.collectionVariables.get(\"MoisNaissance\")+pm.collectionVariables.get(\"DepartementNaissance\")+pm.collectionVariables.get(\"InseeCommune\")+pm.collectionVariables.get(\"NumeroOrdre\"));\r",
									"var cleNir = 97 - (pm.collectionVariables.get(\"nir\") %97);\r",
									"if (cleNir < 10){\r",
									"    cleNir == 0 + \"\"+ cleNir;\r",
									"}\r",
									"pm.collectionVariables.set(\"cleNir\", cleNir);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\": \"{{customerId}}\",\r\n    \"productCode\": \"PSTS1\",\r\n    \"description\": \"Devis santé indiv API\",\r\n    \"status\": {\r\n        \"subcode\": \"01\",\r\n        \"effectiveDate\": \"{{lastYear}}\"\r\n    },\r\n    \"freeZones\": {\r\n        \"PPSPROD_PSTS1_ZL_AGE_ADHESION\": {\r\n            \"type\": \"NUMERIC\",\r\n            \"value\": \"35\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_DEPT_RESIDENCE\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"01\"\r\n        },\r\n        \"PPSPROD_PSTS1_ZL_STRUCTURE_COTISATION\": {\r\n            \"type\": \"STRING\",\r\n            \"value\": \"PPSPROD_PSTS1_IF\"\r\n        }\r\n    },\r\n    \"affiliate\": {\r\n        \"person\": {\r\n            \"id\": \"{{customerPersonId}}\"\r\n        },\r\n        \"formula\": \"CONFORT\"\r\n    },\r\n    \"payment\": {\r\n        \"bankDetailsUsageCode\": \"P\",\r\n        \"directDebitDay\": 5,\r\n        \"discountNonDeductedCommissionPayout\": true,\r\n        \"endorsementDiscountCode\": \"VA\",\r\n        \"endorsementNonDeductedCommissionPayout\": true,\r\n        \"endorsementPaymentCode\": \"PF\",\r\n        \"fiscalTerritory\": \"STD\",\r\n        \"newBusinessNonDeductedCommissionPayout\": true,\r\n        \"newBusinessPayer\": \"CUSTOMER\",\r\n        \"newBusinessPaymentCode\": \"PF\",\r\n        \"numberMonthsPaymentPeriod\": 12,\r\n        \"payerPersonId\": \"{{customerPersonId}}\",\r\n        \"periodicity\": \"ANNUAL\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Souscrire le contrat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"//get ID\r",
									"pm.environment.set(\"individualHealthContractId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id/subscribe",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id",
								"subscribe"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthQuoteId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulter le contrat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//getJson data\r",
									"let jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health/individual/contracts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"health",
								"individual",
								"contracts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{individualHealthContractId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const moment = require('moment');",
					"pm.collectionVariables.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"1YearLater\", moment().add(1, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"1MonthLater\", moment().add(30, 'days').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"6MonthsLater\", moment().add(180, 'days').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"1MonthAgo\", moment().add(-1, 'months').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"4MonthsAgo\", moment().add(-4, 'months').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"5MonthsAgo\", moment().add(-5, 'months').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"6MonthsAgo\", moment().add(-6, 'months').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"lastYear\", moment().add(-1, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"5YearsAgo\", moment().add(-5, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"10YearsAgo\", moment().add(-10, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"15YearsAgo\", moment().add(-15, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"20YearsAgo\", moment().add(-20, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"30YearsAgo\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"35YearsAgo\", moment().add(-35, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"40YearsAgo\", moment().add(-40, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"45YearsAgo\", moment().add(-45, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"50YearsAgo\", moment().add(-50, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"60YearsAgo\", moment().add(-60, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"70YearsAgo\", moment().add(-70, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"currentDateSearchFormat\", moment().format(\"YYYY/MM/DD\"));",
					"",
					"//Date de naissances",
					"pm.collectionVariables.set(\"birthDate10YearsAgo\", moment().add(-10, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate20YearsAgo\", moment().add(-20, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate30YearsAgo\", moment().add(-30, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate40YearsAgo\", moment().add(-40, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate50YearsAgo\", moment().add(-50, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate60YearsAgo\", moment().add(-60, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate70YearsAgo\", moment().add(-70, 'years').format(\"YYYY-MM-DD\"));",
					"pm.collectionVariables.set(\"birthDate80YearsAgo\", moment().add(-80, 'years').format(\"YYYY-MM-DD\"));",
					"",
					"//Default variables for GET Methods",
					"pm.collectionVariables.set(\"defaultOffset\", 0);",
					"pm.collectionVariables.set(\"defaultLimit\", 10);",
					"pm.collectionVariables.set(\"50_Limit\", 50);",
					"",
					"var useId = false;",
					"if (request.url.includes('/:id')){",
					"    useId == true;",
					"}",
					"",
					"checkFaker = pm.collectionVariables.has(\"fakerText\")",
					"if (checkFaker == false)",
					"{",
					"    pm.collectionVariables.set(\"fakerText\", \"\")",
					"    pm.collectionVariables.get(\"fakerText\");",
					"    console.log(\"vérification faker : \"+pm.collectionVariables.get(\"fakerText\").length);",
					"}",
					"",
					"if (pm.collectionVariables.get(\"fakerText\").length < 1){",
					"    pm.sendRequest(pm.environment.get(\"fakerUrl\"), (error, response) => {",
					"    pm.collectionVariables.set(\"fakerText\", response.text());",
					"    console.log(\"la librairie a du être chargée\");})",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (request.name != 'Connexion CLEVA' && request.name != 'Connexion Cleva'){",
					"",
					"    if (request.method == 'GET'){",
					"        pm.test(\"Status code is 200\", function () {",
					"            pm.response.to.have.status(200);",
					"        });",
					"        if (!request.url.includes('/settings/lists')&&!request.url.includes('/me')&&!request.url.includes('/system')&&pm.collectionVariables.get(\"useId\")==false){",
					"            pm.test(\"Limit is a number\", function () {",
					"                pm.expect(pm.response.json().limit).to.be.an(\"number\");",
					"            });",
					"            pm.test(\"resultSize is a number\", function () {",
					"                pm.expect(pm.response.json().resultSize).to.be.an(\"number\");",
					"            });",
					"            pm.test(\"offset is a number\", function () {",
					"                pm.expect(pm.response.json().offset).to.be.an(\"number\");",
					"            });  ",
					"        }",
					"    }",
					"",
					"    if (request.method == 'POST'){",
					"",
					"        pm.test(\"Successful POST request\", function () {",
					"            pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"        });",
					"    }",
					"",
					"    if (request.method == 'PUT'){",
					"        pm.test(\"Successful POST request\", function () {",
					"            pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"        });",
					"    }",
					"",
					"    if (request.method == 'PATCH'){",
					"",
					"        pm.test(\"Status code is 200\", function () {",
					"            pm.response.to.have.status(200);",
					"        });",
					"    }",
					"",
					"    if (pm.response.code == 200||pm.response.code == 201||pm.response.code == 202){",
					"        //Content type is json",
					"        pm.test(\"Content-Type header is application/json\", () => {",
					"        pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"        });",
					"",
					"        //getJson data",
					"        const jsonData = pm.response.json();",
					"",
					"        //Body of response is present by testing length of response",
					"        pm.test(\"Body is present\", () => {",
					"            jsonData.length > 1;",
					"        });",
					"",
					"        //Testing if jsonData is an object",
					"        pm.test(\"JsonData content\", () => {",
					"            pm.expect(jsonData).to.be.an(\"object\");",
					"        });",
					"    }",
					"",
					"}",
					"",
					"//Styles pour les listes",
					"if (request.url.includes('/settings/lists')){",
					"    pm.test(\"Code is a string\", function () {",
					"        pm.expect(pm.response.json().data.code).to.be.a(\"string\");",
					"    });",
					"    pm.test(\"description is a string\", function () {",
					"        pm.expect(pm.response.json().data.description).to.be.a(\"string\");",
					"    });",
					"    pm.test(\"moreResults is a boolean\", function () {",
					"        pm.expect(pm.response.json().data.moreResults).to.be.a(\"boolean\");",
					"    });",
					"    pm.test(\"title is a string\", function () {",
					"        pm.expect(pm.response.json().data.title).to.be.a(\"string\");",
					"    });",
					"    pm.test(\"type is a string\", function () {",
					"        pm.expect(pm.response.json().data.type).to.be.a(\"string\");",
					"    }); ",
					"    pm.visualizer.set(pm.collectionVariables.get(\"templateListes\"), {",
					"      response: pm.response.json()",
					"    });",
					"}",
					"",
					"//Tests de performance",
					"if (pm.environment.get(\"executePerformanceTests\") == 'true'){",
					"  if (request.method == 'GET'){",
					"    //Les listes doivent s'exécuter en moins de 500 ms",
					"    if (request.url.includes('/settings/lists')){",
					"        pm.test(\"Response time is less than 500ms\", function () {",
					"        pm.expect(pm.response.responseTime).to.be.below(500);",
					"       });",
					"    }else{",
					"        //Les recherches doivent s'exécuter en mois de une seconde et demi",
					"        pm.test(\"Response time is less than 1500ms\", function () {",
					"        pm.expect(pm.response.responseTime).to.be.below(1500);",
					"       });",
					"    }  ",
					"  }",
					"  if (request.method == 'POST'){",
					"       //Les POST doivent s'exécuter en moins de 2 secondes",
					"      pm.test(\"Response time is less than 2000ms\", function () {",
					"          pm.expect(pm.response.responseTime).to.be.below(2000);",
					"      });",
					"  }",
					"",
					"  if (request.method == 'PATCH'){",
					"      //Les PATCH doivent s'exécuter en moins de 2 secondes",
					"      pm.test(\"Response time is less than 2000ms\", function () {",
					"          pm.expect(pm.response.responseTime).to.be.below(2000);",
					"      });",
					"  }",
					"",
					"  if (request.method == 'PUT'){",
					"      //Les PUT doivent s'exécuter en moins de 2 secondes",
					"      pm.test(\"Response time is less than 2000ms\", function () {",
					"          pm.expect(pm.response.responseTime).to.be.below(2000);",
					"      });",
					"  }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "templateListes",
			"value": " <style type=\"text/css\">\n        .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\n        .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\n        .tftable tr {background-color:#ffffff;}\n        .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\n        .tftable tr:hover {background-color:#e0ffff;}\n    </style>\n    \n    <table class=\"tftable\" border=\"1\">\n        <tr>\n            <th>Code</th>\n            <th>Label</th>\n        </tr>\n        \n        {{#each response.data.values}}\n            <tr id=row_{{@key}} onClick=\"handleClick(this.code)\">\n                <td id={{@key}}>{{code}}</td>\n                <td>{{label}}</td>\n            </tr>\n        {{/each}}\n    </table>"
		},
		{
			"key": "dateDuJour",
			"value": ""
		},
		{
			"key": "dateDuJour_Plus_1_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Plus_6_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_1_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_6_Mois",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_5_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_10_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_15_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_20_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_30_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_35_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_40_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_45_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_50_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_60_Ans",
			"value": ""
		},
		{
			"key": "dateDuJour_Moins_70_Ans",
			"value": ""
		},
		{
			"key": "dateDuJourFormatRecherche",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "emailTestPrefixe",
			"value": ""
		},
		{
			"key": "emailTestAdresse",
			"value": ""
		},
		{
			"key": "brokerId",
			"value": ""
		},
		{
			"key": "personApporteurId",
			"value": ""
		},
		{
			"key": "loginApporteur",
			"value": ""
		},
		{
			"key": "profil",
			"value": ""
		},
		{
			"key": "productCode",
			"value": ""
		},
		{
			"key": "individualHealthStructureCotisation",
			"value": ""
		},
		{
			"key": "departementResidence",
			"value": ""
		},
		{
			"key": "customerDNaissance",
			"value": ""
		},
		{
			"key": "customerPhoneNumber",
			"value": ""
		},
		{
			"key": "streetAddress",
			"value": ""
		},
		{
			"key": "customerPersonFamilyName",
			"value": ""
		},
		{
			"key": "customerPersonFirstName",
			"value": ""
		},
		{
			"key": "customerEmail",
			"value": ""
		},
		{
			"key": "customerAdrZipCode",
			"value": ""
		},
		{
			"key": "customerAdrCity",
			"value": ""
		},
		{
			"key": "customerAdressLine1",
			"value": ""
		},
		{
			"key": "customerAdressLine2",
			"value": ""
		},
		{
			"key": "customerAdressLine3",
			"value": ""
		},
		{
			"key": "customerAdressLatitude",
			"value": ""
		},
		{
			"key": "customerAdressLongitude",
			"value": ""
		},
		{
			"key": "customerId",
			"value": ""
		},
		{
			"key": "customerPersonId",
			"value": ""
		},
		{
			"key": "customerPersonName",
			"value": ""
		},
		{
			"key": "customerPersonBirthDate",
			"value": ""
		},
		{
			"key": "customerPersonZipCode",
			"value": ""
		},
		{
			"key": "PGID1_Client_Banque",
			"value": ""
		},
		{
			"key": "bankZipCode",
			"value": ""
		},
		{
			"key": "bankAdrCity",
			"value": ""
		},
		{
			"key": "bankAdressLine1",
			"value": ""
		},
		{
			"key": "bankAdressLine2",
			"value": ""
		},
		{
			"key": "BankDetailsCustomerGAVId",
			"value": ""
		},
		{
			"key": "customerFamilyName",
			"value": ""
		},
		{
			"key": "customerFirstName",
			"value": ""
		},
		{
			"key": "customerGender",
			"value": ""
		},
		{
			"key": "customerPhone",
			"value": ""
		},
		{
			"key": "customerMail",
			"value": ""
		},
		{
			"key": "customerAdressNumber",
			"value": ""
		},
		{
			"key": "customerAdressStreetName",
			"value": ""
		},
		{
			"key": "folderName",
			"value": ""
		},
		{
			"key": "Sexe",
			"value": ""
		},
		{
			"key": "AnneeNaissance",
			"value": ""
		},
		{
			"key": "MoisNaissance",
			"value": ""
		},
		{
			"key": "DepartementNaissance",
			"value": ""
		},
		{
			"key": "InseeCommune",
			"value": ""
		},
		{
			"key": "NumeroOrdre",
			"value": ""
		},
		{
			"key": "nir",
			"value": ""
		},
		{
			"key": "cleNir",
			"value": ""
		},
		{
			"key": "contactEntrepriseName",
			"value": ""
		},
		{
			"key": "contactEntrepriseSupplementName",
			"value": ""
		},
		{
			"key": "contactAdrZipCode",
			"value": ""
		},
		{
			"key": "contactAdrCity",
			"value": ""
		},
		{
			"key": "contactAdrStreet",
			"value": ""
		},
		{
			"key": "contactAdrLatitude",
			"value": ""
		},
		{
			"key": "contactAdrLongitude",
			"value": ""
		},
		{
			"key": "contactPhoneNumber",
			"value": ""
		},
		{
			"key": "contactEmail",
			"value": ""
		},
		{
			"key": "contactWebSite",
			"value": ""
		},
		{
			"key": "contactExternalReference",
			"value": ""
		},
		{
			"key": "naf",
			"value": ""
		},
		{
			"key": "nafActivitesHospitalieres",
			"value": ""
		},
		{
			"key": "codeProduitSante",
			"value": ""
		},
		{
			"key": "codeProduitPrevoyance",
			"value": ""
		},
		{
			"key": "personTitles",
			"value": ""
		},
		{
			"key": "contactTitle",
			"value": ""
		},
		{
			"key": "countryCode",
			"value": ""
		},
		{
			"key": "jobCategories",
			"value": ""
		},
		{
			"key": "niveauSoclePSCS1",
			"value": ""
		},
		{
			"key": "typeCotisationSoclePSCS1",
			"value": ""
		},
		{
			"key": "codeAssIF",
			"value": ""
		},
		{
			"key": "codeAssAE",
			"value": ""
		},
		{
			"key": "typePrestataireConcentrateurCode",
			"value": ""
		},
		{
			"key": "typePrestataireConcentrateurLabel",
			"value": ""
		},
		{
			"key": "typePrestataireReseauSoinsCode",
			"value": ""
		},
		{
			"key": "typePrestataireReseauSoinsLabel",
			"value": ""
		},
		{
			"key": "codeRegimeGeneral",
			"value": ""
		},
		{
			"key": "codeCaisseRO",
			"value": ""
		},
		{
			"key": "codeCentreRO",
			"value": ""
		},
		{
			"key": "individualHealthQuoteId",
			"value": ""
		},
		{
			"key": "jobCategoryCode",
			"value": ""
		},
		{
			"key": "jobCode",
			"value": ""
		},
		{
			"key": "customerTitle",
			"value": ""
		},
		{
			"key": "customerCivilite",
			"value": ""
		},
		{
			"key": "spouseFamilyName",
			"value": ""
		},
		{
			"key": "spouseFirstName",
			"value": ""
		},
		{
			"key": "spouseGender",
			"value": ""
		},
		{
			"key": "spousePhone",
			"value": ""
		},
		{
			"key": "spouseMail",
			"value": ""
		},
		{
			"key": "sousNatureAvenentIndivSante",
			"value": ""
		},
		{
			"key": "individualHealthEndorsementSubnature",
			"value": ""
		},
		{
			"key": "currentDate",
			"value": ""
		},
		{
			"key": "1MonthLater",
			"value": ""
		},
		{
			"key": "6MonthsLater",
			"value": ""
		},
		{
			"key": "1MonthAgo",
			"value": ""
		},
		{
			"key": "4MonthsAgo",
			"value": ""
		},
		{
			"key": "5MonthsAgo",
			"value": ""
		},
		{
			"key": "6MonthsAgo",
			"value": ""
		},
		{
			"key": "lastYear",
			"value": ""
		},
		{
			"key": "5YearsAgo",
			"value": ""
		},
		{
			"key": "10YearsAgo",
			"value": ""
		},
		{
			"key": "15YearsAgo",
			"value": ""
		},
		{
			"key": "20YearsAgo",
			"value": ""
		},
		{
			"key": "30YearsAgo",
			"value": ""
		},
		{
			"key": "35YearsAgo",
			"value": ""
		},
		{
			"key": "40YearsAgo",
			"value": ""
		},
		{
			"key": "45YearsAgo",
			"value": ""
		},
		{
			"key": "50YearsAgo",
			"value": ""
		},
		{
			"key": "60YearsAgo",
			"value": ""
		},
		{
			"key": "70YearsAgo",
			"value": ""
		},
		{
			"key": "currentDateSearchFormat",
			"value": ""
		},
		{
			"key": "birthDate10YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate20YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate30YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate40YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate50YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate60YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate70YearsAgo",
			"value": ""
		},
		{
			"key": "birthDate80YearsAgo",
			"value": ""
		},
		{
			"key": "defaultOffset",
			"value": ""
		},
		{
			"key": "defaultLimit",
			"value": ""
		},
		{
			"key": "50_Limit",
			"value": ""
		},
		{
			"key": "companyAdrZipCode",
			"value": ""
		},
		{
			"key": "companyAdrCity",
			"value": ""
		},
		{
			"key": "companyAdressStreetName",
			"value": ""
		},
		{
			"key": "1YearLater",
			"value": ""
		},
		{
			"key": "BankDetailsCustomerId",
			"value": ""
		},
		{
			"key": "fakerText",
			"value": ""
		},
		{
			"key": "spouseBeneficiaryId",
			"value": ""
		},
		{
			"key": "adresseFiscaleId",
			"value": ""
		},
		{
			"key": "otherBankDetailsCustomerId",
			"value": ""
		},
		{
			"key": "mandatoryPlansId",
			"value": ""
		},
		{
			"key": "companyAdrStreet",
			"value": ""
		},
		{
			"key": "companyAdressNumber",
			"value": ""
		},
		{
			"key": "personBankDetailsID",
			"value": ""
		},
		{
			"key": "spouseEmail",
			"value": ""
		},
		{
			"key": "personFamilyName",
			"value": ""
		},
		{
			"key": "personFirstName",
			"value": ""
		},
		{
			"key": "personGender",
			"value": ""
		},
		{
			"key": "personAdrZipCode",
			"value": ""
		},
		{
			"key": "personAdrCity",
			"value": ""
		},
		{
			"key": "personAdressStreetName",
			"value": ""
		},
		{
			"key": "personPhone",
			"value": ""
		},
		{
			"key": "personMail",
			"value": ""
		},
		{
			"key": "personBirthDate",
			"value": ""
		},
		{
			"key": "personAdressNumber",
			"value": ""
		},
		{
			"key": "spousePersonId",
			"value": ""
		}
	]
}